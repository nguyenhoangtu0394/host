(self["webpackChunkclaim"] = self["webpackChunkclaim"] || []).push([["vendors-node_modules_react-navigation_elements_lib_module_index_js"], {
39429: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "Background", ({
    enumerable: true,
    get: function() {
        return Background;
    }
}));
var _interop_require_wildcard = __webpack_require__(83610);
var _object_spread = __webpack_require__(36192);
var _object_spread_props = __webpack_require__(83590);
var _object_without_properties = __webpack_require__(86136);
var _native = __webpack_require__(57102);
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var _reactnative = __webpack_require__(56300);
var _jsxruntime = __webpack_require__(70095);
function Background(_param) {
    var style = _param.style, rest = _object_without_properties._(_param, [
        "style"
    ]);
    var colors = (0, _native.useTheme)().colors;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Animated.View, _object_spread_props._(_object_spread._({}, rest), {
        style: [
            {
                flex: 1,
                backgroundColor: colors.background
            },
            style
        ]
    }));
} //# sourceMappingURL=Background.js.map


}),
94164: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "Button", ({
    enumerable: true,
    get: function() {
        return Button;
    }
}));
var _interop_require_default = __webpack_require__(66705);
var _interop_require_wildcard = __webpack_require__(83610);
var _object_spread = __webpack_require__(36192);
var _object_spread_props = __webpack_require__(83590);
var _object_without_properties = __webpack_require__(86136);
var _native = __webpack_require__(57102);
var _color = /*#__PURE__*/ _interop_require_default._(__webpack_require__(73706));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var _reactnative = __webpack_require__(56300);
var _PlatformPressable = __webpack_require__(78712);
var _Text = __webpack_require__(44625);
var _jsxruntime = __webpack_require__(70095);
var BUTTON_RADIUS = 40;
function Button(props) {
    if ('screen' in props || 'action' in props) {
        // @ts-expect-error: This is already type-checked by the prop types
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(ButtonLink, _object_spread._({}, props));
    } else {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(ButtonBase, _object_spread._({}, props));
    }
}
function ButtonLink(_param) {
    var screen = _param.screen, params = _param.params, action = _param.action, href = _param.href, rest = _object_without_properties._(_param, [
        "screen",
        "params",
        "action",
        "href"
    ]);
    // @ts-expect-error: This is already type-checked by the prop types
    var props = (0, _native.useLinkProps)({
        screen,
        params,
        action,
        href
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(ButtonBase, _object_spread._({}, rest, props));
}
function ButtonBase(_param) {
    var _param_variant = _param.variant, variant = _param_variant === void 0 ? 'tinted' : _param_variant, customColor = _param.color, android_ripple = _param.android_ripple, style = _param.style, children = _param.children, rest = _object_without_properties._(_param, [
        "variant",
        "color",
        "android_ripple",
        "style",
        "children"
    ]);
    var _useTheme = (0, _native.useTheme)(), colors = _useTheme.colors, fonts = _useTheme.fonts;
    var color = customColor ?? colors.primary;
    var backgroundColor;
    var textColor;
    switch(variant){
        case 'plain':
            backgroundColor = 'transparent';
            textColor = color;
            break;
        case 'tinted':
            backgroundColor = (0, _color.default)(color).fade(0.85).string();
            textColor = color;
            break;
        case 'filled':
            backgroundColor = color;
            textColor = (0, _color.default)(color).isDark() ? 'white' : (0, _color.default)(color).darken(0.71).string();
            break;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_PlatformPressable.PlatformPressable, _object_spread_props._(_object_spread._({}, rest), {
        android_ripple: _object_spread._({
            radius: BUTTON_RADIUS,
            color: (0, _color.default)(textColor).fade(0.85).string()
        }, android_ripple),
        pressOpacity: _reactnative.Platform.OS === 'ios' ? undefined : 1,
        hoverEffect: {
            color: textColor
        },
        style: [
            {
                backgroundColor
            },
            styles.button,
            style
        ],
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Text.Text, {
            style: [
                {
                    color: textColor
                },
                fonts.regular,
                styles.text
            ],
            children: children
        })
    }));
}
var styles = _reactnative.StyleSheet.create({
    button: {
        paddingHorizontal: 24,
        paddingVertical: 10,
        borderRadius: BUTTON_RADIUS
    },
    text: {
        fontSize: 14,
        lineHeight: 20,
        letterSpacing: 0.1,
        textAlign: 'center'
    }
}); //# sourceMappingURL=Button.js.map


}),
11418: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "Header", ({
    enumerable: true,
    get: function() {
        return Header;
    }
}));
var _interop_require_default = __webpack_require__(66705);
var _interop_require_wildcard = __webpack_require__(83610);
var _object_spread = __webpack_require__(36192);
var _object_spread_props = __webpack_require__(83590);
var _object_without_properties = __webpack_require__(86136);
var _sliced_to_array = __webpack_require__(78474);
var _native = __webpack_require__(57102);
var _color = /*#__PURE__*/ _interop_require_default._(__webpack_require__(73706));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var _reactnative = __webpack_require__(56300);
var _reactnativesafeareacontext = __webpack_require__(33481);
var _searchiconpng = /*#__PURE__*/ _interop_require_default._(__webpack_require__(67605));
var _getDefaultHeaderHeight = __webpack_require__(53284);
var _HeaderBackButton = __webpack_require__(37740);
var _HeaderBackground = __webpack_require__(22274);
var _HeaderButton = __webpack_require__(3829);
var _HeaderIcon = __webpack_require__(79953);
var _HeaderSearchBar = __webpack_require__(68122);
var _HeaderShownContext = __webpack_require__(65856);
var _HeaderTitle = __webpack_require__(69600);
var _jsxruntime = __webpack_require__(70095);
var IPAD_MINI_MEDIUM_WIDTH = 414;
var warnIfHeaderStylesDefined = (styles)=>{
    Object.keys(styles).forEach((styleProp)=>{
        var value = styles[styleProp];
        if (styleProp === 'position' && value === 'absolute') {
            console.warn("position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the 'headerTransparent' option.");
        } else if (value !== undefined) {
            console.warn(`${styleProp} was given a value of ${value}, this has no effect on headerStyle.`);
        }
    });
};
function Header(props) {
    var insets = (0, _reactnativesafeareacontext.useSafeAreaInsets)();
    var frame = (0, _reactnativesafeareacontext.useSafeAreaFrame)();
    var colors = (0, _native.useTheme)().colors;
    var navigation = (0, _native.useNavigation)();
    var isParentHeaderShown = _react.useContext(_HeaderShownContext.HeaderShownContext);
    var _React_useState = _sliced_to_array._(_react.useState(false), 2), searchBarVisible = _React_useState[0], setSearchBarVisible = _React_useState[1];
    var _React_useState1 = _sliced_to_array._(_react.useState(undefined), 2), titleLayout = _React_useState1[0], setTitleLayout = _React_useState1[1];
    var onTitleLayout = (e)=>{
        var _e_nativeEvent_layout = e.nativeEvent.layout, height = _e_nativeEvent_layout.height, width = _e_nativeEvent_layout.width;
        setTitleLayout((titleLayout)=>{
            if (titleLayout && height === titleLayout.height && width === titleLayout.width) {
                return titleLayout;
            }
            return {
                height,
                width
            };
        });
    };
    var _props_layout = props.layout, layout = _props_layout === void 0 ? frame : _props_layout, _props_modal = props.modal, modal = _props_modal === void 0 ? false : _props_modal, back = props.back, title = props.title, customTitle = props.headerTitle, _props_headerTitleAlign = props.headerTitleAlign, headerTitleAlign = _props_headerTitleAlign === void 0 ? _reactnative.Platform.OS === 'ios' ? 'center' : 'left' : _props_headerTitleAlign, _props_headerLeft = props.headerLeft, headerLeft = _props_headerLeft === void 0 ? back ? (props)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderBackButton.HeaderBackButton, _object_spread._({}, props)) : undefined : _props_headerLeft, headerSearchBarOptions = props.headerSearchBarOptions, headerTransparent = props.headerTransparent, headerTintColor = props.headerTintColor, headerBackground = props.headerBackground, headerRight = props.headerRight, titleAllowFontScaling = props.headerTitleAllowFontScaling, titleStyle = props.headerTitleStyle, leftContainerStyle = props.headerLeftContainerStyle, rightContainerStyle = props.headerRightContainerStyle, titleContainerStyle = props.headerTitleContainerStyle, _props_headerBackButtonDisplayMode = props.headerBackButtonDisplayMode, headerBackButtonDisplayMode = _props_headerBackButtonDisplayMode === void 0 ? _reactnative.Platform.OS === 'ios' ? 'default' : 'minimal' : _props_headerBackButtonDisplayMode, headerBackTitleStyle = props.headerBackTitleStyle, backgroundContainerStyle = props.headerBackgroundContainerStyle, customHeaderStyle = props.headerStyle, headerShadowVisible = props.headerShadowVisible, headerPressColor = props.headerPressColor, headerPressOpacity = props.headerPressOpacity, _props_headerStatusBarHeight = props.headerStatusBarHeight, headerStatusBarHeight = _props_headerStatusBarHeight === void 0 ? isParentHeaderShown ? 0 : insets.top : _props_headerStatusBarHeight;
    var defaultHeight = (0, _getDefaultHeaderHeight.getDefaultHeaderHeight)(layout, modal, headerStatusBarHeight);
    var _StyleSheet_flatten = _reactnative.StyleSheet.flatten(customHeaderStyle || {}), _StyleSheet_flatten_height = _StyleSheet_flatten.height, height = _StyleSheet_flatten_height === void 0 ? defaultHeight : _StyleSheet_flatten_height, minHeight = _StyleSheet_flatten.minHeight, maxHeight = _StyleSheet_flatten.maxHeight, backgroundColor = _StyleSheet_flatten.backgroundColor, borderBottomColor = _StyleSheet_flatten.borderBottomColor, borderBottomEndRadius = _StyleSheet_flatten.borderBottomEndRadius, borderBottomLeftRadius = _StyleSheet_flatten.borderBottomLeftRadius, borderBottomRightRadius = _StyleSheet_flatten.borderBottomRightRadius, borderBottomStartRadius = _StyleSheet_flatten.borderBottomStartRadius, borderBottomWidth = _StyleSheet_flatten.borderBottomWidth, borderColor = _StyleSheet_flatten.borderColor, borderEndColor = _StyleSheet_flatten.borderEndColor, borderEndWidth = _StyleSheet_flatten.borderEndWidth, borderLeftColor = _StyleSheet_flatten.borderLeftColor, borderLeftWidth = _StyleSheet_flatten.borderLeftWidth, borderRadius = _StyleSheet_flatten.borderRadius, borderRightColor = _StyleSheet_flatten.borderRightColor, borderRightWidth = _StyleSheet_flatten.borderRightWidth, borderStartColor = _StyleSheet_flatten.borderStartColor, borderStartWidth = _StyleSheet_flatten.borderStartWidth, borderStyle = _StyleSheet_flatten.borderStyle, borderTopColor = _StyleSheet_flatten.borderTopColor, borderTopEndRadius = _StyleSheet_flatten.borderTopEndRadius, borderTopLeftRadius = _StyleSheet_flatten.borderTopLeftRadius, borderTopRightRadius = _StyleSheet_flatten.borderTopRightRadius, borderTopStartRadius = _StyleSheet_flatten.borderTopStartRadius, borderTopWidth = _StyleSheet_flatten.borderTopWidth, borderWidth = _StyleSheet_flatten.borderWidth, boxShadow = _StyleSheet_flatten.boxShadow, elevation = _StyleSheet_flatten.elevation, shadowColor = _StyleSheet_flatten.shadowColor, shadowOffset = _StyleSheet_flatten.shadowOffset, shadowOpacity = _StyleSheet_flatten.shadowOpacity, shadowRadius = _StyleSheet_flatten.shadowRadius, opacity = _StyleSheet_flatten.opacity, transform = _StyleSheet_flatten.transform, unsafeStyles = _object_without_properties._(_StyleSheet_flatten, [
        "height",
        "minHeight",
        "maxHeight",
        "backgroundColor",
        "borderBottomColor",
        "borderBottomEndRadius",
        "borderBottomLeftRadius",
        "borderBottomRightRadius",
        "borderBottomStartRadius",
        "borderBottomWidth",
        "borderColor",
        "borderEndColor",
        "borderEndWidth",
        "borderLeftColor",
        "borderLeftWidth",
        "borderRadius",
        "borderRightColor",
        "borderRightWidth",
        "borderStartColor",
        "borderStartWidth",
        "borderStyle",
        "borderTopColor",
        "borderTopEndRadius",
        "borderTopLeftRadius",
        "borderTopRightRadius",
        "borderTopStartRadius",
        "borderTopWidth",
        "borderWidth",
        "boxShadow",
        "elevation",
        "shadowColor",
        "shadowOffset",
        "shadowOpacity",
        "shadowRadius",
        "opacity",
        "transform"
    ]);
    if (false) {}
    var safeStyles = {
        backgroundColor,
        borderBottomColor,
        borderBottomEndRadius,
        borderBottomLeftRadius,
        borderBottomRightRadius,
        borderBottomStartRadius,
        borderBottomWidth,
        borderColor,
        borderEndColor,
        borderEndWidth,
        borderLeftColor,
        borderLeftWidth,
        borderRadius,
        borderRightColor,
        borderRightWidth,
        borderStartColor,
        borderStartWidth,
        borderStyle,
        borderTopColor,
        borderTopEndRadius,
        borderTopLeftRadius,
        borderTopRightRadius,
        borderTopStartRadius,
        borderTopWidth,
        borderWidth,
        boxShadow,
        elevation,
        shadowColor,
        shadowOffset,
        shadowOpacity,
        shadowRadius,
        opacity,
        transform
    };
    // Setting a property to undefined triggers default style
    // So we need to filter them out
    // Users can use `null` instead
    for(var styleProp in safeStyles){
        // @ts-expect-error: typescript wrongly complains that styleProp cannot be used to index safeStyles
        if (safeStyles[styleProp] === undefined) {
            // @ts-expect-error don't need to care about index signature for deletion
            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete
            delete safeStyles[styleProp];
        }
    }
    var backgroundStyle = _object_spread._({}, headerTransparent && {
        backgroundColor: 'transparent'
    }, (headerTransparent || headerShadowVisible === false) && _object_spread._({
        borderBottomWidth: 0
    }, _reactnative.Platform.select({
        android: {
            elevation: 0
        },
        web: {
            boxShadow: 'none'
        },
        default: {
            shadowOpacity: 0
        }
    })), safeStyles);
    var iconTintColor = headerTintColor ?? _reactnative.Platform.select({
        ios: colors.primary,
        default: colors.text
    });
    var leftButton = headerLeft ? headerLeft({
        tintColor: iconTintColor,
        pressColor: headerPressColor,
        pressOpacity: headerPressOpacity,
        displayMode: headerBackButtonDisplayMode,
        titleLayout,
        screenLayout: layout,
        canGoBack: Boolean(back),
        onPress: back ? navigation.goBack : undefined,
        label: back === null || back === void 0 ? void 0 : back.title,
        labelStyle: headerBackTitleStyle,
        href: back === null || back === void 0 ? void 0 : back.href
    }) : null;
    var rightButton = headerRight ? headerRight({
        tintColor: iconTintColor,
        pressColor: headerPressColor,
        pressOpacity: headerPressOpacity,
        canGoBack: Boolean(back)
    }) : null;
    var headerTitle = typeof customTitle !== 'function' ? (props)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderTitle.HeaderTitle, _object_spread._({}, props)) : customTitle;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactnative.Animated.View, {
        pointerEvents: "box-none",
        style: [
            {
                height,
                minHeight,
                maxHeight,
                opacity,
                transform
            }
        ],
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Animated.View, {
                pointerEvents: "box-none",
                style: [
                    _reactnative.StyleSheet.absoluteFill,
                    backgroundContainerStyle
                ],
                children: headerBackground ? headerBackground({
                    style: backgroundStyle
                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderBackground.HeaderBackground, {
                    pointerEvents: // Allow touch through the header when background color is transparent
                    headerTransparent && (backgroundStyle.backgroundColor === 'transparent' || (0, _color.default)(backgroundStyle.backgroundColor).alpha() === 0) ? 'none' : 'auto',
                    style: backgroundStyle
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.View, {
                pointerEvents: "none",
                style: {
                    height: headerStatusBarHeight
                }
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactnative.View, {
                pointerEvents: "box-none",
                style: [
                    styles.content,
                    _reactnative.Platform.OS === 'ios' && frame.width >= IPAD_MINI_MEDIUM_WIDTH ? styles.large : null
                ],
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Animated.View, {
                        pointerEvents: "box-none",
                        style: [
                            styles.start,
                            !searchBarVisible && headerTitleAlign === 'center' && styles.expand,
                            {
                                marginStart: insets.left
                            },
                            leftContainerStyle
                        ],
                        children: leftButton
                    }),
                    _reactnative.Platform.OS === 'ios' || !searchBarVisible ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Animated.View, {
                                pointerEvents: "box-none",
                                style: [
                                    styles.title,
                                    {
                                        // Avoid the title from going offscreen or overlapping buttons
                                        maxWidth: headerTitleAlign === 'center' ? layout.width - ((leftButton ? headerBackButtonDisplayMode !== 'minimal' ? 80 : 32 : 16) + (rightButton || headerSearchBarOptions ? 16 : 0) + Math.max(insets.left, insets.right)) * 2 : layout.width - ((leftButton ? 52 : 16) + (rightButton || headerSearchBarOptions ? 52 : 16) + insets.left - insets.right)
                                    },
                                    headerTitleAlign === 'left' && leftButton ? {
                                        marginStart: 4
                                    } : {
                                        marginHorizontal: 16
                                    },
                                    titleContainerStyle
                                ],
                                children: headerTitle({
                                    children: title,
                                    allowFontScaling: titleAllowFontScaling,
                                    tintColor: headerTintColor,
                                    onLayout: onTitleLayout,
                                    style: titleStyle
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactnative.Animated.View, {
                                pointerEvents: "box-none",
                                style: [
                                    styles.end,
                                    styles.expand,
                                    {
                                        marginEnd: insets.right
                                    },
                                    rightContainerStyle
                                ],
                                children: [
                                    rightButton,
                                    headerSearchBarOptions ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderButton.HeaderButton, {
                                        tintColor: iconTintColor,
                                        pressColor: headerPressColor,
                                        pressOpacity: headerPressOpacity,
                                        onPress: ()=>{
                                            var _headerSearchBarOptions_onOpen;
                                            setSearchBarVisible(true);
                                            headerSearchBarOptions === null || headerSearchBarOptions === void 0 ? void 0 : (_headerSearchBarOptions_onOpen = headerSearchBarOptions.onOpen) === null || _headerSearchBarOptions_onOpen === void 0 ? void 0 : _headerSearchBarOptions_onOpen.call(headerSearchBarOptions);
                                        },
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderIcon.HeaderIcon, {
                                            source: _searchiconpng.default,
                                            tintColor: iconTintColor
                                        })
                                    }) : null
                                ]
                            })
                        ]
                    }) : null,
                    _reactnative.Platform.OS === 'ios' || searchBarVisible ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderSearchBar.HeaderSearchBar, _object_spread_props._(_object_spread._({}, headerSearchBarOptions), {
                        visible: searchBarVisible,
                        onClose: ()=>{
                            var _headerSearchBarOptions_onClose;
                            setSearchBarVisible(false);
                            headerSearchBarOptions === null || headerSearchBarOptions === void 0 ? void 0 : (_headerSearchBarOptions_onClose = headerSearchBarOptions.onClose) === null || _headerSearchBarOptions_onClose === void 0 ? void 0 : _headerSearchBarOptions_onClose.call(headerSearchBarOptions);
                        },
                        tintColor: headerTintColor,
                        style: [
                            _reactnative.Platform.OS === 'ios' ? [
                                _reactnative.StyleSheet.absoluteFill,
                                {
                                    paddingTop: headerStatusBarHeight ? 0 : 4
                                },
                                {
                                    backgroundColor: backgroundColor ?? colors.card
                                }
                            ] : !leftButton && {
                                marginStart: 8
                            }
                        ]
                    })) : null
                ]
            })
        ]
    });
}
var styles = _reactnative.StyleSheet.create({
    content: {
        flex: 1,
        flexDirection: 'row',
        alignItems: 'stretch'
    },
    large: {
        marginHorizontal: 5
    },
    title: {
        justifyContent: 'center'
    },
    start: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'flex-start'
    },
    end: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'flex-end'
    },
    expand: {
        flexGrow: 1,
        flexBasis: 0
    }
}); //# sourceMappingURL=Header.js.map


}),
37740: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "HeaderBackButton", ({
    enumerable: true,
    get: function() {
        return HeaderBackButton;
    }
}));
var _interop_require_default = __webpack_require__(66705);
var _interop_require_wildcard = __webpack_require__(83610);
var _object_spread = __webpack_require__(36192);
var _sliced_to_array = __webpack_require__(78474);
var _native = __webpack_require__(57102);
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var _reactnative = __webpack_require__(56300);
var _backiconpng = /*#__PURE__*/ _interop_require_default._(__webpack_require__(14312));
var _backiconmaskpng = /*#__PURE__*/ _interop_require_default._(__webpack_require__(74721));
var _MaskedView = __webpack_require__(611);
var _HeaderButton = __webpack_require__(3829);
var _HeaderIcon = __webpack_require__(79953);
var _jsxruntime = __webpack_require__(70095);
function HeaderBackButton(ref) {
    var disabled = ref.disabled, allowFontScaling = ref.allowFontScaling, backImage = ref.backImage, label = ref.label, labelStyle = ref.labelStyle, _ref_displayMode = ref.displayMode, displayMode = _ref_displayMode === void 0 ? _reactnative.Platform.OS === 'ios' ? 'default' : 'minimal' : _ref_displayMode, onLabelLayout = ref.onLabelLayout, onPress = ref.onPress, pressColor = ref.pressColor, pressOpacity = ref.pressOpacity, screenLayout = ref.screenLayout, tintColor = ref.tintColor, titleLayout = ref.titleLayout, _ref_truncatedLabel = ref.truncatedLabel, truncatedLabel = _ref_truncatedLabel === void 0 ? 'Back' : _ref_truncatedLabel, _ref_accessibilityLabel = ref.accessibilityLabel, accessibilityLabel = _ref_accessibilityLabel === void 0 ? label && label !== 'Back' ? `${label}, back` : 'Go back' : _ref_accessibilityLabel, testID = ref.testID, style = ref.style, href = ref.href;
    var _useTheme = (0, _native.useTheme)(), colors = _useTheme.colors, fonts = _useTheme.fonts;
    var direction = (0, _native.useLocale)().direction;
    var _React_useState = _sliced_to_array._(_react.useState(null), 2), labelWidth = _React_useState[0], setLabelWidth = _React_useState[1];
    var _React_useState1 = _sliced_to_array._(_react.useState(null), 2), truncatedLabelWidth = _React_useState1[0], setTruncatedLabelWidth = _React_useState1[1];
    var renderBackImage = ()=>{
        if (backImage) {
            return backImage({
                tintColor: tintColor ?? colors.text
            });
        } else {
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderIcon.HeaderIcon, {
                source: _backiconpng.default,
                tintColor: tintColor,
                style: [
                    styles.icon,
                    displayMode !== 'minimal' && styles.iconWithLabel
                ]
            });
        }
    };
    var renderLabel = ()=>{
        if (displayMode === 'minimal') {
            return null;
        }
        var availableSpace = titleLayout && screenLayout ? (screenLayout.width - titleLayout.width) / 2 - (ICON_WIDTH + _HeaderIcon.ICON_MARGIN) : null;
        var potentialLabelText = displayMode === 'default' ? label : truncatedLabel;
        var finalLabelText = availableSpace && labelWidth && truncatedLabelWidth ? availableSpace > labelWidth ? potentialLabelText : availableSpace > truncatedLabelWidth ? truncatedLabel : null : potentialLabelText;
        var commonStyle = [
            fonts.regular,
            styles.label,
            labelStyle
        ];
        var hiddenStyle = [
            commonStyle,
            {
                position: 'absolute',
                top: 0,
                left: 0,
                opacity: 0
            }
        ];
        var labelElement = /*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactnative.View, {
            style: styles.labelWrapper,
            children: [
                label && displayMode === 'default' ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Animated.Text, {
                    style: hiddenStyle,
                    numberOfLines: 1,
                    onLayout: (e)=>setLabelWidth(e.nativeEvent.layout.width),
                    children: label
                }) : null,
                truncatedLabel ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Animated.Text, {
                    style: hiddenStyle,
                    numberOfLines: 1,
                    onLayout: (e)=>setTruncatedLabelWidth(e.nativeEvent.layout.width),
                    children: truncatedLabel
                }) : null,
                finalLabelText ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Animated.Text, {
                    accessible: false,
                    onLayout: onLabelLayout,
                    style: [
                        tintColor ? {
                            color: tintColor
                        } : null,
                        commonStyle
                    ],
                    numberOfLines: 1,
                    allowFontScaling: !!allowFontScaling,
                    children: finalLabelText
                }) : null
            ]
        });
        if (backImage || _reactnative.Platform.OS !== 'ios') {
            // When a custom backimage is specified, we can't mask the label
            // Otherwise there might be weird effect due to our mask not being the same as the image
            return labelElement;
        }
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_MaskedView.MaskedView, {
            maskElement: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactnative.View, {
                style: [
                    styles.iconMaskContainer,
                    // Extend the mask to the center of the screen so that label isn't clipped during animation
                    screenLayout ? {
                        minWidth: screenLayout.width / 2 - 27
                    } : null
                ],
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Image, {
                        source: _backiconmaskpng.default,
                        resizeMode: "contain",
                        style: [
                            styles.iconMask,
                            direction === 'rtl' && styles.flip
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.View, {
                        style: styles.iconMaskFillerRect
                    })
                ]
            }),
            children: labelElement
        });
    };
    var handlePress = ()=>{
        if (onPress) {
            requestAnimationFrame(()=>onPress());
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderButton.HeaderButton, {
        disabled: disabled,
        href: href,
        accessibilityLabel: accessibilityLabel,
        testID: testID,
        onPress: handlePress,
        pressColor: pressColor,
        pressOpacity: pressOpacity,
        style: [
            styles.container,
            style
        ],
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Fragment, {
            children: [
                renderBackImage(),
                renderLabel()
            ]
        })
    });
}
var ICON_WIDTH = _reactnative.Platform.OS === 'ios' ? 13 : 24;
var ICON_MARGIN_END = _reactnative.Platform.OS === 'ios' ? 22 : 3;
var styles = _reactnative.StyleSheet.create({
    container: _object_spread._({
        paddingHorizontal: 0,
        minWidth: _reactnative.StyleSheet.hairlineWidth
    }, _reactnative.Platform.select({
        ios: null,
        default: {
            marginVertical: 3,
            marginHorizontal: 11
        }
    })),
    label: {
        fontSize: 17,
        // Title and back label are a bit different width due to title being bold
        // Adjusting the letterSpacing makes them coincide better
        letterSpacing: 0.35
    },
    labelWrapper: {
        // These styles will make sure that the label doesn't fill the available space
        // Otherwise it messes with the measurement of the label
        flexDirection: 'row',
        alignItems: 'flex-start',
        marginEnd: _HeaderIcon.ICON_MARGIN
    },
    icon: {
        width: ICON_WIDTH,
        marginEnd: ICON_MARGIN_END
    },
    iconWithLabel: _reactnative.Platform.OS === 'ios' ? {
        marginEnd: 6
    } : {},
    iconMaskContainer: {
        flex: 1,
        flexDirection: 'row',
        justifyContent: 'center'
    },
    iconMaskFillerRect: {
        flex: 1,
        backgroundColor: '#000'
    },
    iconMask: {
        height: 21,
        width: 13,
        marginStart: -14.5,
        marginVertical: 12,
        alignSelf: 'center'
    },
    flip: {
        transform: 'scaleX(-1)'
    }
}); //# sourceMappingURL=HeaderBackButton.js.map


}),
54607: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "HeaderBackContext", ({
    enumerable: true,
    get: function() {
        return HeaderBackContext;
    }
}));
var _getNamedContext = __webpack_require__(80569);
var HeaderBackContext = (0, _getNamedContext.getNamedContext)('HeaderBackContext', undefined); //# sourceMappingURL=HeaderBackContext.js.map


}),
22274: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "HeaderBackground", ({
    enumerable: true,
    get: function() {
        return HeaderBackground;
    }
}));
var _interop_require_wildcard = __webpack_require__(83610);
var _object_spread = __webpack_require__(36192);
var _object_without_properties = __webpack_require__(86136);
var _native = __webpack_require__(57102);
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var _reactnative = __webpack_require__(56300);
var _jsxruntime = __webpack_require__(70095);
function HeaderBackground(_param) {
    var style = _param.style, rest = _object_without_properties._(_param, [
        "style"
    ]);
    var _useTheme = (0, _native.useTheme)(), colors = _useTheme.colors, dark = _useTheme.dark;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Animated.View, _object_spread._({
        style: [
            styles.container,
            _object_spread._({
                backgroundColor: colors.card,
                borderBottomColor: colors.border
            }, _reactnative.Platform.OS === 'ios' && {
                shadowColor: dark ? 'rgba(255, 255, 255, 0.45)' : 'rgba(0, 0, 0, 1)'
            }),
            style
        ]
    }, rest));
}
var styles = _reactnative.StyleSheet.create({
    container: _object_spread._({
        flex: 1
    }, _reactnative.Platform.select({
        android: {
            elevation: 4
        },
        ios: {
            shadowOpacity: 0.3,
            shadowRadius: 0,
            shadowOffset: {
                width: 0,
                height: _reactnative.StyleSheet.hairlineWidth
            }
        },
        default: {
            borderBottomWidth: _reactnative.StyleSheet.hairlineWidth
        }
    }))
}); //# sourceMappingURL=HeaderBackground.js.map


}),
3829: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "HeaderButton", ({
    enumerable: true,
    get: function() {
        return HeaderButton;
    }
}));
var _reactnative = __webpack_require__(56300);
var _PlatformPressable = __webpack_require__(78712);
var _jsxruntime = __webpack_require__(70095);
function HeaderButton(ref) {
    var disabled = ref.disabled, onPress = ref.onPress, pressColor = ref.pressColor, pressOpacity = ref.pressOpacity, accessibilityLabel = ref.accessibilityLabel, testID = ref.testID, style = ref.style, href = ref.href, children = ref.children;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_PlatformPressable.PlatformPressable, {
        disabled: disabled,
        href: href,
        accessibilityLabel: accessibilityLabel,
        testID: testID,
        onPress: onPress,
        pressColor: pressColor,
        pressOpacity: pressOpacity,
        android_ripple: androidRipple,
        style: [
            styles.container,
            disabled && styles.disabled,
            style
        ],
        hitSlop: _reactnative.Platform.select({
            ios: undefined,
            default: {
                top: 16,
                right: 16,
                bottom: 16,
                left: 16
            }
        }),
        children: children
    });
}
var androidRipple = {
    borderless: true,
    foreground: _reactnative.Platform.OS === 'android' && _reactnative.Platform.Version >= 23,
    radius: 20
};
var styles = _reactnative.StyleSheet.create({
    container: {
        flexDirection: 'row',
        alignItems: 'center',
        paddingHorizontal: 8,
        // Roundness for iPad hover effect
        borderRadius: 10
    },
    disabled: {
        opacity: 0.5
    }
}); //# sourceMappingURL=HeaderButton.js.map


}),
77235: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "HeaderHeightContext", ({
    enumerable: true,
    get: function() {
        return HeaderHeightContext;
    }
}));
var _getNamedContext = __webpack_require__(80569);
var HeaderHeightContext = (0, _getNamedContext.getNamedContext)('HeaderHeightContext', undefined); //# sourceMappingURL=HeaderHeightContext.js.map


}),
79953: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    HeaderIcon: function() {
        return HeaderIcon;
    },
    ICON_MARGIN: function() {
        return ICON_MARGIN;
    },
    ICON_SIZE: function() {
        return ICON_SIZE;
    }
});
var _object_spread = __webpack_require__(36192);
var _object_without_properties = __webpack_require__(86136);
var _native = __webpack_require__(57102);
var _reactnative = __webpack_require__(56300);
var _jsxruntime = __webpack_require__(70095);
function HeaderIcon(_param) {
    var source = _param.source, style = _param.style, rest = _object_without_properties._(_param, [
        "source",
        "style"
    ]);
    var colors = (0, _native.useTheme)().colors;
    var direction = (0, _native.useLocale)().direction;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Image, _object_spread._({
        source: source,
        resizeMode: "contain",
        fadeDuration: 0,
        tintColor: colors.text,
        style: [
            styles.icon,
            direction === 'rtl' && styles.flip,
            style
        ]
    }, rest));
}
var ICON_SIZE = _reactnative.Platform.OS === 'ios' ? 21 : 24;
var ICON_MARGIN = _reactnative.Platform.OS === 'ios' ? 8 : 3;
var styles = _reactnative.StyleSheet.create({
    icon: {
        width: ICON_SIZE,
        height: ICON_SIZE,
        margin: ICON_MARGIN
    },
    flip: {
        transform: 'scaleX(-1)'
    }
}); //# sourceMappingURL=HeaderIcon.js.map


}),
68122: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "HeaderSearchBar", ({
    enumerable: true,
    get: function() {
        return HeaderSearchBar;
    }
}));
var _interop_require_default = __webpack_require__(66705);
var _interop_require_wildcard = __webpack_require__(83610);
var _object_spread = __webpack_require__(36192);
var _object_spread_props = __webpack_require__(83590);
var _object_without_properties = __webpack_require__(86136);
var _sliced_to_array = __webpack_require__(78474);
var _native = __webpack_require__(57102);
var _color = /*#__PURE__*/ _interop_require_default._(__webpack_require__(73706));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var _reactnative = __webpack_require__(56300);
var _cleariconpng = /*#__PURE__*/ _interop_require_default._(__webpack_require__(79366));
var _closeiconpng = /*#__PURE__*/ _interop_require_default._(__webpack_require__(72530));
var _searchiconpng = /*#__PURE__*/ _interop_require_default._(__webpack_require__(67605));
var _PlatformPressable = __webpack_require__(78712);
var _Text = __webpack_require__(44625);
var _HeaderButton = __webpack_require__(3829);
var _HeaderIcon = __webpack_require__(79953);
var _jsxruntime = __webpack_require__(70095);
var INPUT_TYPE_TO_MODE = {
    text: 'text',
    number: 'numeric',
    phone: 'tel',
    email: 'email'
};
var useNativeDriver = _reactnative.Platform.OS !== 'web';
function HeaderSearchBarInternal(_param, ref) {
    var visible = _param.visible, inputType = _param.inputType, _param_autoFocus = _param.autoFocus, autoFocus = _param_autoFocus === void 0 ? true : _param_autoFocus, _param_placeholder = _param.placeholder, placeholder = _param_placeholder === void 0 ? 'Search' : _param_placeholder, _param_cancelButtonText = _param.cancelButtonText, cancelButtonText = _param_cancelButtonText === void 0 ? 'Cancel' : _param_cancelButtonText, _param_enterKeyHint = _param.enterKeyHint, enterKeyHint = _param_enterKeyHint === void 0 ? 'search' : _param_enterKeyHint, onChangeText = _param.onChangeText, onClose = _param.onClose, tintColor = _param.tintColor, style = _param.style, rest = _object_without_properties._(_param, [
        "visible",
        "inputType",
        "autoFocus",
        "placeholder",
        "cancelButtonText",
        "enterKeyHint",
        "onChangeText",
        "onClose",
        "tintColor",
        "style"
    ]);
    var navigation = (0, _native.useNavigation)();
    var _useTheme = (0, _native.useTheme)(), dark = _useTheme.dark, colors = _useTheme.colors, fonts = _useTheme.fonts;
    var _React_useState = _sliced_to_array._(_react.useState(''), 2), value = _React_useState[0], setValue = _React_useState[1];
    var _React_useState1 = _sliced_to_array._(_react.useState(visible), 2), rendered = _React_useState1[0], setRendered = _React_useState1[1];
    var _React_useState2 = _sliced_to_array._(_react.useState(()=>new _reactnative.Animated.Value(visible ? 1 : 0)), 1), visibleAnim = _React_useState2[0];
    var _React_useState3 = _sliced_to_array._(_react.useState(()=>new _reactnative.Animated.Value(0)), 1), clearVisibleAnim = _React_useState3[0];
    var visibleValueRef = _react.useRef(visible);
    var clearVisibleValueRef = _react.useRef(false);
    var inputRef = _react.useRef(null);
    _react.useEffect(()=>{
        // Avoid act warning in tests just by rendering header
        if (visible === visibleValueRef.current) {
            return;
        }
        _reactnative.Animated.timing(visibleAnim, {
            toValue: visible ? 1 : 0,
            duration: 100,
            useNativeDriver
        }).start((ref)=>{
            var finished = ref.finished;
            if (finished) {
                setRendered(visible);
                visibleValueRef.current = visible;
            }
        });
        return ()=>{
            visibleAnim.stopAnimation();
        };
    }, [
        visible,
        visibleAnim
    ]);
    var hasText = value !== '';
    _react.useEffect(()=>{
        if (clearVisibleValueRef.current === hasText) {
            return;
        }
        _reactnative.Animated.timing(clearVisibleAnim, {
            toValue: hasText ? 1 : 0,
            duration: 100,
            useNativeDriver
        }).start((ref)=>{
            var finished = ref.finished;
            if (finished) {
                clearVisibleValueRef.current = hasText;
            }
        });
    }, [
        clearVisibleAnim,
        hasText
    ]);
    var clearText = _react.useCallback(()=>{
        var _inputRef_current, _inputRef_current1;
        (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.clear();
        (_inputRef_current1 = inputRef.current) === null || _inputRef_current1 === void 0 ? void 0 : _inputRef_current1.focus();
        setValue('');
    }, []);
    var onClear = _react.useCallback(()=>{
        clearText();
        // FIXME: figure out how to create a SyntheticEvent
        // @ts-expect-error: we don't have the native event here
        onChangeText === null || onChangeText === void 0 ? void 0 : onChangeText({
            nativeEvent: {
                text: ''
            }
        });
    }, [
        clearText,
        onChangeText
    ]);
    var cancelSearch = _react.useCallback(()=>{
        onClear();
        onClose();
    }, [
        onClear,
        onClose
    ]);
    _react.useEffect(()=>navigation === null || navigation === void 0 ? void 0 : navigation.addListener('blur', cancelSearch), [
        cancelSearch,
        navigation
    ]);
    _react.useImperativeHandle(ref, ()=>({
            focus: ()=>{
                var _inputRef_current;
                (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();
            },
            blur: ()=>{
                var _inputRef_current;
                (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.blur();
            },
            setText: (text)=>{
                var _inputRef_current;
                (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.setNativeProps({
                    text
                });
                setValue(text);
            },
            clearText,
            cancelSearch
        }), [
        cancelSearch,
        clearText
    ]);
    if (!visible && !rendered) {
        return null;
    }
    var textColor = tintColor ?? colors.text;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactnative.Animated.View, {
        pointerEvents: visible ? 'auto' : 'none',
        accessibilityLiveRegion: "polite",
        accessibilityElementsHidden: !visible,
        importantForAccessibility: visible ? 'auto' : 'no-hide-descendants',
        style: [
            styles.container,
            {
                opacity: visibleAnim
            },
            style
        ],
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactnative.View, {
                style: styles.searchbarContainer,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderIcon.HeaderIcon, {
                        source: _searchiconpng.default,
                        tintColor: textColor,
                        style: styles.inputSearchIcon
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.TextInput, _object_spread_props._(_object_spread._({}, rest), {
                        ref: inputRef,
                        onChange: onChangeText,
                        onChangeText: setValue,
                        autoFocus: autoFocus,
                        inputMode: INPUT_TYPE_TO_MODE[inputType ?? 'text'],
                        enterKeyHint: enterKeyHint,
                        placeholder: placeholder,
                        placeholderTextColor: (0, _color.default)(textColor).alpha(0.5).string(),
                        cursorColor: colors.primary,
                        selectionHandleColor: colors.primary,
                        selectionColor: (0, _color.default)(colors.primary).alpha(0.3).string(),
                        style: [
                            fonts.regular,
                            styles.searchbar,
                            {
                                backgroundColor: _reactnative.Platform.select({
                                    ios: dark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',
                                    default: 'transparent'
                                }),
                                color: textColor,
                                borderBottomColor: (0, _color.default)(textColor).alpha(0.2).string()
                            }
                        ]
                    })),
                    _reactnative.Platform.OS === 'ios' ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_PlatformPressable.PlatformPressable, {
                        onPress: onClear,
                        style: [
                            {
                                opacity: clearVisibleAnim,
                                transform: [
                                    {
                                        scale: clearVisibleAnim
                                    }
                                ]
                            },
                            styles.clearButton
                        ],
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Image, {
                            source: _cleariconpng.default,
                            resizeMode: "contain",
                            tintColor: textColor,
                            style: styles.clearIcon
                        })
                    }) : null
                ]
            }),
            _reactnative.Platform.OS !== 'ios' ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderButton.HeaderButton, {
                onPress: ()=>{
                    if (value) {
                        onClear();
                    } else {
                        onClose();
                    }
                },
                style: styles.closeButton,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderIcon.HeaderIcon, {
                    source: _closeiconpng.default,
                    tintColor: textColor
                })
            }) : null,
            _reactnative.Platform.OS === 'ios' ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_PlatformPressable.PlatformPressable, {
                onPress: cancelSearch,
                style: styles.cancelButton,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Text.Text, {
                    style: [
                        fonts.regular,
                        {
                            color: tintColor ?? colors.primary
                        },
                        styles.cancelText
                    ],
                    children: cancelButtonText
                })
            }) : null
        ]
    });
}
var styles = _reactnative.StyleSheet.create({
    container: {
        flex: 1,
        flexDirection: 'row',
        alignItems: 'stretch'
    },
    inputSearchIcon: _object_spread._({
        position: 'absolute',
        opacity: 0.5,
        left: _reactnative.Platform.select({
            ios: 16,
            default: 4
        }),
        top: _reactnative.Platform.select({
            ios: -1,
            default: 17
        })
    }, _reactnative.Platform.select({
        ios: {
            height: 18,
            width: 18
        },
        default: {}
    })),
    closeButton: {
        position: 'absolute',
        opacity: 0.5,
        right: _reactnative.Platform.select({
            ios: 0,
            default: 8
        }),
        top: _reactnative.Platform.select({
            ios: -2,
            default: 17
        })
    },
    clearButton: {
        position: 'absolute',
        right: 0,
        top: -7,
        bottom: 0,
        justifyContent: 'center',
        padding: 8
    },
    clearIcon: {
        height: 16,
        width: 16,
        opacity: 0.5
    },
    cancelButton: {
        alignSelf: 'center',
        top: -4
    },
    cancelText: {
        fontSize: 17,
        marginHorizontal: 12
    },
    searchbarContainer: {
        flex: 1
    },
    searchbar: _reactnative.Platform.select({
        ios: {
            flex: 1,
            fontSize: 17,
            paddingHorizontal: 32,
            marginLeft: 16,
            marginTop: -1,
            marginBottom: 4,
            borderRadius: 8
        },
        default: {
            flex: 1,
            fontSize: 18,
            paddingHorizontal: 36,
            marginRight: 8,
            marginTop: 8,
            marginBottom: 8,
            borderBottomWidth: 1
        }
    })
});
var HeaderSearchBar = /*#__PURE__*/ _react.forwardRef(HeaderSearchBarInternal); //# sourceMappingURL=HeaderSearchBar.js.map


}),
65856: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "HeaderShownContext", ({
    enumerable: true,
    get: function() {
        return HeaderShownContext;
    }
}));
var _getNamedContext = __webpack_require__(80569);
var HeaderShownContext = (0, _getNamedContext.getNamedContext)('HeaderShownContext', false); //# sourceMappingURL=HeaderShownContext.js.map


}),
69600: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "HeaderTitle", ({
    enumerable: true,
    get: function() {
        return HeaderTitle;
    }
}));
var _object_spread = __webpack_require__(36192);
var _object_spread_props = __webpack_require__(83590);
var _object_without_properties = __webpack_require__(86136);
var _native = __webpack_require__(57102);
var _reactnative = __webpack_require__(56300);
var _jsxruntime = __webpack_require__(70095);
function HeaderTitle(_param) {
    var tintColor = _param.tintColor, style = _param.style, rest = _object_without_properties._(_param, [
        "tintColor",
        "style"
    ]);
    var _useTheme = (0, _native.useTheme)(), colors = _useTheme.colors, fonts = _useTheme.fonts;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Animated.Text, _object_spread_props._(_object_spread._({
        accessibilityRole: "header",
        "aria-level": "1",
        numberOfLines: 1
    }, rest), {
        style: [
            {
                color: tintColor === undefined ? colors.text : tintColor
            },
            _reactnative.Platform.select({
                ios: fonts.bold,
                default: fonts.medium
            }),
            styles.title,
            style
        ]
    }));
}
var styles = _reactnative.StyleSheet.create({
    title: _reactnative.Platform.select({
        ios: {
            fontSize: 17
        },
        android: {
            fontSize: 20
        },
        default: {
            fontSize: 18
        }
    })
}); //# sourceMappingURL=HeaderTitle.js.map


}),
53284: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "getDefaultHeaderHeight", ({
    enumerable: true,
    get: function() {
        return getDefaultHeaderHeight;
    }
}));
var _reactnative = __webpack_require__(56300);
function getDefaultHeaderHeight(layout, modalPresentation, topInset) {
    var headerHeight;
    // On models with Dynamic Island the status bar height is smaller than the safe area top inset.
    var hasDynamicIsland = _reactnative.Platform.OS === 'ios' && topInset > 50;
    var statusBarHeight = hasDynamicIsland ? topInset - (5 + 1 / _reactnative.PixelRatio.get()) : topInset;
    var isLandscape = layout.width > layout.height;
    if (_reactnative.Platform.OS === 'ios') {
        if (_reactnative.Platform.isPad || _reactnative.Platform.isTV) {
            if (modalPresentation) {
                headerHeight = 56;
            } else {
                headerHeight = 50;
            }
        } else {
            if (isLandscape) {
                headerHeight = 32;
            } else {
                if (modalPresentation) {
                    headerHeight = 56;
                } else {
                    headerHeight = 44;
                }
            }
        }
    } else {
        headerHeight = 64;
    }
    return headerHeight + statusBarHeight;
} //# sourceMappingURL=getDefaultHeaderHeight.js.map


}),
59463: (function (__unused_webpack_module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "getHeaderTitle", ({
    enumerable: true,
    get: function() {
        return getHeaderTitle;
    }
}));
function getHeaderTitle(options, fallback) {
    return typeof options.headerTitle === 'string' ? options.headerTitle : options.title !== undefined ? options.title : fallback;
} //# sourceMappingURL=getHeaderTitle.js.map


}),
71805: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "useHeaderHeight", ({
    enumerable: true,
    get: function() {
        return useHeaderHeight;
    }
}));
var _interop_require_wildcard = __webpack_require__(83610);
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var _HeaderHeightContext = __webpack_require__(77235);
function useHeaderHeight() {
    var height = _react.useContext(_HeaderHeightContext.HeaderHeightContext);
    if (height === undefined) {
        throw new Error("Couldn't find the header height. Are you inside a screen in a navigator with a header?");
    }
    return height;
} //# sourceMappingURL=useHeaderHeight.js.map


}),
7154: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "Label", ({
    enumerable: true,
    get: function() {
        return Label;
    }
}));
var _object_spread = __webpack_require__(36192);
var _object_spread_props = __webpack_require__(83590);
var _object_without_properties = __webpack_require__(86136);
var _reactnative = __webpack_require__(56300);
var _Text = __webpack_require__(44625);
var _jsxruntime = __webpack_require__(70095);
function Label(_param) {
    var tintColor = _param.tintColor, style = _param.style, rest = _object_without_properties._(_param, [
        "tintColor",
        "style"
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Text.Text, _object_spread_props._(_object_spread._({
        numberOfLines: 1
    }, rest), {
        style: [
            styles.label,
            tintColor != null && {
                color: tintColor
            },
            style
        ]
    }));
}
var styles = _reactnative.StyleSheet.create({
    label: {
        textAlign: 'center',
        backgroundColor: 'transparent'
    }
}); //# sourceMappingURL=Label.js.map


}),
4519: (function (__unused_webpack_module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "getLabel", ({
    enumerable: true,
    get: function() {
        return getLabel;
    }
}));
function getLabel(options, fallback) {
    return options.label !== undefined ? options.label : options.title !== undefined ? options.title : fallback;
} //# sourceMappingURL=getLabel.js.map


}),
611: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "MaskedView", ({
    enumerable: true,
    get: function() {
        return _MaskedViewNative.MaskedView;
    }
}));
var _MaskedViewNative = __webpack_require__(12956);
 //# sourceMappingURL=MaskedView.android.js.map


}),
12956: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "MaskedView", ({
    enumerable: true,
    get: function() {
        return MaskedView;
    }
}));
var _interop_require_wildcard = __webpack_require__(83610);
var _object_spread = __webpack_require__(36192);
var _object_spread_props = __webpack_require__(83590);
var _object_without_properties = __webpack_require__(86136);
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var _reactnative = __webpack_require__(56300);
var _jsxruntime = __webpack_require__(70095);
var RNCMaskedView;
try {
    // Add try/catch to support usage even if it's not installed, since it's optional.
    // Newer versions of Metro will handle it properly.
    RNCMaskedView = __webpack_require__(Object(function webpackMissingModule() { var e = new Error("Cannot find module '@react-native-masked-view/masked-view'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
} catch (e) {
// Ignore
}
var isMaskedViewAvailable = _reactnative.UIManager.getViewManagerConfig('RNCMaskedView') != null;
function MaskedView(_param) {
    var children = _param.children, rest = _object_without_properties._(_param, [
        "children"
    ]);
    if (isMaskedViewAvailable && RNCMaskedView) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(RNCMaskedView, _object_spread_props._(_object_spread._({}, rest), {
            children: children
        }));
    }
    return children;
} //# sourceMappingURL=MaskedViewNative.js.map


}),
49387: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "MissingIcon", ({
    enumerable: true,
    get: function() {
        return MissingIcon;
    }
}));
var _reactnative = __webpack_require__(56300);
var _Text = __webpack_require__(44625);
var _jsxruntime = __webpack_require__(70095);
function MissingIcon(ref) {
    var color = ref.color, size = ref.size, style = ref.style;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Text.Text, {
        style: [
            styles.icon,
            {
                color,
                fontSize: size
            },
            style
        ],
        children: "\u23F7"
    });
}
var styles = _reactnative.StyleSheet.create({
    icon: {
        backgroundColor: 'transparent'
    }
}); //# sourceMappingURL=MissingIcon.js.map


}),
78712: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "PlatformPressable", ({
    enumerable: true,
    get: function() {
        return PlatformPressable;
    }
}));
var _interop_require_wildcard = __webpack_require__(83610);
var _object_spread = __webpack_require__(36192);
var _object_spread_props = __webpack_require__(83590);
var _object_without_properties = __webpack_require__(86136);
var _sliced_to_array = __webpack_require__(78474);
var _native = __webpack_require__(57102);
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var _reactnative = __webpack_require__(56300);
var _jsxruntime = __webpack_require__(70095);
var AnimatedPressable = _reactnative.Animated.createAnimatedComponent(_reactnative.Pressable);
var ANDROID_VERSION_LOLLIPOP = 21;
var ANDROID_SUPPORTS_RIPPLE = _reactnative.Platform.OS === 'android' && _reactnative.Platform.Version >= ANDROID_VERSION_LOLLIPOP;
var useNativeDriver = _reactnative.Platform.OS !== 'web';
function PlatformPressable(_param) {
    var disabled = _param.disabled, onPress = _param.onPress, onPressIn = _param.onPressIn, onPressOut = _param.onPressOut, android_ripple = _param.android_ripple, pressColor = _param.pressColor, _param_pressOpacity = _param.pressOpacity, pressOpacity = _param_pressOpacity === void 0 ? 0.3 : _param_pressOpacity, hoverEffect = _param.hoverEffect, style = _param.style, children = _param.children, rest = _object_without_properties._(_param, [
        "disabled",
        "onPress",
        "onPressIn",
        "onPressOut",
        "android_ripple",
        "pressColor",
        "pressOpacity",
        "hoverEffect",
        "style",
        "children"
    ]);
    var dark = (0, _native.useTheme)().dark;
    var _React_useState = _sliced_to_array._(_react.useState(()=>new _reactnative.Animated.Value(1)), 1), opacity = _React_useState[0];
    var animateTo = (toValue, duration)=>{
        if (ANDROID_SUPPORTS_RIPPLE) {
            return;
        }
        _reactnative.Animated.timing(opacity, {
            toValue,
            duration,
            easing: _reactnative.Easing.inOut(_reactnative.Easing.quad),
            useNativeDriver
        }).start();
    };
    var handlePress = (e)=>{
        if (_reactnative.Platform.OS === 'web' && rest.href != null) {
            var // @ts-expect-error: these properties exist on web, but not in React Native
            _e_currentTarget;
            // @ts-expect-error: these properties exist on web, but not in React Native
            var hasModifierKey = e.metaKey || e.altKey || e.ctrlKey || e.shiftKey; // ignore clicks with modifier keys
            // @ts-expect-error: these properties exist on web, but not in React Native
            var isLeftClick = e.button == null || e.button === 0; // only handle left clicks
            var isSelfTarget = [
                undefined,
                null,
                '',
                'self'
            ].includes((_e_currentTarget = e.currentTarget) === null || _e_currentTarget === void 0 ? void 0 : _e_currentTarget.target); // let browser handle "target=_blank" etc.
            if (!hasModifierKey && isLeftClick && isSelfTarget) {
                e.preventDefault();
                onPress === null || onPress === void 0 ? void 0 : onPress(e);
            }
        } else {
            onPress === null || onPress === void 0 ? void 0 : onPress(e);
        }
    };
    var handlePressIn = (e)=>{
        animateTo(pressOpacity, 0);
        onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(e);
    };
    var handlePressOut = (e)=>{
        animateTo(1, 200);
        onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(e);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(AnimatedPressable, _object_spread_props._(_object_spread._({
        accessible: true,
        accessibilityRole: _reactnative.Platform.OS === 'web' && rest.href != null ? 'link' : 'button',
        onPress: disabled ? undefined : handlePress,
        onPressIn: handlePressIn,
        onPressOut: handlePressOut,
        android_ripple: ANDROID_SUPPORTS_RIPPLE ? _object_spread._({
            color: pressColor !== undefined ? pressColor : dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)'
        }, android_ripple) : undefined,
        style: [
            {
                cursor: _reactnative.Platform.OS === 'web' || _reactnative.Platform.OS === 'ios' ? // Pointer cursor on web
                // Hover effect on iPad and visionOS
                'pointer' : 'auto',
                opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1
            },
            style
        ]
    }, rest), {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(HoverEffect, _object_spread._({}, hoverEffect)),
            children
        ]
    }));
}
var css = String.raw;
var CLASS_NAME = `__react-navigation_elements_Pressable_hover`;
var CSS_TEXT = css`
  .${CLASS_NAME} {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    background-color: var(--overlay-color);
    opacity: 0;
    transition: opacity 0.15s;
  }

  a:hover > .${CLASS_NAME}, button:hover > .${CLASS_NAME} {
    opacity: var(--overlay-hover-opacity);
  }

  a:active > .${CLASS_NAME}, button:active > .${CLASS_NAME} {
    opacity: var(--overlay-active-opacity);
  }
`;
var HoverEffect = (ref)=>{
    var color = ref.color, _ref_hoverOpacity = ref.hoverOpacity, hoverOpacity = _ref_hoverOpacity === void 0 ? 0.08 : _ref_hoverOpacity, _ref_activeOpacity = ref.activeOpacity, activeOpacity = _ref_activeOpacity === void 0 ? 0.16 : _ref_activeOpacity;
    if (_reactnative.Platform.OS !== 'web' || color == null) {
        return null;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("style", {
                // @ts-expect-error: href and precedence are only available on React 19
                href: CLASS_NAME,
                precedence: "elements",
                children: CSS_TEXT
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: CLASS_NAME,
                style: {
                    // @ts-expect-error: CSS variables are not typed
                    '--overlay-color': color,
                    '--overlay-hover-opacity': hoverOpacity,
                    '--overlay-active-opacity': activeOpacity
                }
            })
        ]
    });
}; //# sourceMappingURL=PlatformPressable.js.map


}),
51253: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "ResourceSavingView", ({
    enumerable: true,
    get: function() {
        return ResourceSavingView;
    }
}));
var _interop_require_wildcard = __webpack_require__(83610);
var _object_spread = __webpack_require__(36192);
var _object_spread_props = __webpack_require__(83590);
var _object_without_properties = __webpack_require__(86136);
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var _reactnative = __webpack_require__(56300);
var _jsxruntime = __webpack_require__(70095);
var FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container
function ResourceSavingView(_param) {
    var visible = _param.visible, children = _param.children, style = _param.style, rest = _object_without_properties._(_param, [
        "visible",
        "children",
        "style"
    ]);
    if (_reactnative.Platform.OS === 'web') {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.View, _object_spread_props._(_object_spread._({
            hidden: !visible,
            style: [
                {
                    display: visible ? 'flex' : 'none'
                },
                styles.container,
                style
            ],
            pointerEvents: visible ? 'auto' : 'none'
        }, rest), {
            children: children
        }));
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.View, {
        style: [
            styles.container,
            style
        ],
        pointerEvents: visible ? 'auto' : 'none',
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.View, {
            collapsable: false,
            removeClippedSubviews: // On iOS & macOS, set removeClippedSubviews to true only when not focused
            // This is an workaround for a bug where the clipped view never re-appears
            _reactnative.Platform.OS === 'ios' || _reactnative.Platform.OS === 'macos' ? !visible : true,
            pointerEvents: visible ? 'auto' : 'none',
            style: visible ? styles.attached : styles.detached,
            children: children
        })
    });
}
var styles = _reactnative.StyleSheet.create({
    container: {
        flex: 1,
        overflow: 'hidden'
    },
    attached: {
        flex: 1
    },
    detached: {
        flex: 1,
        top: FAR_FAR_AWAY
    }
}); //# sourceMappingURL=ResourceSavingView.js.map


}),
50874: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "SafeAreaProviderCompat", ({
    enumerable: true,
    get: function() {
        return SafeAreaProviderCompat;
    }
}));
var _interop_require_wildcard = __webpack_require__(83610);
var _object_spread = __webpack_require__(36192);
var _object_spread_props = __webpack_require__(83590);
var _sliced_to_array = __webpack_require__(78474);
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var _reactnative = __webpack_require__(56300);
var _reactnativesafeareacontext = __webpack_require__(33481);
var _jsxruntime = __webpack_require__(70095);
var _Dimensions_get = _reactnative.Dimensions.get('window'), _Dimensions_get_width = _Dimensions_get.width, width = _Dimensions_get_width === void 0 ? 0 : _Dimensions_get_width, _Dimensions_get_height = _Dimensions_get.height, height = _Dimensions_get_height === void 0 ? 0 : _Dimensions_get_height;
// To support SSR on web, we need to have empty insets for initial values
// Otherwise there can be mismatch between SSR and client output
// We also need to specify empty values to support tests environments
var initialMetrics = _reactnative.Platform.OS === 'web' || _reactnativesafeareacontext.initialWindowMetrics == null ? {
    frame: {
        x: 0,
        y: 0,
        width,
        height
    },
    insets: {
        top: 0,
        left: 0,
        right: 0,
        bottom: 0
    }
} : _reactnativesafeareacontext.initialWindowMetrics;
function SafeAreaProviderCompat(ref) {
    var children = ref.children, style = ref.style;
    var insets = _react.useContext(_reactnativesafeareacontext.SafeAreaInsetsContext);
    if (insets) {
        // If we already have insets, don't wrap the stack in another safe area provider
        // This avoids an issue with updates at the cost of potentially incorrect values
        // https://github.com/react-navigation/react-navigation/issues/174
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.View, {
            style: [
                styles.container,
                style
            ],
            children: children
        });
    }
    if (_reactnative.Platform.OS === 'web') {
        children = /*#__PURE__*/ (0, _jsxruntime.jsx)(SafeAreaFrameProvider, {
            initialMetrics: initialMetrics,
            children: children
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnativesafeareacontext.SafeAreaProvider, {
        initialMetrics: initialMetrics,
        style: style,
        children: children
    });
}
// FIXME: On the Web, the safe area frame value doesn't update on resize
// So we workaround this by measuring the frame on resize
var SafeAreaFrameProvider = (ref)=>{
    var initialMetrics = ref.initialMetrics, children = ref.children;
    var element = _react.useRef(null);
    var _React_useState = _sliced_to_array._(_react.useState(initialMetrics.frame), 2), frame = _React_useState[0], setFrame = _React_useState[1];
    _react.useEffect(()=>{
        if (element.current == null) {
            return;
        }
        var rect = element.current.getBoundingClientRect();
        // eslint-disable-next-line @eslint-react/hooks-extra/no-direct-set-state-in-use-effect
        setFrame({
            x: rect.x,
            y: rect.y,
            width: rect.width,
            height: rect.height
        });
        var timeout;
        var observer = new ResizeObserver((entries)=>{
            var entry = entries[0];
            if (entry) {
                var _entry_contentRect = entry.contentRect, x = _entry_contentRect.x, y = _entry_contentRect.y, width = _entry_contentRect.width, height = _entry_contentRect.height;
                // Debounce the frame updates to avoid too many updates in a short time
                clearTimeout(timeout);
                timeout = setTimeout(()=>{
                    setFrame({
                        x,
                        y,
                        width,
                        height
                    });
                }, 100);
            }
        });
        observer.observe(element.current);
        return ()=>{
            observer.disconnect();
            clearTimeout(timeout);
        };
    }, []);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactnativesafeareacontext.SafeAreaFrameContext.Provider, {
        value: frame,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                ref: element,
                style: _object_spread_props._(_object_spread._({}, _reactnative.StyleSheet.absoluteFillObject), {
                    pointerEvents: 'none',
                    visibility: 'hidden'
                })
            }),
            children
        ]
    });
};
SafeAreaProviderCompat.initialMetrics = initialMetrics;
var styles = _reactnative.StyleSheet.create({
    container: {
        flex: 1
    }
}); //# sourceMappingURL=SafeAreaProviderCompat.js.map


}),
20928: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "Screen", ({
    enumerable: true,
    get: function() {
        return Screen;
    }
}));
var _interop_require_wildcard = __webpack_require__(83610);
var _sliced_to_array = __webpack_require__(78474);
var _native = __webpack_require__(57102);
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var _reactnative = __webpack_require__(56300);
var _reactnativesafeareacontext = __webpack_require__(33481);
var _Background = __webpack_require__(39429);
var _getDefaultHeaderHeight = __webpack_require__(53284);
var _HeaderHeightContext = __webpack_require__(77235);
var _HeaderShownContext = __webpack_require__(65856);
var _jsxruntime = __webpack_require__(70095);
function Screen(props) {
    var dimensions = (0, _reactnativesafeareacontext.useSafeAreaFrame)();
    var insets = (0, _reactnativesafeareacontext.useSafeAreaInsets)();
    var isParentHeaderShown = _react.useContext(_HeaderShownContext.HeaderShownContext);
    var parentHeaderHeight = _react.useContext(_HeaderHeightContext.HeaderHeightContext);
    var focused = props.focused, _props_modal = props.modal, modal = _props_modal === void 0 ? false : _props_modal, header = props.header, _props_headerShown = props.headerShown, headerShown = _props_headerShown === void 0 ? true : _props_headerShown, headerTransparent = props.headerTransparent, _props_headerStatusBarHeight = props.headerStatusBarHeight, headerStatusBarHeight = _props_headerStatusBarHeight === void 0 ? isParentHeaderShown ? 0 : insets.top : _props_headerStatusBarHeight, navigation = props.navigation, route = props.route, children = props.children, style = props.style;
    var _React_useState = _sliced_to_array._(_react.useState(()=>(0, _getDefaultHeaderHeight.getDefaultHeaderHeight)(dimensions, modal, headerStatusBarHeight)), 2), headerHeight = _React_useState[0], setHeaderHeight = _React_useState[1];
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Background.Background, {
        accessibilityElementsHidden: !focused,
        importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',
        style: [
            styles.container,
            style
        ],
        collapsable: false,
        children: [
            headerShown ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_native.NavigationContext.Provider, {
                value: navigation,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_native.NavigationRouteContext.Provider, {
                    value: route,
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.View, {
                        pointerEvents: "box-none",
                        onLayout: (e)=>{
                            var height = e.nativeEvent.layout.height;
                            setHeaderHeight(height);
                        },
                        style: [
                            styles.header,
                            headerTransparent ? styles.absolute : null
                        ],
                        children: header
                    })
                })
            }) : null,
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.View, {
                style: styles.content,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderShownContext.HeaderShownContext.Provider, {
                    value: isParentHeaderShown || headerShown !== false,
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_HeaderHeightContext.HeaderHeightContext.Provider, {
                        value: headerShown ? headerHeight : parentHeaderHeight ?? 0,
                        children: children
                    })
                })
            })
        ]
    });
}
var styles = _reactnative.StyleSheet.create({
    container: {
        flex: 1
    },
    content: {
        flex: 1
    },
    header: {
        zIndex: 1
    },
    absolute: {
        position: 'absolute',
        top: 0,
        start: 0,
        end: 0
    }
}); //# sourceMappingURL=Screen.js.map


}),
44625: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "Text", ({
    enumerable: true,
    get: function() {
        return Text;
    }
}));
var _object_spread = __webpack_require__(36192);
var _object_spread_props = __webpack_require__(83590);
var _object_without_properties = __webpack_require__(86136);
var _native = __webpack_require__(57102);
var _reactnative = __webpack_require__(56300);
var _jsxruntime = __webpack_require__(70095);
function Text(_param) {
    var style = _param.style, rest = _object_without_properties._(_param, [
        "style"
    ]);
    var _useTheme = (0, _native.useTheme)(), colors = _useTheme.colors, fonts = _useTheme.fonts;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactnative.Text, _object_spread_props._(_object_spread._({}, rest), {
        style: [
            {
                color: colors.text
            },
            fonts.regular,
            style
        ]
    }));
} //# sourceMappingURL=Text.js.map


}),
87301: (function (__unused_webpack_module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "getDefaultSidebarWidth", ({
    enumerable: true,
    get: function() {
        return getDefaultSidebarWidth;
    }
}));
var APPROX_APP_BAR_HEIGHT = 56;
var DEFAULT_DRAWER_WIDTH = 360;
var getDefaultSidebarWidth = (ref)=>{
    var width = ref.width;
    /**
   * Default sidebar width is 360dp
   * On screens smaller than 320dp, ideally the drawer would collapse to a tab bar
   * https://m3.material.io/components/navigation-drawer/specs
   */ if (width - APPROX_APP_BAR_HEIGHT <= 360) {
        return width - APPROX_APP_BAR_HEIGHT;
    }
    return DEFAULT_DRAWER_WIDTH;
}; //# sourceMappingURL=getDefaultSidebarWidth.js.map


}),
80569: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "getNamedContext", ({
    enumerable: true,
    get: function() {
        return getNamedContext;
    }
}));
var _interop_require_wildcard = __webpack_require__(83610);
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43348));
var contexts = '__react_navigation__elements_contexts';
// We use a global variable to keep our contexts so that we can reuse same contexts across packages
globalThis[contexts] = globalThis[contexts] ?? new Map();
function getNamedContext(name, initialValue) {
    var context = globalThis[contexts].get(name);
    if (context) {
        return context;
    }
    context = /*#__PURE__*/ _react.createContext(initialValue);
    context.displayName = name;
    globalThis[contexts].set(name, context);
    return context;
} //# sourceMappingURL=getNamedContext.js.map


}),
85012: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    Assets: function() {
        return Assets;
    },
    Background: function() {
        return _Background.Background;
    },
    Button: function() {
        return _Button.Button;
    },
    Header: function() {
        return _Header.Header;
    },
    HeaderBackButton: function() {
        return _HeaderBackButton.HeaderBackButton;
    },
    HeaderBackContext: function() {
        return _HeaderBackContext.HeaderBackContext;
    },
    HeaderBackground: function() {
        return _HeaderBackground.HeaderBackground;
    },
    HeaderButton: function() {
        return _HeaderButton.HeaderButton;
    },
    HeaderHeightContext: function() {
        return _HeaderHeightContext.HeaderHeightContext;
    },
    HeaderShownContext: function() {
        return _HeaderShownContext.HeaderShownContext;
    },
    HeaderTitle: function() {
        return _HeaderTitle.HeaderTitle;
    },
    Label: function() {
        return _Label.Label;
    },
    MissingIcon: function() {
        return _MissingIcon.MissingIcon;
    },
    PlatformPressable: function() {
        return _PlatformPressable.PlatformPressable;
    },
    ResourceSavingView: function() {
        return _ResourceSavingView.ResourceSavingView;
    },
    SafeAreaProviderCompat: function() {
        return _SafeAreaProviderCompat.SafeAreaProviderCompat;
    },
    Screen: function() {
        return _Screen.Screen;
    },
    Text: function() {
        return _Text.Text;
    },
    getDefaultHeaderHeight: function() {
        return _getDefaultHeaderHeight.getDefaultHeaderHeight;
    },
    getDefaultSidebarWidth: function() {
        return _getDefaultSidebarWidth.getDefaultSidebarWidth;
    },
    getHeaderTitle: function() {
        return _getHeaderTitle.getHeaderTitle;
    },
    getLabel: function() {
        return _getLabel.getLabel;
    },
    useHeaderHeight: function() {
        return _useHeaderHeight.useHeaderHeight;
    }
});
var _export_star = __webpack_require__(4084);
var _interop_require_default = __webpack_require__(66705);
var _backiconpng = /*#__PURE__*/ _interop_require_default._(__webpack_require__(14312));
var _backiconmaskpng = /*#__PURE__*/ _interop_require_default._(__webpack_require__(74721));
var _cleariconpng = /*#__PURE__*/ _interop_require_default._(__webpack_require__(79366));
var _closeiconpng = /*#__PURE__*/ _interop_require_default._(__webpack_require__(72530));
var _searchiconpng = /*#__PURE__*/ _interop_require_default._(__webpack_require__(67605));
var _Background = __webpack_require__(39429);
var _Button = __webpack_require__(94164);
var _getDefaultSidebarWidth = __webpack_require__(87301);
var _getDefaultHeaderHeight = __webpack_require__(53284);
var _getHeaderTitle = __webpack_require__(59463);
var _Header = __webpack_require__(11418);
var _HeaderBackButton = __webpack_require__(37740);
var _HeaderBackContext = __webpack_require__(54607);
var _HeaderBackground = __webpack_require__(22274);
var _HeaderButton = __webpack_require__(3829);
var _HeaderHeightContext = __webpack_require__(77235);
var _HeaderShownContext = __webpack_require__(65856);
var _HeaderTitle = __webpack_require__(69600);
var _useHeaderHeight = __webpack_require__(71805);
var _getLabel = __webpack_require__(4519);
var _Label = __webpack_require__(7154);
var _MissingIcon = __webpack_require__(49387);
var _PlatformPressable = __webpack_require__(78712);
var _ResourceSavingView = __webpack_require__(51253);
var _SafeAreaProviderCompat = __webpack_require__(50874);
var _Screen = __webpack_require__(20928);
var _Text = __webpack_require__(44625);
_export_star._(__webpack_require__(45132), exports);
var Assets = [
    _backiconpng.default,
    _backiconmaskpng.default,
    _searchiconpng.default,
    _closeiconpng.default,
    _cleariconpng.default
];
 //# sourceMappingURL=index.js.map


}),
45132: (function (__unused_webpack_module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
 //# sourceMappingURL=types.js.map


}),
83610: (function (__unused_webpack_module, exports) {
"use strict";

function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
            else newObj[key] = obj[key];
        }
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
exports._ = _interop_require_wildcard;


}),
61659: (function (module, exports, __webpack_require__) {
/* MIT license */ /* eslint-disable no-mixed-operators */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _sliced_to_array = __webpack_require__(78474);
var cssKeywords = __webpack_require__(71561);
// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)
var reverseKeywords = {};
for (var key of Object.keys(cssKeywords)){
    reverseKeywords[cssKeywords[key]] = key;
}
var convert = {
    rgb: {
        channels: 3,
        labels: 'rgb'
    },
    hsl: {
        channels: 3,
        labels: 'hsl'
    },
    hsv: {
        channels: 3,
        labels: 'hsv'
    },
    hwb: {
        channels: 3,
        labels: 'hwb'
    },
    cmyk: {
        channels: 4,
        labels: 'cmyk'
    },
    xyz: {
        channels: 3,
        labels: 'xyz'
    },
    lab: {
        channels: 3,
        labels: 'lab'
    },
    lch: {
        channels: 3,
        labels: 'lch'
    },
    hex: {
        channels: 1,
        labels: [
            'hex'
        ]
    },
    keyword: {
        channels: 1,
        labels: [
            'keyword'
        ]
    },
    ansi16: {
        channels: 1,
        labels: [
            'ansi16'
        ]
    },
    ansi256: {
        channels: 1,
        labels: [
            'ansi256'
        ]
    },
    hcg: {
        channels: 3,
        labels: [
            'h',
            'c',
            'g'
        ]
    },
    apple: {
        channels: 3,
        labels: [
            'r16',
            'g16',
            'b16'
        ]
    },
    gray: {
        channels: 1,
        labels: [
            'gray'
        ]
    }
};
module.exports = convert;
// Hide .channels and .labels properties
for (var model of Object.keys(convert)){
    if (!('channels' in convert[model])) {
        throw new Error('missing channels property: ' + model);
    }
    if (!('labels' in convert[model])) {
        throw new Error('missing channel labels property: ' + model);
    }
    if (convert[model].labels.length !== convert[model].channels) {
        throw new Error('channel and label counts mismatch: ' + model);
    }
    var _convert_model = convert[model], channels = _convert_model.channels, labels = _convert_model.labels;
    delete convert[model].channels;
    delete convert[model].labels;
    Object.defineProperty(convert[model], 'channels', {
        value: channels
    });
    Object.defineProperty(convert[model], 'labels', {
        value: labels
    });
}
convert.rgb.hsl = function(rgb) {
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    var min = Math.min(r, g, b);
    var max = Math.max(r, g, b);
    var delta = max - min;
    var h;
    var s;
    if (max === min) {
        h = 0;
    } else if (r === max) {
        h = (g - b) / delta;
    } else if (g === max) {
        h = 2 + (b - r) / delta;
    } else if (b === max) {
        h = 4 + (r - g) / delta;
    }
    h = Math.min(h * 60, 360);
    if (h < 0) {
        h += 360;
    }
    var l = (min + max) / 2;
    if (max === min) {
        s = 0;
    } else if (l <= 0.5) {
        s = delta / (max + min);
    } else {
        s = delta / (2 - max - min);
    }
    return [
        h,
        s * 100,
        l * 100
    ];
};
convert.rgb.hsv = function(rgb) {
    var rdif;
    var gdif;
    var bdif;
    var h;
    var s;
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    var v = Math.max(r, g, b);
    var diff = v - Math.min(r, g, b);
    var diffc = function(c) {
        return (v - c) / 6 / diff + 1 / 2;
    };
    if (diff === 0) {
        h = 0;
        s = 0;
    } else {
        s = diff / v;
        rdif = diffc(r);
        gdif = diffc(g);
        bdif = diffc(b);
        if (r === v) {
            h = bdif - gdif;
        } else if (g === v) {
            h = 1 / 3 + rdif - bdif;
        } else if (b === v) {
            h = 2 / 3 + gdif - rdif;
        }
        if (h < 0) {
            h += 1;
        } else if (h > 1) {
            h -= 1;
        }
    }
    return [
        h * 360,
        s * 100,
        v * 100
    ];
};
convert.rgb.hwb = function(rgb) {
    var r = rgb[0];
    var g = rgb[1];
    var b = rgb[2];
    var h = convert.rgb.hsl(rgb)[0];
    var w = 1 / 255 * Math.min(r, Math.min(g, b));
    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
    return [
        h,
        w * 100,
        b * 100
    ];
};
convert.rgb.cmyk = function(rgb) {
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    var k = Math.min(1 - r, 1 - g, 1 - b);
    var c = (1 - r - k) / (1 - k) || 0;
    var m = (1 - g - k) / (1 - k) || 0;
    var y = (1 - b - k) / (1 - k) || 0;
    return [
        c * 100,
        m * 100,
        y * 100,
        k * 100
    ];
};
function comparativeDistance(x, y) {
    /*
		See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
	*/ return (x[0] - y[0]) ** 2 + (x[1] - y[1]) ** 2 + (x[2] - y[2]) ** 2;
}
convert.rgb.keyword = function(rgb) {
    var reversed = reverseKeywords[rgb];
    if (reversed) {
        return reversed;
    }
    var currentClosestDistance = Infinity;
    var currentClosestKeyword;
    for (var keyword of Object.keys(cssKeywords)){
        var value = cssKeywords[keyword];
        // Compute comparative distance
        var distance = comparativeDistance(rgb, value);
        // Check if its less, if so set as closest
        if (distance < currentClosestDistance) {
            currentClosestDistance = distance;
            currentClosestKeyword = keyword;
        }
    }
    return currentClosestKeyword;
};
convert.keyword.rgb = function(keyword) {
    return cssKeywords[keyword];
};
convert.rgb.xyz = function(rgb) {
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    // Assume sRGB
    r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92;
    g = g > 0.04045 ? ((g + 0.055) / 1.055) ** 2.4 : g / 12.92;
    b = b > 0.04045 ? ((b + 0.055) / 1.055) ** 2.4 : b / 12.92;
    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;
    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;
    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;
    return [
        x * 100,
        y * 100,
        z * 100
    ];
};
convert.rgb.lab = function(rgb) {
    var xyz = convert.rgb.xyz(rgb);
    var x = xyz[0];
    var y = xyz[1];
    var z = xyz[2];
    x /= 95.047;
    y /= 100;
    z /= 108.883;
    x = x > 0.008856 ? x ** (1 / 3) : 7.787 * x + 16 / 116;
    y = y > 0.008856 ? y ** (1 / 3) : 7.787 * y + 16 / 116;
    z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
    var l = 116 * y - 16;
    var a = 500 * (x - y);
    var b = 200 * (y - z);
    return [
        l,
        a,
        b
    ];
};
convert.hsl.rgb = function(hsl) {
    var h = hsl[0] / 360;
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var t2;
    var t3;
    var val;
    if (s === 0) {
        val = l * 255;
        return [
            val,
            val,
            val
        ];
    }
    if (l < 0.5) {
        t2 = l * (1 + s);
    } else {
        t2 = l + s - l * s;
    }
    var t1 = 2 * l - t2;
    var rgb = [
        0,
        0,
        0
    ];
    for(var i = 0; i < 3; i++){
        t3 = h + 1 / 3 * -(i - 1);
        if (t3 < 0) {
            t3++;
        }
        if (t3 > 1) {
            t3--;
        }
        if (6 * t3 < 1) {
            val = t1 + (t2 - t1) * 6 * t3;
        } else if (2 * t3 < 1) {
            val = t2;
        } else if (3 * t3 < 2) {
            val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
        } else {
            val = t1;
        }
        rgb[i] = val * 255;
    }
    return rgb;
};
convert.hsl.hsv = function(hsl) {
    var h = hsl[0];
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var smin = s;
    var lmin = Math.max(l, 0.01);
    l *= 2;
    s *= l <= 1 ? l : 2 - l;
    smin *= lmin <= 1 ? lmin : 2 - lmin;
    var v = (l + s) / 2;
    var sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);
    return [
        h,
        sv * 100,
        v * 100
    ];
};
convert.hsv.rgb = function(hsv) {
    var h = hsv[0] / 60;
    var s = hsv[1] / 100;
    var v = hsv[2] / 100;
    var hi = Math.floor(h) % 6;
    var f = h - Math.floor(h);
    var p = 255 * v * (1 - s);
    var q = 255 * v * (1 - s * f);
    var t = 255 * v * (1 - s * (1 - f));
    v *= 255;
    switch(hi){
        case 0:
            return [
                v,
                t,
                p
            ];
        case 1:
            return [
                q,
                v,
                p
            ];
        case 2:
            return [
                p,
                v,
                t
            ];
        case 3:
            return [
                p,
                q,
                v
            ];
        case 4:
            return [
                t,
                p,
                v
            ];
        case 5:
            return [
                v,
                p,
                q
            ];
    }
};
convert.hsv.hsl = function(hsv) {
    var h = hsv[0];
    var s = hsv[1] / 100;
    var v = hsv[2] / 100;
    var vmin = Math.max(v, 0.01);
    var sl;
    var l;
    l = (2 - s) * v;
    var lmin = (2 - s) * vmin;
    sl = s * vmin;
    sl /= lmin <= 1 ? lmin : 2 - lmin;
    sl = sl || 0;
    l /= 2;
    return [
        h,
        sl * 100,
        l * 100
    ];
};
// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
convert.hwb.rgb = function(hwb) {
    var h = hwb[0] / 360;
    var wh = hwb[1] / 100;
    var bl = hwb[2] / 100;
    var ratio = wh + bl;
    var f;
    // Wh + bl cant be > 1
    if (ratio > 1) {
        wh /= ratio;
        bl /= ratio;
    }
    var i = Math.floor(6 * h);
    var v = 1 - bl;
    f = 6 * h - i;
    if ((i & 0x01) !== 0) {
        f = 1 - f;
    }
    var n = wh + f * (v - wh); // Linear interpolation
    var r;
    var g;
    var b;
    /* eslint-disable max-statements-per-line,no-multi-spaces */ switch(i){
        default:
        case 6:
        case 0:
            r = v;
            g = n;
            b = wh;
            break;
        case 1:
            r = n;
            g = v;
            b = wh;
            break;
        case 2:
            r = wh;
            g = v;
            b = n;
            break;
        case 3:
            r = wh;
            g = n;
            b = v;
            break;
        case 4:
            r = n;
            g = wh;
            b = v;
            break;
        case 5:
            r = v;
            g = wh;
            b = n;
            break;
    }
    /* eslint-enable max-statements-per-line,no-multi-spaces */ return [
        r * 255,
        g * 255,
        b * 255
    ];
};
convert.cmyk.rgb = function(cmyk) {
    var c = cmyk[0] / 100;
    var m = cmyk[1] / 100;
    var y = cmyk[2] / 100;
    var k = cmyk[3] / 100;
    var r = 1 - Math.min(1, c * (1 - k) + k);
    var g = 1 - Math.min(1, m * (1 - k) + k);
    var b = 1 - Math.min(1, y * (1 - k) + k);
    return [
        r * 255,
        g * 255,
        b * 255
    ];
};
convert.xyz.rgb = function(xyz) {
    var x = xyz[0] / 100;
    var y = xyz[1] / 100;
    var z = xyz[2] / 100;
    var r;
    var g;
    var b;
    r = x * 3.2406 + y * -1.5372 + z * -0.4986;
    g = x * -0.9689 + y * 1.8758 + z * 0.0415;
    b = x * 0.0557 + y * -0.2040 + z * 1.0570;
    // Assume sRGB
    r = r > 0.0031308 ? 1.055 * r ** (1.0 / 2.4) - 0.055 : r * 12.92;
    g = g > 0.0031308 ? 1.055 * g ** (1.0 / 2.4) - 0.055 : g * 12.92;
    b = b > 0.0031308 ? 1.055 * b ** (1.0 / 2.4) - 0.055 : b * 12.92;
    r = Math.min(Math.max(0, r), 1);
    g = Math.min(Math.max(0, g), 1);
    b = Math.min(Math.max(0, b), 1);
    return [
        r * 255,
        g * 255,
        b * 255
    ];
};
convert.xyz.lab = function(xyz) {
    var x = xyz[0];
    var y = xyz[1];
    var z = xyz[2];
    x /= 95.047;
    y /= 100;
    z /= 108.883;
    x = x > 0.008856 ? x ** (1 / 3) : 7.787 * x + 16 / 116;
    y = y > 0.008856 ? y ** (1 / 3) : 7.787 * y + 16 / 116;
    z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
    var l = 116 * y - 16;
    var a = 500 * (x - y);
    var b = 200 * (y - z);
    return [
        l,
        a,
        b
    ];
};
convert.lab.xyz = function(lab) {
    var l = lab[0];
    var a = lab[1];
    var b = lab[2];
    var x;
    var y;
    var z;
    y = (l + 16) / 116;
    x = a / 500 + y;
    z = y - b / 200;
    var y2 = y ** 3;
    var x2 = x ** 3;
    var z2 = z ** 3;
    y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
    x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
    z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;
    x *= 95.047;
    y *= 100;
    z *= 108.883;
    return [
        x,
        y,
        z
    ];
};
convert.lab.lch = function(lab) {
    var l = lab[0];
    var a = lab[1];
    var b = lab[2];
    var h;
    var hr = Math.atan2(b, a);
    h = hr * 360 / 2 / Math.PI;
    if (h < 0) {
        h += 360;
    }
    var c = Math.sqrt(a * a + b * b);
    return [
        l,
        c,
        h
    ];
};
convert.lch.lab = function(lch) {
    var l = lch[0];
    var c = lch[1];
    var h = lch[2];
    var hr = h / 360 * 2 * Math.PI;
    var a = c * Math.cos(hr);
    var b = c * Math.sin(hr);
    return [
        l,
        a,
        b
    ];
};
convert.rgb.ansi16 = function(args, ref) {
    var saturation = ref === void 0 ? null : ref;
    var _args = _sliced_to_array._(args, 3), r = _args[0], g = _args[1], b = _args[2];
    var value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization
    value = Math.round(value / 50);
    if (value === 0) {
        return 30;
    }
    var ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));
    if (value === 2) {
        ansi += 60;
    }
    return ansi;
};
convert.hsv.ansi16 = function(args) {
    // Optimization here; we already know the value and don't need to get
    // it converted for us.
    return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};
convert.rgb.ansi256 = function(args) {
    var r = args[0];
    var g = args[1];
    var b = args[2];
    // We use the extended greyscale palette here, with the exception of
    // black and white. normal palette only has 4 greyscale shades.
    if (r === g && g === b) {
        if (r < 8) {
            return 16;
        }
        if (r > 248) {
            return 231;
        }
        return Math.round((r - 8) / 247 * 24) + 232;
    }
    var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);
    return ansi;
};
convert.ansi16.rgb = function(args) {
    var color = args % 10;
    // Handle greyscale
    if (color === 0 || color === 7) {
        if (args > 50) {
            color += 3.5;
        }
        color = color / 10.5 * 255;
        return [
            color,
            color,
            color
        ];
    }
    var mult = (~~(args > 50) + 1) * 0.5;
    var r = (color & 1) * mult * 255;
    var g = (color >> 1 & 1) * mult * 255;
    var b = (color >> 2 & 1) * mult * 255;
    return [
        r,
        g,
        b
    ];
};
convert.ansi256.rgb = function(args) {
    // Handle greyscale
    if (args >= 232) {
        var c = (args - 232) * 10 + 8;
        return [
            c,
            c,
            c
        ];
    }
    args -= 16;
    var rem;
    var r = Math.floor(args / 36) / 5 * 255;
    var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
    var b = rem % 6 / 5 * 255;
    return [
        r,
        g,
        b
    ];
};
convert.rgb.hex = function(args) {
    var integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);
    var string = integer.toString(16).toUpperCase();
    return '000000'.substring(string.length) + string;
};
convert.hex.rgb = function(args) {
    var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
    if (!match) {
        return [
            0,
            0,
            0
        ];
    }
    var colorString = match[0];
    if (match[0].length === 3) {
        colorString = colorString.split('').map((char)=>{
            return char + char;
        }).join('');
    }
    var integer = parseInt(colorString, 16);
    var r = integer >> 16 & 0xFF;
    var g = integer >> 8 & 0xFF;
    var b = integer & 0xFF;
    return [
        r,
        g,
        b
    ];
};
convert.rgb.hcg = function(rgb) {
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    var max = Math.max(Math.max(r, g), b);
    var min = Math.min(Math.min(r, g), b);
    var chroma = max - min;
    var grayscale;
    var hue;
    if (chroma < 1) {
        grayscale = min / (1 - chroma);
    } else {
        grayscale = 0;
    }
    if (chroma <= 0) {
        hue = 0;
    } else if (max === r) {
        hue = (g - b) / chroma % 6;
    } else if (max === g) {
        hue = 2 + (b - r) / chroma;
    } else {
        hue = 4 + (r - g) / chroma;
    }
    hue /= 6;
    hue %= 1;
    return [
        hue * 360,
        chroma * 100,
        grayscale * 100
    ];
};
convert.hsl.hcg = function(hsl) {
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var c = l < 0.5 ? 2.0 * s * l : 2.0 * s * (1.0 - l);
    var f = 0;
    if (c < 1.0) {
        f = (l - 0.5 * c) / (1.0 - c);
    }
    return [
        hsl[0],
        c * 100,
        f * 100
    ];
};
convert.hsv.hcg = function(hsv) {
    var s = hsv[1] / 100;
    var v = hsv[2] / 100;
    var c = s * v;
    var f = 0;
    if (c < 1.0) {
        f = (v - c) / (1 - c);
    }
    return [
        hsv[0],
        c * 100,
        f * 100
    ];
};
convert.hcg.rgb = function(hcg) {
    var h = hcg[0] / 360;
    var c = hcg[1] / 100;
    var g = hcg[2] / 100;
    if (c === 0.0) {
        return [
            g * 255,
            g * 255,
            g * 255
        ];
    }
    var pure = [
        0,
        0,
        0
    ];
    var hi = h % 1 * 6;
    var v = hi % 1;
    var w = 1 - v;
    var mg = 0;
    /* eslint-disable max-statements-per-line */ switch(Math.floor(hi)){
        case 0:
            pure[0] = 1;
            pure[1] = v;
            pure[2] = 0;
            break;
        case 1:
            pure[0] = w;
            pure[1] = 1;
            pure[2] = 0;
            break;
        case 2:
            pure[0] = 0;
            pure[1] = 1;
            pure[2] = v;
            break;
        case 3:
            pure[0] = 0;
            pure[1] = w;
            pure[2] = 1;
            break;
        case 4:
            pure[0] = v;
            pure[1] = 0;
            pure[2] = 1;
            break;
        default:
            pure[0] = 1;
            pure[1] = 0;
            pure[2] = w;
    }
    /* eslint-enable max-statements-per-line */ mg = (1.0 - c) * g;
    return [
        (c * pure[0] + mg) * 255,
        (c * pure[1] + mg) * 255,
        (c * pure[2] + mg) * 255
    ];
};
convert.hcg.hsv = function(hcg) {
    var c = hcg[1] / 100;
    var g = hcg[2] / 100;
    var v = c + g * (1.0 - c);
    var f = 0;
    if (v > 0.0) {
        f = c / v;
    }
    return [
        hcg[0],
        f * 100,
        v * 100
    ];
};
convert.hcg.hsl = function(hcg) {
    var c = hcg[1] / 100;
    var g = hcg[2] / 100;
    var l = g * (1.0 - c) + 0.5 * c;
    var s = 0;
    if (l > 0.0 && l < 0.5) {
        s = c / (2 * l);
    } else if (l >= 0.5 && l < 1.0) {
        s = c / (2 * (1 - l));
    }
    return [
        hcg[0],
        s * 100,
        l * 100
    ];
};
convert.hcg.hwb = function(hcg) {
    var c = hcg[1] / 100;
    var g = hcg[2] / 100;
    var v = c + g * (1.0 - c);
    return [
        hcg[0],
        (v - c) * 100,
        (1 - v) * 100
    ];
};
convert.hwb.hcg = function(hwb) {
    var w = hwb[1] / 100;
    var b = hwb[2] / 100;
    var v = 1 - b;
    var c = v - w;
    var g = 0;
    if (c < 1) {
        g = (v - c) / (1 - c);
    }
    return [
        hwb[0],
        c * 100,
        g * 100
    ];
};
convert.apple.rgb = function(apple) {
    return [
        apple[0] / 65535 * 255,
        apple[1] / 65535 * 255,
        apple[2] / 65535 * 255
    ];
};
convert.rgb.apple = function(rgb) {
    return [
        rgb[0] / 255 * 65535,
        rgb[1] / 255 * 65535,
        rgb[2] / 255 * 65535
    ];
};
convert.gray.rgb = function(args) {
    return [
        args[0] / 100 * 255,
        args[0] / 100 * 255,
        args[0] / 100 * 255
    ];
};
convert.gray.hsl = function(args) {
    return [
        0,
        0,
        args[0]
    ];
};
convert.gray.hsv = convert.gray.hsl;
convert.gray.hwb = function(gray) {
    return [
        0,
        100,
        gray[0]
    ];
};
convert.gray.cmyk = function(gray) {
    return [
        0,
        0,
        0,
        gray[0]
    ];
};
convert.gray.lab = function(gray) {
    return [
        gray[0],
        0,
        0
    ];
};
convert.gray.hex = function(gray) {
    var val = Math.round(gray[0] / 100 * 255) & 0xFF;
    var integer = (val << 16) + (val << 8) + val;
    var string = integer.toString(16).toUpperCase();
    return '000000'.substring(string.length) + string;
};
convert.rgb.gray = function(rgb) {
    var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
    return [
        val / 255 * 100
    ];
};


}),
13571: (function (module, __unused_webpack_exports, __webpack_require__) {
var conversions = __webpack_require__(61659);
var route = __webpack_require__(34472);
var convert = {};
var models = Object.keys(conversions);
function wrapRaw(fn) {
    var wrappedFn = function(...args) {
        var arg0 = args[0];
        if (arg0 === undefined || arg0 === null) {
            return arg0;
        }
        if (arg0.length > 1) {
            args = arg0;
        }
        return fn(args);
    };
    // Preserve .conversion property if there is one
    if ('conversion' in fn) {
        wrappedFn.conversion = fn.conversion;
    }
    return wrappedFn;
}
function wrapRounded(fn) {
    var wrappedFn = function(...args) {
        var arg0 = args[0];
        if (arg0 === undefined || arg0 === null) {
            return arg0;
        }
        if (arg0.length > 1) {
            args = arg0;
        }
        var result = fn(args);
        // We're assuming the result is an array here.
        // see notice in conversions.js; don't use box types
        // in conversion functions.
        if (typeof result === 'object') {
            for(var len = result.length, i = 0; i < len; i++){
                result[i] = Math.round(result[i]);
            }
        }
        return result;
    };
    // Preserve .conversion property if there is one
    if ('conversion' in fn) {
        wrappedFn.conversion = fn.conversion;
    }
    return wrappedFn;
}
models.forEach((fromModel)=>{
    convert[fromModel] = {};
    Object.defineProperty(convert[fromModel], 'channels', {
        value: conversions[fromModel].channels
    });
    Object.defineProperty(convert[fromModel], 'labels', {
        value: conversions[fromModel].labels
    });
    var routes = route(fromModel);
    var routeModels = Object.keys(routes);
    routeModels.forEach((toModel)=>{
        var fn = routes[toModel];
        convert[fromModel][toModel] = wrapRounded(fn);
        convert[fromModel][toModel].raw = wrapRaw(fn);
    });
});
module.exports = convert;


}),
34472: (function (module, __unused_webpack_exports, __webpack_require__) {
var conversions = __webpack_require__(61659);
/*
	This function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/ function buildGraph() {
    var graph = {};
    // https://jsperf.com/object-keys-vs-for-in-with-closure/3
    var models = Object.keys(conversions);
    for(var len = models.length, i = 0; i < len; i++){
        graph[models[i]] = {
            // http://jsperf.com/1-vs-infinity
            // micro-opt, but this is simple.
            distance: -1,
            parent: null
        };
    }
    return graph;
}
// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
    var graph = buildGraph();
    var queue = [
        fromModel
    ]; // Unshift -> queue -> pop
    graph[fromModel].distance = 0;
    while(queue.length){
        var current = queue.pop();
        var adjacents = Object.keys(conversions[current]);
        for(var len = adjacents.length, i = 0; i < len; i++){
            var adjacent = adjacents[i];
            var node = graph[adjacent];
            if (node.distance === -1) {
                node.distance = graph[current].distance + 1;
                node.parent = current;
                queue.unshift(adjacent);
            }
        }
    }
    return graph;
}
function link(from, to) {
    return function(args) {
        return to(from(args));
    };
}
function wrapConversion(toModel, graph) {
    var path = [
        graph[toModel].parent,
        toModel
    ];
    var fn = conversions[graph[toModel].parent][toModel];
    var cur = graph[toModel].parent;
    while(graph[cur].parent){
        path.unshift(graph[cur].parent);
        fn = link(conversions[graph[cur].parent][cur], fn);
        cur = graph[cur].parent;
    }
    fn.conversion = path;
    return fn;
}
module.exports = function(fromModel) {
    var graph = deriveBFS(fromModel);
    var conversion = {};
    var models = Object.keys(graph);
    for(var len = models.length, i = 0; i < len; i++){
        var toModel = models[i];
        var node = graph[toModel];
        if (node.parent === null) {
            continue;
        }
        conversion[toModel] = wrapConversion(toModel, graph);
    }
    return conversion;
};


}),
71561: (function (module) {
"use strict";

module.exports = {
    "aliceblue": [
        240,
        248,
        255
    ],
    "antiquewhite": [
        250,
        235,
        215
    ],
    "aqua": [
        0,
        255,
        255
    ],
    "aquamarine": [
        127,
        255,
        212
    ],
    "azure": [
        240,
        255,
        255
    ],
    "beige": [
        245,
        245,
        220
    ],
    "bisque": [
        255,
        228,
        196
    ],
    "black": [
        0,
        0,
        0
    ],
    "blanchedalmond": [
        255,
        235,
        205
    ],
    "blue": [
        0,
        0,
        255
    ],
    "blueviolet": [
        138,
        43,
        226
    ],
    "brown": [
        165,
        42,
        42
    ],
    "burlywood": [
        222,
        184,
        135
    ],
    "cadetblue": [
        95,
        158,
        160
    ],
    "chartreuse": [
        127,
        255,
        0
    ],
    "chocolate": [
        210,
        105,
        30
    ],
    "coral": [
        255,
        127,
        80
    ],
    "cornflowerblue": [
        100,
        149,
        237
    ],
    "cornsilk": [
        255,
        248,
        220
    ],
    "crimson": [
        220,
        20,
        60
    ],
    "cyan": [
        0,
        255,
        255
    ],
    "darkblue": [
        0,
        0,
        139
    ],
    "darkcyan": [
        0,
        139,
        139
    ],
    "darkgoldenrod": [
        184,
        134,
        11
    ],
    "darkgray": [
        169,
        169,
        169
    ],
    "darkgreen": [
        0,
        100,
        0
    ],
    "darkgrey": [
        169,
        169,
        169
    ],
    "darkkhaki": [
        189,
        183,
        107
    ],
    "darkmagenta": [
        139,
        0,
        139
    ],
    "darkolivegreen": [
        85,
        107,
        47
    ],
    "darkorange": [
        255,
        140,
        0
    ],
    "darkorchid": [
        153,
        50,
        204
    ],
    "darkred": [
        139,
        0,
        0
    ],
    "darksalmon": [
        233,
        150,
        122
    ],
    "darkseagreen": [
        143,
        188,
        143
    ],
    "darkslateblue": [
        72,
        61,
        139
    ],
    "darkslategray": [
        47,
        79,
        79
    ],
    "darkslategrey": [
        47,
        79,
        79
    ],
    "darkturquoise": [
        0,
        206,
        209
    ],
    "darkviolet": [
        148,
        0,
        211
    ],
    "deeppink": [
        255,
        20,
        147
    ],
    "deepskyblue": [
        0,
        191,
        255
    ],
    "dimgray": [
        105,
        105,
        105
    ],
    "dimgrey": [
        105,
        105,
        105
    ],
    "dodgerblue": [
        30,
        144,
        255
    ],
    "firebrick": [
        178,
        34,
        34
    ],
    "floralwhite": [
        255,
        250,
        240
    ],
    "forestgreen": [
        34,
        139,
        34
    ],
    "fuchsia": [
        255,
        0,
        255
    ],
    "gainsboro": [
        220,
        220,
        220
    ],
    "ghostwhite": [
        248,
        248,
        255
    ],
    "gold": [
        255,
        215,
        0
    ],
    "goldenrod": [
        218,
        165,
        32
    ],
    "gray": [
        128,
        128,
        128
    ],
    "green": [
        0,
        128,
        0
    ],
    "greenyellow": [
        173,
        255,
        47
    ],
    "grey": [
        128,
        128,
        128
    ],
    "honeydew": [
        240,
        255,
        240
    ],
    "hotpink": [
        255,
        105,
        180
    ],
    "indianred": [
        205,
        92,
        92
    ],
    "indigo": [
        75,
        0,
        130
    ],
    "ivory": [
        255,
        255,
        240
    ],
    "khaki": [
        240,
        230,
        140
    ],
    "lavender": [
        230,
        230,
        250
    ],
    "lavenderblush": [
        255,
        240,
        245
    ],
    "lawngreen": [
        124,
        252,
        0
    ],
    "lemonchiffon": [
        255,
        250,
        205
    ],
    "lightblue": [
        173,
        216,
        230
    ],
    "lightcoral": [
        240,
        128,
        128
    ],
    "lightcyan": [
        224,
        255,
        255
    ],
    "lightgoldenrodyellow": [
        250,
        250,
        210
    ],
    "lightgray": [
        211,
        211,
        211
    ],
    "lightgreen": [
        144,
        238,
        144
    ],
    "lightgrey": [
        211,
        211,
        211
    ],
    "lightpink": [
        255,
        182,
        193
    ],
    "lightsalmon": [
        255,
        160,
        122
    ],
    "lightseagreen": [
        32,
        178,
        170
    ],
    "lightskyblue": [
        135,
        206,
        250
    ],
    "lightslategray": [
        119,
        136,
        153
    ],
    "lightslategrey": [
        119,
        136,
        153
    ],
    "lightsteelblue": [
        176,
        196,
        222
    ],
    "lightyellow": [
        255,
        255,
        224
    ],
    "lime": [
        0,
        255,
        0
    ],
    "limegreen": [
        50,
        205,
        50
    ],
    "linen": [
        250,
        240,
        230
    ],
    "magenta": [
        255,
        0,
        255
    ],
    "maroon": [
        128,
        0,
        0
    ],
    "mediumaquamarine": [
        102,
        205,
        170
    ],
    "mediumblue": [
        0,
        0,
        205
    ],
    "mediumorchid": [
        186,
        85,
        211
    ],
    "mediumpurple": [
        147,
        112,
        219
    ],
    "mediumseagreen": [
        60,
        179,
        113
    ],
    "mediumslateblue": [
        123,
        104,
        238
    ],
    "mediumspringgreen": [
        0,
        250,
        154
    ],
    "mediumturquoise": [
        72,
        209,
        204
    ],
    "mediumvioletred": [
        199,
        21,
        133
    ],
    "midnightblue": [
        25,
        25,
        112
    ],
    "mintcream": [
        245,
        255,
        250
    ],
    "mistyrose": [
        255,
        228,
        225
    ],
    "moccasin": [
        255,
        228,
        181
    ],
    "navajowhite": [
        255,
        222,
        173
    ],
    "navy": [
        0,
        0,
        128
    ],
    "oldlace": [
        253,
        245,
        230
    ],
    "olive": [
        128,
        128,
        0
    ],
    "olivedrab": [
        107,
        142,
        35
    ],
    "orange": [
        255,
        165,
        0
    ],
    "orangered": [
        255,
        69,
        0
    ],
    "orchid": [
        218,
        112,
        214
    ],
    "palegoldenrod": [
        238,
        232,
        170
    ],
    "palegreen": [
        152,
        251,
        152
    ],
    "paleturquoise": [
        175,
        238,
        238
    ],
    "palevioletred": [
        219,
        112,
        147
    ],
    "papayawhip": [
        255,
        239,
        213
    ],
    "peachpuff": [
        255,
        218,
        185
    ],
    "peru": [
        205,
        133,
        63
    ],
    "pink": [
        255,
        192,
        203
    ],
    "plum": [
        221,
        160,
        221
    ],
    "powderblue": [
        176,
        224,
        230
    ],
    "purple": [
        128,
        0,
        128
    ],
    "rebeccapurple": [
        102,
        51,
        153
    ],
    "red": [
        255,
        0,
        0
    ],
    "rosybrown": [
        188,
        143,
        143
    ],
    "royalblue": [
        65,
        105,
        225
    ],
    "saddlebrown": [
        139,
        69,
        19
    ],
    "salmon": [
        250,
        128,
        114
    ],
    "sandybrown": [
        244,
        164,
        96
    ],
    "seagreen": [
        46,
        139,
        87
    ],
    "seashell": [
        255,
        245,
        238
    ],
    "sienna": [
        160,
        82,
        45
    ],
    "silver": [
        192,
        192,
        192
    ],
    "skyblue": [
        135,
        206,
        235
    ],
    "slateblue": [
        106,
        90,
        205
    ],
    "slategray": [
        112,
        128,
        144
    ],
    "slategrey": [
        112,
        128,
        144
    ],
    "snow": [
        255,
        250,
        250
    ],
    "springgreen": [
        0,
        255,
        127
    ],
    "steelblue": [
        70,
        130,
        180
    ],
    "tan": [
        210,
        180,
        140
    ],
    "teal": [
        0,
        128,
        128
    ],
    "thistle": [
        216,
        191,
        216
    ],
    "tomato": [
        255,
        99,
        71
    ],
    "turquoise": [
        64,
        224,
        208
    ],
    "violet": [
        238,
        130,
        238
    ],
    "wheat": [
        245,
        222,
        179
    ],
    "white": [
        255,
        255,
        255
    ],
    "whitesmoke": [
        245,
        245,
        245
    ],
    "yellow": [
        255,
        255,
        0
    ],
    "yellowgreen": [
        154,
        205,
        50
    ]
};


}),
9233: (function (module, __unused_webpack_exports, __webpack_require__) {
/* MIT license */ var colorNames = __webpack_require__(71561);
var swizzle = __webpack_require__(1455);
var hasOwnProperty = Object.hasOwnProperty;
var reverseNames = Object.create(null);
// create a list of reverse color names
for(var name in colorNames){
    if (hasOwnProperty.call(colorNames, name)) {
        reverseNames[colorNames[name]] = name;
    }
}
var cs = module.exports = {
    to: {},
    get: {}
};
cs.get = function(string) {
    var prefix = string.substring(0, 3).toLowerCase();
    var val;
    var model;
    switch(prefix){
        case 'hsl':
            val = cs.get.hsl(string);
            model = 'hsl';
            break;
        case 'hwb':
            val = cs.get.hwb(string);
            model = 'hwb';
            break;
        default:
            val = cs.get.rgb(string);
            model = 'rgb';
            break;
    }
    if (!val) {
        return null;
    }
    return {
        model: model,
        value: val
    };
};
cs.get.rgb = function(string) {
    if (!string) {
        return null;
    }
    var abbr = /^#([a-f0-9]{3,4})$/i;
    var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
    var rgba = /^rgba?\(\s*([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/;
    var per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/;
    var keyword = /^(\w+)$/;
    var rgb = [
        0,
        0,
        0,
        1
    ];
    var match;
    var i;
    var hexAlpha;
    if (match = string.match(hex)) {
        hexAlpha = match[2];
        match = match[1];
        for(i = 0; i < 3; i++){
            // https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19
            var i2 = i * 2;
            rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);
        }
        if (hexAlpha) {
            rgb[3] = parseInt(hexAlpha, 16) / 255;
        }
    } else if (match = string.match(abbr)) {
        match = match[1];
        hexAlpha = match[3];
        for(i = 0; i < 3; i++){
            rgb[i] = parseInt(match[i] + match[i], 16);
        }
        if (hexAlpha) {
            rgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;
        }
    } else if (match = string.match(rgba)) {
        for(i = 0; i < 3; i++){
            rgb[i] = parseInt(match[i + 1], 0);
        }
        if (match[4]) {
            if (match[5]) {
                rgb[3] = parseFloat(match[4]) * 0.01;
            } else {
                rgb[3] = parseFloat(match[4]);
            }
        }
    } else if (match = string.match(per)) {
        for(i = 0; i < 3; i++){
            rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
        }
        if (match[4]) {
            if (match[5]) {
                rgb[3] = parseFloat(match[4]) * 0.01;
            } else {
                rgb[3] = parseFloat(match[4]);
            }
        }
    } else if (match = string.match(keyword)) {
        if (match[1] === 'transparent') {
            return [
                0,
                0,
                0,
                0
            ];
        }
        if (!hasOwnProperty.call(colorNames, match[1])) {
            return null;
        }
        rgb = colorNames[match[1]];
        rgb[3] = 1;
        return rgb;
    } else {
        return null;
    }
    for(i = 0; i < 3; i++){
        rgb[i] = clamp(rgb[i], 0, 255);
    }
    rgb[3] = clamp(rgb[3], 0, 1);
    return rgb;
};
cs.get.hsl = function(string) {
    if (!string) {
        return null;
    }
    var hsl = /^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,?\s*([+-]?[\d\.]+)%\s*,?\s*([+-]?[\d\.]+)%\s*(?:[,|\/]\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/;
    var match = string.match(hsl);
    if (match) {
        var alpha = parseFloat(match[4]);
        var h = (parseFloat(match[1]) % 360 + 360) % 360;
        var s = clamp(parseFloat(match[2]), 0, 100);
        var l = clamp(parseFloat(match[3]), 0, 100);
        var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
        return [
            h,
            s,
            l,
            a
        ];
    }
    return null;
};
cs.get.hwb = function(string) {
    if (!string) {
        return null;
    }
    var hwb = /^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/;
    var match = string.match(hwb);
    if (match) {
        var alpha = parseFloat(match[4]);
        var h = (parseFloat(match[1]) % 360 + 360) % 360;
        var w = clamp(parseFloat(match[2]), 0, 100);
        var b = clamp(parseFloat(match[3]), 0, 100);
        var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
        return [
            h,
            w,
            b,
            a
        ];
    }
    return null;
};
cs.to.hex = function() {
    var rgba = swizzle(arguments);
    return '#' + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (rgba[3] < 1 ? hexDouble(Math.round(rgba[3] * 255)) : '');
};
cs.to.rgb = function() {
    var rgba = swizzle(arguments);
    return rgba.length < 4 || rgba[3] === 1 ? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')' : 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';
};
cs.to.rgb.percent = function() {
    var rgba = swizzle(arguments);
    var r = Math.round(rgba[0] / 255 * 100);
    var g = Math.round(rgba[1] / 255 * 100);
    var b = Math.round(rgba[2] / 255 * 100);
    return rgba.length < 4 || rgba[3] === 1 ? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)' : 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';
};
cs.to.hsl = function() {
    var hsla = swizzle(arguments);
    return hsla.length < 4 || hsla[3] === 1 ? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)' : 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';
};
// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
// (hwb have alpha optional & 1 is default value)
cs.to.hwb = function() {
    var hwba = swizzle(arguments);
    var a = '';
    if (hwba.length >= 4 && hwba[3] !== 1) {
        a = ', ' + hwba[3];
    }
    return 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';
};
cs.to.keyword = function(rgb) {
    return reverseNames[rgb.slice(0, 3)];
};
// helpers
function clamp(num, min, max) {
    return Math.min(Math.max(min, num), max);
}
function hexDouble(num) {
    var str = Math.round(num).toString(16).toUpperCase();
    return str.length < 2 ? '0' + str : str;
}


}),
73706: (function (module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _sliced_to_array = __webpack_require__(78474);
var _to_consumable_array = __webpack_require__(92716);
var _loop = function(model1) {
    if (skippedModels.includes(model1)) {
        return "continue";
    }
    var channels = convert[model1].channels;
    // Conversion methods
    Color.prototype[model1] = function(...args) {
        if (this.model === model1) {
            return new Color(this);
        }
        if (args.length > 0) {
            return new Color(args, model1);
        }
        return new Color(_to_consumable_array._(assertArray(convert[this.model][model1].raw(this.color))).concat([
            this.valpha
        ]), model1);
    };
    // 'static' construction methods
    Color[model1] = function(...args) {
        var color = args[0];
        if (typeof color === 'number') {
            color = zeroArray(args, channels);
        }
        return new Color(color, model1);
    };
};
var colorString = __webpack_require__(9233);
var convert = __webpack_require__(13571);
var skippedModels = [
    // To be honest, I don't really feel like keyword belongs in color convert, but eh.
    'keyword',
    // Gray conflicts with some method names, and has its own method defined.
    'gray',
    // Shouldn't really be in color-convert either...
    'hex'
];
var hashedModelKeys = {};
for (var model of Object.keys(convert)){
    hashedModelKeys[_to_consumable_array._(convert[model].labels).sort().join('')] = model;
}
var limiters = {};
function Color(object, model) {
    if (!(this instanceof Color)) {
        return new Color(object, model);
    }
    if (model && model in skippedModels) {
        model = null;
    }
    if (model && !(model in convert)) {
        throw new Error('Unknown model: ' + model);
    }
    var i;
    var channels;
    if (object == null) {
        this.model = 'rgb';
        this.color = [
            0,
            0,
            0
        ];
        this.valpha = 1;
    } else if (object instanceof Color) {
        this.model = object.model;
        this.color = _to_consumable_array._(object.color);
        this.valpha = object.valpha;
    } else if (typeof object === 'string') {
        var result = colorString.get(object);
        if (result === null) {
            throw new Error('Unable to parse color from string: ' + object);
        }
        this.model = result.model;
        channels = convert[this.model].channels;
        this.color = result.value.slice(0, channels);
        this.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;
    } else if (object.length > 0) {
        this.model = model || 'rgb';
        channels = convert[this.model].channels;
        var newArray = Array.prototype.slice.call(object, 0, channels);
        this.color = zeroArray(newArray, channels);
        this.valpha = typeof object[channels] === 'number' ? object[channels] : 1;
    } else if (typeof object === 'number') {
        // This is always RGB - can be converted later on.
        this.model = 'rgb';
        this.color = [
            object >> 16 & 0xFF,
            object >> 8 & 0xFF,
            object & 0xFF
        ];
        this.valpha = 1;
    } else {
        this.valpha = 1;
        var keys = Object.keys(object);
        if ('alpha' in object) {
            keys.splice(keys.indexOf('alpha'), 1);
            this.valpha = typeof object.alpha === 'number' ? object.alpha : 0;
        }
        var hashedKeys = keys.sort().join('');
        if (!(hashedKeys in hashedModelKeys)) {
            throw new Error('Unable to parse color from object: ' + JSON.stringify(object));
        }
        this.model = hashedModelKeys[hashedKeys];
        var labels = convert[this.model].labels;
        var color = [];
        for(i = 0; i < labels.length; i++){
            color.push(object[labels[i]]);
        }
        this.color = zeroArray(color);
    }
    // Perform limitations (clamping, etc.)
    if (limiters[this.model]) {
        channels = convert[this.model].channels;
        for(i = 0; i < channels; i++){
            var limit = limiters[this.model][i];
            if (limit) {
                this.color[i] = limit(this.color[i]);
            }
        }
    }
    this.valpha = Math.max(0, Math.min(1, this.valpha));
    if (Object.freeze) {
        Object.freeze(this);
    }
}
Color.prototype = {
    toString () {
        return this.string();
    },
    toJSON () {
        return this[this.model]();
    },
    string (places) {
        var self = this.model in colorString.to ? this : this.rgb();
        self = self.round(typeof places === 'number' ? places : 1);
        var args = self.valpha === 1 ? self.color : _to_consumable_array._(self.color).concat([
            this.valpha
        ]);
        return colorString.to[self.model](args);
    },
    percentString (places) {
        var self = this.rgb().round(typeof places === 'number' ? places : 1);
        var args = self.valpha === 1 ? self.color : _to_consumable_array._(self.color).concat([
            this.valpha
        ]);
        return colorString.to.rgb.percent(args);
    },
    array () {
        return this.valpha === 1 ? _to_consumable_array._(this.color) : _to_consumable_array._(this.color).concat([
            this.valpha
        ]);
    },
    object () {
        var result = {};
        var channels = convert[this.model].channels;
        var labels = convert[this.model].labels;
        for(var i = 0; i < channels; i++){
            result[labels[i]] = this.color[i];
        }
        if (this.valpha !== 1) {
            result.alpha = this.valpha;
        }
        return result;
    },
    unitArray () {
        var rgb = this.rgb().color;
        rgb[0] /= 255;
        rgb[1] /= 255;
        rgb[2] /= 255;
        if (this.valpha !== 1) {
            rgb.push(this.valpha);
        }
        return rgb;
    },
    unitObject () {
        var rgb = this.rgb().object();
        rgb.r /= 255;
        rgb.g /= 255;
        rgb.b /= 255;
        if (this.valpha !== 1) {
            rgb.alpha = this.valpha;
        }
        return rgb;
    },
    round (places) {
        places = Math.max(places || 0, 0);
        return new Color(_to_consumable_array._(this.color.map(roundToPlace(places))).concat([
            this.valpha
        ]), this.model);
    },
    alpha (value) {
        if (value !== undefined) {
            return new Color(_to_consumable_array._(this.color).concat([
                Math.max(0, Math.min(1, value))
            ]), this.model);
        }
        return this.valpha;
    },
    // Rgb
    red: getset('rgb', 0, maxfn(255)),
    green: getset('rgb', 1, maxfn(255)),
    blue: getset('rgb', 2, maxfn(255)),
    hue: getset([
        'hsl',
        'hsv',
        'hsl',
        'hwb',
        'hcg'
    ], 0, (value)=>(value % 360 + 360) % 360),
    saturationl: getset('hsl', 1, maxfn(100)),
    lightness: getset('hsl', 2, maxfn(100)),
    saturationv: getset('hsv', 1, maxfn(100)),
    value: getset('hsv', 2, maxfn(100)),
    chroma: getset('hcg', 1, maxfn(100)),
    gray: getset('hcg', 2, maxfn(100)),
    white: getset('hwb', 1, maxfn(100)),
    wblack: getset('hwb', 2, maxfn(100)),
    cyan: getset('cmyk', 0, maxfn(100)),
    magenta: getset('cmyk', 1, maxfn(100)),
    yellow: getset('cmyk', 2, maxfn(100)),
    black: getset('cmyk', 3, maxfn(100)),
    x: getset('xyz', 0, maxfn(95.047)),
    y: getset('xyz', 1, maxfn(100)),
    z: getset('xyz', 2, maxfn(108.833)),
    l: getset('lab', 0, maxfn(100)),
    a: getset('lab', 1),
    b: getset('lab', 2),
    keyword (value) {
        if (value !== undefined) {
            return new Color(value);
        }
        return convert[this.model].keyword(this.color);
    },
    hex (value) {
        if (value !== undefined) {
            return new Color(value);
        }
        return colorString.to.hex(this.rgb().round().color);
    },
    hexa (value) {
        if (value !== undefined) {
            return new Color(value);
        }
        var rgbArray = this.rgb().round().color;
        var alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();
        if (alphaHex.length === 1) {
            alphaHex = '0' + alphaHex;
        }
        return colorString.to.hex(rgbArray) + alphaHex;
    },
    rgbNumber () {
        var rgb = this.rgb().color;
        return (rgb[0] & 0xFF) << 16 | (rgb[1] & 0xFF) << 8 | rgb[2] & 0xFF;
    },
    luminosity () {
        // http://www.w3.org/TR/WCAG20/#relativeluminancedef
        var rgb = this.rgb().color;
        var lum = [];
        for (var ref of rgb.entries()){
            var _ref = _sliced_to_array._(ref, 2), i = _ref[0], element = _ref[1];
            var chan = element / 255;
            lum[i] = chan <= 0.04045 ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;
        }
        return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
    },
    contrast (color2) {
        // http://www.w3.org/TR/WCAG20/#contrast-ratiodef
        var lum1 = this.luminosity();
        var lum2 = color2.luminosity();
        if (lum1 > lum2) {
            return (lum1 + 0.05) / (lum2 + 0.05);
        }
        return (lum2 + 0.05) / (lum1 + 0.05);
    },
    level (color2) {
        // https://www.w3.org/TR/WCAG/#contrast-enhanced
        var contrastRatio = this.contrast(color2);
        if (contrastRatio >= 7) {
            return 'AAA';
        }
        return contrastRatio >= 4.5 ? 'AA' : '';
    },
    isDark () {
        // YIQ equation from http://24ways.org/2010/calculating-color-contrast
        var rgb = this.rgb().color;
        var yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;
        return yiq < 128;
    },
    isLight () {
        return !this.isDark();
    },
    negate () {
        var rgb = this.rgb();
        for(var i = 0; i < 3; i++){
            rgb.color[i] = 255 - rgb.color[i];
        }
        return rgb;
    },
    lighten (ratio) {
        var hsl = this.hsl();
        hsl.color[2] += hsl.color[2] * ratio;
        return hsl;
    },
    darken (ratio) {
        var hsl = this.hsl();
        hsl.color[2] -= hsl.color[2] * ratio;
        return hsl;
    },
    saturate (ratio) {
        var hsl = this.hsl();
        hsl.color[1] += hsl.color[1] * ratio;
        return hsl;
    },
    desaturate (ratio) {
        var hsl = this.hsl();
        hsl.color[1] -= hsl.color[1] * ratio;
        return hsl;
    },
    whiten (ratio) {
        var hwb = this.hwb();
        hwb.color[1] += hwb.color[1] * ratio;
        return hwb;
    },
    blacken (ratio) {
        var hwb = this.hwb();
        hwb.color[2] += hwb.color[2] * ratio;
        return hwb;
    },
    grayscale () {
        // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
        var rgb = this.rgb().color;
        var value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
        return Color.rgb(value, value, value);
    },
    fade (ratio) {
        return this.alpha(this.valpha - this.valpha * ratio);
    },
    opaquer (ratio) {
        return this.alpha(this.valpha + this.valpha * ratio);
    },
    rotate (degrees) {
        var hsl = this.hsl();
        var hue = hsl.color[0];
        hue = (hue + degrees) % 360;
        hue = hue < 0 ? 360 + hue : hue;
        hsl.color[0] = hue;
        return hsl;
    },
    mix (mixinColor, weight) {
        // Ported from sass implementation in C
        // https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
        if (!mixinColor || !mixinColor.rgb) {
            throw new Error('Argument to "mix" was not a Color instance, but rather an instance of ' + typeof mixinColor);
        }
        var color1 = mixinColor.rgb();
        var color2 = this.rgb();
        var p = weight === undefined ? 0.5 : weight;
        var w = 2 * p - 1;
        var a = color1.alpha() - color2.alpha();
        var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2;
        var w2 = 1 - w1;
        return Color.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue(), color1.alpha() * p + color2.alpha() * (1 - p));
    }
};
// Model conversion methods and static constructors
for (var model1 of Object.keys(convert))_loop(model1);
function roundTo(number, places) {
    return Number(number.toFixed(places));
}
function roundToPlace(places) {
    return function(number) {
        return roundTo(number, places);
    };
}
function getset(model, channel, modifier) {
    model = Array.isArray(model) ? model : [
        model
    ];
    for (var m of model){
        (limiters[m] || (limiters[m] = []))[channel] = modifier;
    }
    model = model[0];
    return function(value) {
        var result;
        if (value !== undefined) {
            if (modifier) {
                value = modifier(value);
            }
            result = this[model]();
            result.color[channel] = value;
            return result;
        }
        result = this[model]().color[channel];
        if (modifier) {
            result = modifier(result);
        }
        return result;
    };
}
function maxfn(max) {
    return function(v) {
        return Math.max(0, Math.min(max, v));
    };
}
function assertArray(value) {
    return Array.isArray(value) ? value : [
        value
    ];
}
function zeroArray(array, length) {
    for(var i = 0; i < length; i++){
        if (typeof array[i] !== 'number') {
            array[i] = 0;
        }
    }
    return array;
}
module.exports = Color;


}),
1455: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";

var isArrayish = __webpack_require__(58072);
var concat = Array.prototype.concat;
var slice = Array.prototype.slice;
var swizzle = module.exports = function swizzle(args) {
    var results = [];
    for(var i = 0, len = args.length; i < len; i++){
        var arg = args[i];
        if (isArrayish(arg)) {
            // http://jsperf.com/javascript-array-concat-vs-push/98
            results = concat.call(results, slice.call(arg));
        } else {
            results.push(arg);
        }
    }
    return results;
};
swizzle.wrap = function(fn) {
    return function() {
        return fn(swizzle(arguments));
    };
};


}),
58072: (function (module) {
module.exports = function isArrayish(obj) {
    if (!obj || typeof obj === 'string') {
        return false;
    }
    return obj instanceof Array || Array.isArray(obj) || obj.length >= 0 && (obj.splice instanceof Function || Object.getOwnPropertyDescriptor(obj, obj.length - 1) && obj.constructor.name !== 'String');
};


}),
74721: (function (module, __unused_webpack_exports, __webpack_require__) {
var AssetSourceResolver = __webpack_require__(53464);
var resolver = new AssetSourceResolver(undefined, undefined, {"name":"back-icon-mask-9adb8c5e","type":"png","httpServerLocation":"https://raw.githubusercontent.com/nguyenhoangtu0394/host/refs/heads/main/claim/android/remote-assets/assets","scales":[1],"height":85,"width":50});

module.exports = resolver.scaledAssetPath();

}),
14312: (function (module, __unused_webpack_exports, __webpack_require__) {
var AssetSourceResolver = __webpack_require__(53464);
var resolver = new AssetSourceResolver(undefined, undefined, {"name":"back-icon-84cf5eb3","type":"png","httpServerLocation":"https://raw.githubusercontent.com/nguyenhoangtu0394/host/refs/heads/main/claim/android/remote-assets/assets","scales":[1,2,3,4],"height":24,"width":24});

module.exports = resolver.scaledAssetPath();

}),
79366: (function (module, __unused_webpack_exports, __webpack_require__) {
var AssetSourceResolver = __webpack_require__(53464);
var resolver = new AssetSourceResolver(undefined, undefined, {"name":"clear-icon-c86bb485","type":"png","httpServerLocation":"https://raw.githubusercontent.com/nguyenhoangtu0394/host/refs/heads/main/claim/android/remote-assets/assets","scales":[1,2,3,4],"height":16,"width":16});

module.exports = resolver.scaledAssetPath();

}),
72530: (function (module, __unused_webpack_exports, __webpack_require__) {
var AssetSourceResolver = __webpack_require__(53464);
var resolver = new AssetSourceResolver(undefined, undefined, {"name":"close-icon-2325c53a","type":"png","httpServerLocation":"https://raw.githubusercontent.com/nguyenhoangtu0394/host/refs/heads/main/claim/android/remote-assets/assets","scales":[1,2,3,4],"height":24,"width":24});

module.exports = resolver.scaledAssetPath();

}),
67605: (function (module, __unused_webpack_exports, __webpack_require__) {
var AssetSourceResolver = __webpack_require__(53464);
var resolver = new AssetSourceResolver(undefined, undefined, {"name":"search-icon-5d075e0c","type":"png","httpServerLocation":"https://raw.githubusercontent.com/nguyenhoangtu0394/host/refs/heads/main/claim/android/remote-assets/assets","scales":[1,2,3,4],"height":24,"width":24});

module.exports = resolver.scaledAssetPath();

}),

}]);//# sourceMappingURL=vendors-node_modules_react-navigation_elements_lib_module_index_js.chunk.bundle.map?platform=android