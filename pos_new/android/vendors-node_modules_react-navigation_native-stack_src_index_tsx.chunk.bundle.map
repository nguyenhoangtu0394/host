{"version":3,"file":"vendors-node_modules_react-navigation_native-stack_src_index_tsx.chunk.bundle","sources":["webpack://pos/./node_modules/warn-once/index.js","webpack://pos/./node_modules/@react-navigation/elements/src/Background.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/Header/Header.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/Header/HeaderBackButton.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/Header/HeaderBackContext.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/Header/HeaderBackground.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/Header/HeaderHeightContext.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/Header/HeaderShownContext.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/Header/HeaderTitle.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/Header/getDefaultHeaderHeight.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/Header/getHeaderTitle.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/Header/useHeaderHeight.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/MaskedView.android.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/MaskedViewNative.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/MissingIcon.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/PlatformPressable.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/ResourceSavingView.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/SafeAreaProviderCompat.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/Screen.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/getNamedContext.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/index.tsx","webpack://pos/./node_modules/@react-navigation/native-stack/src/index.tsx","webpack://pos/./node_modules/@react-navigation/native-stack/src/navigators/createNativeStackNavigator.tsx","webpack://pos/./node_modules/@react-navigation/native-stack/src/utils/useDismissedRouteError.tsx","webpack://pos/./node_modules/@react-navigation/native-stack/src/utils/useInvalidPreventRemoveError.tsx","webpack://pos/./node_modules/@react-navigation/native-stack/src/views/DebugContainer.native.tsx","webpack://pos/./node_modules/@react-navigation/native-stack/src/views/FontProcessor.native.tsx","webpack://pos/./node_modules/@react-navigation/native-stack/src/views/HeaderConfig.tsx","webpack://pos/./node_modules/@react-navigation/native-stack/src/views/NativeStackView.native.tsx","webpack://pos/./node_modules/@react-navigation/elements/src/assets/back-icon-mask.png","webpack://pos/./node_modules/@react-navigation/elements/src/assets/back-icon.png"],"sourcesContent":["const DEV = process.env.NODE_ENV !== \"production\";\n\nconst warnings = new Set();\n\nfunction warnOnce(condition, ...rest) {\n  if (DEV && condition) {\n    const key = rest.join(\" \");\n\n    if (warnings.has(key)) {\n      return;\n    }\n\n    warnings.add(key);\n    console.warn(...rest);\n  }\n}\n\nmodule.exports = warnOnce;\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\ntype Props = ViewProps & {\n  children: React.ReactNode;\n};\n\nexport default function Background({ style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      {...rest}\n      style={[{ flex: 1, backgroundColor: colors.background }, style]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport type { HeaderOptions, Layout } from '../types';\nimport getDefaultHeaderHeight from './getDefaultHeaderHeight';\nimport HeaderBackground from './HeaderBackground';\nimport HeaderShownContext from './HeaderShownContext';\nimport HeaderTitle from './HeaderTitle';\n\ntype Props = HeaderOptions & {\n  /**\n   * Whether the header is in a modal\n   */\n  modal?: boolean;\n  /**\n   * Layout of the screen.\n   */\n  layout?: Layout;\n  /**\n   * Title text for the header.\n   */\n  title: string;\n};\n\nconst warnIfHeaderStylesDefined = (styles: Record<string, any>) => {\n  Object.keys(styles).forEach((styleProp) => {\n    const value = styles[styleProp];\n\n    if (styleProp === 'position' && value === 'absolute') {\n      console.warn(\n        \"position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the 'headerTransparent' option.\"\n      );\n    } else if (value !== undefined) {\n      console.warn(\n        `${styleProp} was given a value of ${value}, this has no effect on headerStyle.`\n      );\n    }\n  });\n};\n\nexport default function Header(props: Props) {\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  // On models with Dynamic Island the status bar height is smaller than the safe area top inset.\n  const hasDynamicIsland = Platform.OS === 'ios' && insets.top > 50;\n  const statusBarHeight = hasDynamicIsland ? insets.top - 5 : insets.top;\n\n  const {\n    layout = frame,\n    modal = false,\n    title,\n    headerTitle: customTitle,\n    headerTitleAlign = Platform.select({\n      ios: 'center',\n      default: 'left',\n    }),\n    headerLeft,\n    headerLeftLabelVisible,\n    headerTransparent,\n    headerTintColor,\n    headerBackground,\n    headerRight,\n    headerTitleAllowFontScaling: titleAllowFontScaling,\n    headerTitleStyle: titleStyle,\n    headerLeftContainerStyle: leftContainerStyle,\n    headerRightContainerStyle: rightContainerStyle,\n    headerTitleContainerStyle: titleContainerStyle,\n    headerBackgroundContainerStyle: backgroundContainerStyle,\n    headerStyle: customHeaderStyle,\n    headerShadowVisible,\n    headerPressColor,\n    headerPressOpacity,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : statusBarHeight,\n  } = props;\n\n  const defaultHeight = getDefaultHeaderHeight(\n    layout,\n    modal,\n    headerStatusBarHeight\n  );\n\n  const {\n    height = defaultHeight,\n    minHeight,\n    maxHeight,\n    backgroundColor,\n    borderBottomColor,\n    borderBottomEndRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n    borderBottomStartRadius,\n    borderBottomWidth,\n    borderColor,\n    borderEndColor,\n    borderEndWidth,\n    borderLeftColor,\n    borderLeftWidth,\n    borderRadius,\n    borderRightColor,\n    borderRightWidth,\n    borderStartColor,\n    borderStartWidth,\n    borderStyle,\n    borderTopColor,\n    borderTopEndRadius,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderTopStartRadius,\n    borderTopWidth,\n    borderWidth,\n    // @ts-expect-error: web support for shadow\n    boxShadow,\n    elevation,\n    shadowColor,\n    shadowOffset,\n    shadowOpacity,\n    shadowRadius,\n    opacity,\n    transform,\n    ...unsafeStyles\n  } = StyleSheet.flatten(customHeaderStyle || {}) as ViewStyle;\n\n  if (process.env.NODE_ENV !== 'production') {\n    warnIfHeaderStylesDefined(unsafeStyles);\n  }\n\n  const safeStyles: ViewStyle = {\n    backgroundColor,\n    borderBottomColor,\n    borderBottomEndRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n    borderBottomStartRadius,\n    borderBottomWidth,\n    borderColor,\n    borderEndColor,\n    borderEndWidth,\n    borderLeftColor,\n    borderLeftWidth,\n    borderRadius,\n    borderRightColor,\n    borderRightWidth,\n    borderStartColor,\n    borderStartWidth,\n    borderStyle,\n    borderTopColor,\n    borderTopEndRadius,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderTopStartRadius,\n    borderTopWidth,\n    borderWidth,\n    // @ts-expect-error: boxShadow is only for Web\n    boxShadow,\n    elevation,\n    shadowColor,\n    shadowOffset,\n    shadowOpacity,\n    shadowRadius,\n    opacity,\n    transform,\n  };\n\n  // Setting a property to undefined triggers default style\n  // So we need to filter them out\n  // Users can use `null` instead\n  for (const styleProp in safeStyles) {\n    // @ts-expect-error: typescript wrongly complains that styleProp cannot be used to index safeStyles\n    if (safeStyles[styleProp] === undefined) {\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete safeStyles[styleProp];\n    }\n  }\n\n  const backgroundStyle = [\n    safeStyles,\n    headerShadowVisible === false && {\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0,\n    },\n  ];\n\n  const leftButton = headerLeft\n    ? headerLeft({\n        tintColor: headerTintColor,\n        pressColor: headerPressColor,\n        pressOpacity: headerPressOpacity,\n        labelVisible: headerLeftLabelVisible,\n      })\n    : null;\n\n  const rightButton = headerRight\n    ? headerRight({\n        tintColor: headerTintColor,\n        pressColor: headerPressColor,\n        pressOpacity: headerPressOpacity,\n      })\n    : null;\n\n  const headerTitle =\n    typeof customTitle !== 'function'\n      ? (props: React.ComponentProps<typeof HeaderTitle>) => (\n          <HeaderTitle {...props} />\n        )\n      : customTitle;\n\n  return (\n    <React.Fragment>\n      <Animated.View\n        pointerEvents=\"box-none\"\n        style={[\n          StyleSheet.absoluteFill,\n          { zIndex: 0 },\n          backgroundContainerStyle,\n        ]}\n      >\n        {headerBackground ? (\n          headerBackground({ style: backgroundStyle })\n        ) : headerTransparent ? null : (\n          <HeaderBackground style={backgroundStyle} />\n        )}\n      </Animated.View>\n      <Animated.View\n        pointerEvents=\"box-none\"\n        style={[{ height, minHeight, maxHeight, opacity, transform }]}\n      >\n        <View pointerEvents=\"none\" style={{ height: headerStatusBarHeight }} />\n        <View pointerEvents=\"box-none\" style={styles.content}>\n          <Animated.View\n            pointerEvents=\"box-none\"\n            style={[\n              styles.left,\n              headerTitleAlign === 'center' && styles.expand,\n              { marginStart: insets.left },\n              leftContainerStyle,\n            ]}\n          >\n            {leftButton}\n          </Animated.View>\n          <Animated.View\n            pointerEvents=\"box-none\"\n            style={[\n              styles.title,\n              {\n                // Avoid the title from going offscreen or overlapping buttons\n                maxWidth:\n                  headerTitleAlign === 'center'\n                    ? layout.width -\n                      ((leftButton\n                        ? headerLeftLabelVisible !== false\n                          ? 80\n                          : 32\n                        : 16) +\n                        Math.max(insets.left, insets.right)) *\n                        2\n                    : layout.width -\n                      ((leftButton ? 72 : 16) +\n                        (rightButton ? 72 : 16) +\n                        insets.left -\n                        insets.right),\n              },\n              titleContainerStyle,\n            ]}\n          >\n            {headerTitle({\n              children: title,\n              allowFontScaling: titleAllowFontScaling,\n              tintColor: headerTintColor,\n              style: titleStyle,\n            })}\n          </Animated.View>\n          <Animated.View\n            pointerEvents=\"box-none\"\n            style={[\n              styles.right,\n              styles.expand,\n              { marginEnd: insets.right },\n              rightContainerStyle,\n            ]}\n          >\n            {rightButton}\n          </Animated.View>\n        </View>\n      </Animated.View>\n    </React.Fragment>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n  title: {\n    marginHorizontal: 16,\n    justifyContent: 'center',\n  },\n  left: {\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  right: {\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  expand: {\n    flexGrow: 1,\n    flexBasis: 0,\n  },\n});\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport MaskedView from '../MaskedView';\nimport PlatformPressable from '../PlatformPressable';\nimport type { HeaderBackButtonProps } from '../types';\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible = Platform.OS === 'ios',\n  onLabelLayout,\n  onPress,\n  pressColor,\n  pressOpacity,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  testID,\n  style,\n}: HeaderBackButtonProps) {\n  const { colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <PlatformPressable\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      testID={testID}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColor}\n      pressOpacity={pressOpacity}\n      android_ripple={androidRipple}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </PlatformPressable>\n  );\n}\n\nconst androidRipple = {\n  borderless: true,\n  foreground: Platform.OS === 'android' && Platform.Version >= 23,\n  radius: 20,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth, // Avoid collapsing when title is long\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.getConstants().isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.getConstants().isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.getConstants().isRTL ? -1 : 1 }],\n  },\n});\n","import getNamedContext from '../getNamedContext';\n\nconst HeaderBackContext = getNamedContext<{ title: string } | undefined>(\n  'HeaderBackContext',\n  undefined\n);\n\nexport default HeaderBackContext;\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\ntype Props = Omit<ViewProps, 'style'> & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children?: React.ReactNode;\n};\n\nexport default function HeaderBackground({ style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        {\n          backgroundColor: colors.card,\n          borderBottomColor: colors.border,\n          shadowColor: colors.border,\n        },\n        style,\n      ]}\n      {...rest}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowOpacity: 0.85,\n        shadowRadius: 0,\n        shadowOffset: {\n          width: 0,\n          height: StyleSheet.hairlineWidth,\n        },\n      },\n      default: {\n        borderBottomWidth: StyleSheet.hairlineWidth,\n      },\n    }),\n  },\n});\n","import getNamedContext from '../getNamedContext';\n\nconst HeaderHeightContext = getNamedContext<number | undefined>(\n  'HeaderHeightContext',\n  undefined\n);\n\nexport default HeaderHeightContext;\n","import getNamedContext from '../getNamedContext';\n\nconst HeaderShownContext = getNamedContext('HeaderShownContext', false);\n\nexport default HeaderShownContext;\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextProps,\n  TextStyle,\n} from 'react-native';\n\ntype Props = Omit<TextProps, 'style'> & {\n  tintColor?: string;\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function HeaderTitle({ tintColor, style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.Text\n      accessibilityRole=\"header\"\n      aria-level=\"1\"\n      numberOfLines={1}\n      {...rest}\n      style={[\n        styles.title,\n        { color: tintColor === undefined ? colors.text : tintColor },\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n});\n","import { Platform } from 'react-native';\n\nimport type { Layout } from '../types';\n\nexport default function getDefaultHeaderHeight(\n  layout: Layout,\n  modalPresentation: boolean,\n  statusBarHeight: number\n): number {\n  let headerHeight;\n\n  const isLandscape = layout.width > layout.height;\n\n  if (Platform.OS === 'ios') {\n    if (Platform.isPad || Platform.isTV) {\n      if (modalPresentation) {\n        headerHeight = 56;\n      } else {\n        headerHeight = 50;\n      }\n    } else {\n      if (isLandscape) {\n        headerHeight = 32;\n      } else {\n        if (modalPresentation) {\n          headerHeight = 56;\n        } else {\n          headerHeight = 44;\n        }\n      }\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n}\n","import type { HeaderOptions } from '../types';\n\nexport default function getHeaderTitle(\n  options: { title?: string; headerTitle?: HeaderOptions['headerTitle'] },\n  fallback: string\n): string {\n  return typeof options.headerTitle === 'string'\n    ? options.headerTitle\n    : options.title !== undefined\n    ? options.title\n    : fallback;\n}\n","import * as React from 'react';\n\nimport HeaderHeightContext from './HeaderHeightContext';\n\nexport default function useHeaderHeight() {\n  const height = React.useContext(HeaderHeightContext);\n\n  if (height === undefined) {\n    throw new Error(\n      \"Couldn't find the header height. Are you inside a screen in a navigator with a header?\"\n    );\n  }\n\n  return height;\n}\n","export { default } from './MaskedViewNative';\n","/**\n * The native MaskedView that we explicitly re-export for supported platforms: Android, iOS.\n */\nimport * as React from 'react';\nimport { UIManager } from 'react-native';\n\ntype MaskedViewType =\n  typeof import('@react-native-masked-view/masked-view').default;\n\ntype Props = React.ComponentProps<MaskedViewType> & {\n  children: React.ReactElement;\n};\n\nlet RNCMaskedView: MaskedViewType | undefined;\n\ntry {\n  // Add try/catch to support usage even if it's not installed, since it's optional.\n  // Newer versions of Metro will handle it properly.\n  RNCMaskedView = require('@react-native-masked-view/masked-view').default;\n} catch (e) {\n  // Ignore\n}\n\nconst isMaskedViewAvailable =\n  UIManager.getViewManagerConfig('RNCMaskedView') != null;\n\nexport default function MaskedView({ children, ...rest }: Props) {\n  if (isMaskedViewAvailable && RNCMaskedView) {\n    return <RNCMaskedView {...rest}>{children}</RNCMaskedView>;\n  }\n\n  return children;\n}\n","import * as React from 'react';\nimport { StyleProp, StyleSheet, Text, TextStyle } from 'react-native';\n\ntype Props = {\n  color?: string;\n  size?: number;\n  style?: StyleProp<TextStyle>;\n};\n\nexport default function MissingIcon({ color, size, style }: Props) {\n  return <Text style={[styles.icon, { color, fontSize: size }, style]}>⏷</Text>;\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  PressableProps,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nexport type Props = Omit<PressableProps, 'style'> & {\n  pressColor?: string;\n  pressOpacity?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children: React.ReactNode;\n};\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_SUPPORTS_RIPPLE =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\n/**\n * PlatformPressable provides an abstraction on top of Pressable to handle platform differences.\n */\nexport default function PlatformPressable({\n  onPressIn,\n  onPressOut,\n  android_ripple,\n  pressColor,\n  pressOpacity = 0.3,\n  style,\n  ...rest\n}: Props) {\n  const { dark } = useTheme();\n  const [opacity] = React.useState(() => new Animated.Value(1));\n\n  const animateTo = (toValue: number, duration: number) => {\n    if (ANDROID_SUPPORTS_RIPPLE) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue,\n      duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    animateTo(pressOpacity, 0);\n    onPressIn?.(e);\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    animateTo(1, 200);\n    onPressOut?.(e);\n  };\n\n  return (\n    <AnimatedPressable\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      android_ripple={\n        ANDROID_SUPPORTS_RIPPLE\n          ? {\n              color:\n                pressColor !== undefined\n                  ? pressColor\n                  : dark\n                  ? 'rgba(255, 255, 255, .32)'\n                  : 'rgba(0, 0, 0, .32)',\n              ...android_ripple,\n            }\n          : undefined\n      }\n      style={[{ opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1 }, style]}\n      {...rest}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Platform, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\ntype Props = {\n  visible: boolean;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default function ResourceSavingScene({\n  visible,\n  children,\n  style,\n  ...rest\n}: Props) {\n  if (Platform.OS === 'web') {\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!visible}\n        style={[\n          { display: visible ? 'flex' : 'none' },\n          styles.container,\n          style,\n        ]}\n        pointerEvents={visible ? 'auto' : 'none'}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={[styles.container, style]}\n      // box-none doesn't seem to work properly on Android\n      pointerEvents={visible ? 'auto' : 'none'}\n    >\n      <View\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS & macOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' || Platform.OS === 'macos' ? !visible : true\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n        style={visible ? styles.attached : styles.detached}\n      >\n        {children}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n","import * as React from 'react';\nimport {\n  Dimensions,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  initialWindowMetrics,\n  type Metrics,\n  SafeAreaFrameContext,\n  SafeAreaInsetsContext,\n  SafeAreaProvider,\n} from 'react-native-safe-area-context';\n\ntype Props = {\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst { width = 0, height = 0 } = Dimensions.get('window');\n\n// To support SSR on web, we need to have empty insets for initial values\n// Otherwise there can be mismatch between SSR and client output\n// We also need to specify empty values to support tests environments\nconst initialMetrics =\n  Platform.OS === 'web' || initialWindowMetrics == null\n    ? {\n        frame: { x: 0, y: 0, width, height },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }\n    : initialWindowMetrics;\n\nexport default function SafeAreaProviderCompat({ children, style }: Props) {\n  const insets = React.useContext(SafeAreaInsetsContext);\n\n  if (insets) {\n    // If we already have insets, don't wrap the stack in another safe area provider\n    // This avoids an issue with updates at the cost of potentially incorrect values\n    // https://github.com/react-navigation/react-navigation/issues/174\n    return <View style={[styles.container, style]}>{children}</View>;\n  }\n\n  if (Platform.OS === 'web') {\n    children = (\n      <SafeAreaFrameProvider initialMetrics={initialMetrics}>\n        {children}\n      </SafeAreaFrameProvider>\n    );\n  }\n\n  return (\n    <SafeAreaProvider initialMetrics={initialMetrics} style={style}>\n      {children}\n    </SafeAreaProvider>\n  );\n}\n\n// FIXME: On the Web, the safe area frame value doesn't update on resize\n// So we workaround this by measuring the frame on resize\nconst SafeAreaFrameProvider = ({\n  initialMetrics,\n  children,\n}: {\n  initialMetrics: Metrics;\n  children: React.ReactNode;\n}) => {\n  const element = React.useRef<HTMLDivElement>(null);\n  const [frame, setFrame] = React.useState(initialMetrics.frame);\n\n  React.useEffect(() => {\n    if (element.current == null) {\n      return;\n    }\n\n    const rect = element.current.getBoundingClientRect();\n\n    setFrame({\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n    });\n\n    let timeout: NodeJS.Timeout;\n\n    const observer = new ResizeObserver((entries) => {\n      const entry = entries[0];\n\n      if (entry) {\n        const { x, y, width, height } = entry.contentRect;\n\n        // Debounce the frame updates to avoid too many updates in a short time\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n          setFrame({ x, y, width, height });\n        }, 100);\n      }\n    });\n\n    observer.observe(element.current);\n\n    return () => {\n      observer.disconnect();\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  return (\n    <SafeAreaFrameContext.Provider value={frame}>\n      <div\n        ref={element}\n        style={{\n          ...StyleSheet.absoluteFillObject,\n          pointerEvents: 'none',\n          visibility: 'hidden',\n        }}\n      />\n      {children}\n    </SafeAreaFrameContext.Provider>\n  );\n};\n\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","import {\n  NavigationContext,\n  NavigationProp,\n  NavigationRouteContext,\n  ParamListBase,\n  RouteProp,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\n\ntype Props = {\n  focused: boolean;\n  modal?: boolean;\n  navigation: NavigationProp<ParamListBase>;\n  route: RouteProp<ParamListBase>;\n  header: React.ReactNode;\n  headerShown?: boolean;\n  headerStatusBarHeight?: number;\n  headerTransparent?: boolean;\n  style?: StyleProp<ViewStyle>;\n  children: React.ReactNode;\n};\n\nexport default function Screen(props: Props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const {\n    focused,\n    modal = false,\n    header,\n    headerShown = true,\n    headerTransparent,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style,\n  } = props;\n\n  const [headerHeight, setHeaderHeight] = React.useState(() =>\n    getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight)\n  );\n\n  return (\n    <Background\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.container, style]}\n    >\n      <View style={styles.content}>\n        <HeaderShownContext.Provider\n          value={isParentHeaderShown || headerShown !== false}\n        >\n          <HeaderHeightContext.Provider\n            value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n          >\n            {children}\n          </HeaderHeightContext.Provider>\n        </HeaderShownContext.Provider>\n      </View>\n      {headerShown ? (\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            <View\n              onLayout={(e) => {\n                const { height } = e.nativeEvent.layout;\n\n                setHeaderHeight(height);\n              }}\n              style={headerTransparent ? styles.absolute : null}\n            >\n              {header}\n            </View>\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      ) : null}\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  // This is necessary to avoid applying 'column-reverse' to screen content\n  content: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n","import * as React from 'react';\n\nconst contexts = '__react_navigation__elements_contexts';\n\ndeclare global {\n  var __react_navigation__elements_contexts: Map<string, React.Context<any>>;\n}\n\n// We use a global variable to keep our contexts so that we can reuse same contexts across packages\nglobal[contexts] = global[contexts] ?? new Map<string, React.Context<any>>();\n\nexport default function getNamedContext<T>(\n  name: string,\n  initialValue: T\n): React.Context<T> {\n  let context = global[contexts].get(name);\n\n  if (context) {\n    return context;\n  }\n\n  context = React.createContext<T>(initialValue);\n  context.displayName = name;\n\n  global[contexts].set(name, context);\n\n  return context;\n}\n","export { default as Background } from './Background';\nexport { default as getDefaultHeaderHeight } from './Header/getDefaultHeaderHeight';\nexport { default as getHeaderTitle } from './Header/getHeaderTitle';\nexport { default as Header } from './Header/Header';\nexport { default as HeaderBackButton } from './Header/HeaderBackButton';\nexport { default as HeaderBackContext } from './Header/HeaderBackContext';\nexport { default as HeaderBackground } from './Header/HeaderBackground';\nexport { default as HeaderHeightContext } from './Header/HeaderHeightContext';\nexport { default as HeaderShownContext } from './Header/HeaderShownContext';\nexport { default as HeaderTitle } from './Header/HeaderTitle';\nexport { default as useHeaderHeight } from './Header/useHeaderHeight';\nexport { default as MissingIcon } from './MissingIcon';\nexport { default as PlatformPressable } from './PlatformPressable';\nexport { default as ResourceSavingView } from './ResourceSavingView';\nexport { default as SafeAreaProviderCompat } from './SafeAreaProviderCompat';\nexport { default as Screen } from './Screen';\n\nexport const Assets = [\n  // eslint-disable-next-line import/no-commonjs\n  require('./assets/back-icon.png'),\n  // eslint-disable-next-line import/no-commonjs\n  require('./assets/back-icon-mask.png'),\n];\n\nexport * from './types';\n","/**\n * Navigators\n */\nexport { default as createNativeStackNavigator } from './navigators/createNativeStackNavigator';\n\n/**\n * Views\n */\nexport { default as NativeStackView } from './views/NativeStackView';\n\n/**\n * Types\n */\nexport type {\n  NativeStackHeaderProps,\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigationProp,\n  NativeStackScreenProps,\n} from './types';\n","import {\n  createNavigatorFactory,\n  EventArg,\n  ParamListBase,\n  StackActionHelpers,\n  StackActions,\n  StackNavigationState,\n  StackRouter,\n  StackRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type {\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigatorProps,\n} from '../types';\nimport NativeStackView from '../views/NativeStackView';\n\nfunction NativeStackNavigator({\n  id,\n  initialRouteName,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: NativeStackNavigatorProps) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      StackNavigationState<ParamListBase>,\n      StackRouterOptions,\n      StackActionHelpers<ParamListBase>,\n      NativeStackNavigationOptions,\n      NativeStackNavigationEventMap\n    >(StackRouter, {\n      id,\n      initialRouteName,\n      children,\n      screenListeners,\n      screenOptions,\n    });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation?.addListener?.('tabPress', (e: any) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <NativeStackView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState<ParamListBase>,\n  NativeStackNavigationOptions,\n  NativeStackNavigationEventMap,\n  typeof NativeStackNavigator\n>(NativeStackNavigator);\n","import type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nexport default function useInvalidPreventRemoveError(\n  state: StackNavigationState<ParamListBase>\n) {\n  const [nextDismissedKey, setNextDismissedKey] = React.useState<string | null>(\n    null\n  );\n\n  const dismissedRouteName = nextDismissedKey\n    ? state.routes.find((route) => route.key === nextDismissedKey)?.name\n    : null;\n\n  React.useEffect(() => {\n    if (dismissedRouteName) {\n      const message =\n        `The screen '${dismissedRouteName}' was removed natively but didn't get removed from JS state. ` +\n        `This can happen if the action was prevented in a 'beforeRemove' listener, which is not fully supported in native-stack.\\n\\n` +\n        `Consider using a 'usePreventRemove' hook with 'headerBackButtonMenuEnabled: false' to prevent users from natively going back multiple screens.`;\n\n      console.error(message);\n    }\n  }, [dismissedRouteName]);\n\n  return { setNextDismissedKey };\n}\n","import { usePreventRemoveContext } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type { NativeStackDescriptorMap } from '../types';\n\nexport default function useInvalidPreventRemoveError(\n  descriptors: NativeStackDescriptorMap\n) {\n  const { preventedRoutes } = usePreventRemoveContext();\n  const preventedRouteKey = Object.keys(preventedRoutes)[0];\n  const preventedDescriptor = descriptors[preventedRouteKey];\n  const isHeaderBackButtonMenuEnabledOnPreventedScreen =\n    preventedDescriptor?.options?.headerBackButtonMenuEnabled;\n  const preventedRouteName = preventedDescriptor?.route?.name;\n\n  React.useEffect(() => {\n    if (\n      preventedRouteKey != null &&\n      isHeaderBackButtonMenuEnabledOnPreventedScreen\n    ) {\n      const message =\n        `The screen ${preventedRouteName} uses 'usePreventRemove' hook alongside 'headerBackButtonMenuEnabled: true', which is not supported. \\n\\n` +\n        `Consider removing 'headerBackButtonMenuEnabled: true' from ${preventedRouteName} screen to get rid of this error.`;\n      console.error(message);\n    }\n  }, [\n    preventedRouteKey,\n    isHeaderBackButtonMenuEnabledOnPreventedScreen,\n    preventedRouteName,\n  ]);\n}\n","import * as React from 'react';\nimport { Platform, View, ViewProps } from 'react-native';\n// @ts-ignore Getting private component\nimport AppContainer from 'react-native/Libraries/ReactNative/AppContainer';\nimport type { StackPresentationTypes } from 'react-native-screens';\n\ntype ContainerProps = ViewProps & {\n  stackPresentation: StackPresentationTypes;\n  children: React.ReactNode;\n};\n\n/**\n * This view must *not* be flattened.\n * See https://github.com/software-mansion/react-native-screens/pull/1825\n * for detailed explanation.\n */\nlet DebugContainer = (props: ContainerProps) => {\n  return <View {...props} collapsable={false} />;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  DebugContainer = (props: ContainerProps) => {\n    const { stackPresentation, ...rest } = props;\n\n    if (Platform.OS === 'ios' && stackPresentation !== 'push') {\n      // This is necessary for LogBox\n      return (\n        <AppContainer>\n          <View {...rest} collapsable={false} />\n        </AppContainer>\n      );\n    }\n\n    return <View {...rest} collapsable={false} />;\n  };\n}\n\nexport default DebugContainer;\n","// @ts-ignore: No declaration available\nimport ReactNativeStyleAttributes from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\n\nexport function processFonts(\n  fontFamilies: (string | undefined)[]\n): (string | undefined)[] {\n  // @ts-ignore: React Native types are incorrect here and don't consider fontFamily a style value\n  const fontFamilyProcessor = ReactNativeStyleAttributes.fontFamily?.process;\n  if (typeof fontFamilyProcessor === 'function') {\n    return fontFamilies.map(fontFamilyProcessor);\n  }\n  return fontFamilies;\n}\n","import { getHeaderTitle, HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n} from 'react-native';\nimport {\n  isNewBackTitleImplementation,\n  isSearchBarAvailableForCurrentPlatform,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  headerTopInsetEnabled: boolean;\n  headerHeight: number;\n  route: Route<string>;\n  canGoBack: boolean;\n};\n\nexport default function HeaderConfig({\n  headerBackImageSource,\n  headerBackButtonMenuEnabled,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerBackground,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  headerSearchBarOptions,\n  headerTopInsetEnabled,\n  route,\n  title,\n  canGoBack,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor ?? (Platform.OS === 'ios' ? colors.primary : colors.text);\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = getHeaderTitle({ title, headerTitle }, route.name);\n  const titleColor =\n    headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text;\n  const titleFontSize = headerTitleStyleFlattened.fontSize;\n  const titleFontWeight = headerTitleStyleFlattened.fontWeight;\n\n  const headerTitleStyleSupported: TextStyle = { color: titleColor };\n\n  if (headerTitleStyleFlattened.fontFamily != null) {\n    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;\n  }\n\n  if (titleFontSize != null) {\n    headerTitleStyleSupported.fontSize = titleFontSize;\n  }\n\n  if (titleFontWeight != null) {\n    headerTitleStyleSupported.fontWeight = titleFontWeight;\n  }\n\n  const headerLeftElement = headerLeft?.({\n    tintColor,\n    canGoBack,\n    label: headerBackTitle,\n  });\n  const headerRightElement = headerRight?.({\n    tintColor,\n    canGoBack,\n  });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({\n          tintColor,\n          children: titleText,\n        })\n      : null;\n\n  const supportsHeaderSearchBar =\n    typeof isSearchBarAvailableForCurrentPlatform === 'boolean'\n      ? isSearchBarAvailableForCurrentPlatform\n      : // Fallback for older versions of react-native-screens\n        Platform.OS === 'ios' && SearchBar != null;\n\n  const hasHeaderSearchBar =\n    supportsHeaderSearchBar && headerSearchBarOptions != null;\n\n  if (headerSearchBarOptions != null && !supportsHeaderSearchBar) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  const translucent =\n    headerBackground != null ||\n    headerTransparent ||\n    // When using a SearchBar or large title, the header needs to be translucent for it to work on iOS\n    ((hasHeaderSearchBar || headerLargeTitle) &&\n      Platform.OS === 'ios' &&\n      headerTransparent !== false);\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyleFlattened.backgroundColor ??\n        (headerBackground != null || headerTransparent\n          ? 'transparent'\n          : colors.card)\n      }\n      backTitle={\n        isNewBackTitleImplementation || headerBackTitleVisible\n          ? headerBackTitle\n          : ' '\n      }\n      backTitleVisible={headerBackTitleVisible}\n      backTitleFontFamily={backTitleFontFamily}\n      backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n      blurEffect={headerBlurEffect}\n      color={tintColor}\n      direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n      disableBackButtonMenu={headerBackButtonMenuEnabled === false}\n      hidden={headerShown === false}\n      hideBackButton={headerBackVisible === false}\n      hideShadow={\n        headerShadowVisible === false ||\n        headerBackground != null ||\n        (headerTransparent && headerShadowVisible !== true)\n      }\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n      largeTitleColor={headerLargeTitleStyleFlattened.color}\n      largeTitleFontFamily={largeTitleFontFamily}\n      largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n      largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n      largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n      title={titleText}\n      titleColor={titleColor}\n      titleFontFamily={titleFontFamily}\n      titleFontSize={titleFontSize}\n      titleFontWeight={titleFontWeight}\n      topInsetEnabled={headerTopInsetEnabled}\n      translucent={\n        // This defaults to `true`, so we can't pass `undefined`\n        translucent === true\n      }\n    >\n      {Platform.OS === 'ios' ? (\n        <>\n          {headerLeftElement != null ? (\n            <ScreenStackHeaderLeftView>\n              {headerLeftElement}\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleElement != null ? (\n            <ScreenStackHeaderCenterView>\n              {headerTitleElement}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      ) : (\n        <>\n          {headerLeftElement != null || typeof headerTitle === 'function' ? (\n            <ScreenStackHeaderLeftView>\n              <View style={styles.row}>\n                {headerLeftElement}\n                {headerTitleAlign !== 'center' ? (\n                  typeof headerTitle === 'function' ? (\n                    headerTitleElement\n                  ) : (\n                    <HeaderTitle\n                      tintColor={tintColor}\n                      style={headerTitleStyleSupported}\n                    >\n                      {titleText}\n                    </HeaderTitle>\n                  )\n                ) : null}\n              </View>\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleAlign === 'center' ? (\n            <ScreenStackHeaderCenterView>\n              {typeof headerTitle === 'function' ? (\n                headerTitleElement\n              ) : (\n                <HeaderTitle\n                  tintColor={tintColor}\n                  style={headerTitleStyleSupported}\n                >\n                  {titleText}\n                </HeaderTitle>\n              )}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      )}\n      {headerBackImageSource !== undefined ? (\n        <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n      ) : null}\n      {headerRightElement != null ? (\n        <ScreenStackHeaderRightView>\n          {headerRightElement}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {hasHeaderSearchBar ? (\n        <ScreenStackHeaderSearchBarView>\n          <SearchBar {...headerSearchBarOptions} />\n        </ScreenStackHeaderSearchBarView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","import {\n  getDefaultHeaderHeight,\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n  usePreventRemoveContext,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport type { ScreenProps } from 'react-native-screens';\nimport {\n  Screen,\n  ScreenStack,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport warnOnce from 'warn-once';\n\nimport type {\n  NativeStackDescriptor,\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport useDismissedRouteError from '../utils/useDismissedRouteError';\nimport useInvalidPreventRemoveError from '../utils/useInvalidPreventRemoveError';\nimport DebugContainer from './DebugContainer';\nimport HeaderConfig from './HeaderConfig';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  presentation,\n  headerHeight,\n  headerTopInsetEnabled,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  presentation: Exclude<StackPresentationTypes, 'push'> | 'card';\n  headerHeight: number;\n  headerTopInsetEnabled: boolean;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { header, headerShown = true, contentStyle } = options;\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : presentation !== 'card' && headerShown === true && header === undefined;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        presentation !== 'card' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, presentation, route.name]);\n\n  const content = (\n    <DebugContainer\n      style={[\n        styles.container,\n        presentation !== 'transparentModal' &&\n          presentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n    >\n      {children}\n    </DebugContainer>\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen\n          enabled\n          isNativeStack\n          hasLargeHeader={options.headerLargeTitle ?? false}\n          style={StyleSheet.absoluteFill}\n        >\n          {content}\n          <HeaderConfig\n            {...options}\n            route={route}\n            headerHeight={headerHeight}\n            headerTopInsetEnabled={headerTopInsetEnabled}\n            canGoBack\n          />\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype SceneViewProps = {\n  index: number;\n  focused: boolean;\n  descriptor: NativeStackDescriptor;\n  previousDescriptor?: NativeStackDescriptor;\n  nextDescriptor?: NativeStackDescriptor;\n  onWillDisappear: () => void;\n  onWillAppear: () => void;\n  onAppear: () => void;\n  onDisappear: () => void;\n  onDismissed: ScreenProps['onDismissed'];\n  onHeaderBackButtonClicked: ScreenProps['onHeaderBackButtonClicked'];\n  onNativeDismissCancelled: ScreenProps['onDismissed'];\n  onGestureCancel: ScreenProps['onGestureCancel'];\n};\n\nconst SceneView = ({\n  index,\n  focused,\n  descriptor,\n  previousDescriptor,\n  nextDescriptor,\n  onWillDisappear,\n  onWillAppear,\n  onAppear,\n  onDisappear,\n  onDismissed,\n  onHeaderBackButtonClicked,\n  onNativeDismissCancelled,\n  onGestureCancel,\n}: SceneViewProps) => {\n  const { route, navigation, options, render } = descriptor;\n  const {\n    animationDuration,\n    animationTypeForReplace = 'push',\n    fullScreenGestureShadowEnabled = false,\n    gestureEnabled,\n    gestureResponseDistance,\n    header,\n    headerBackButtonMenuEnabled,\n    headerShown,\n    headerBackground,\n    headerTransparent,\n    autoHideHomeIndicator,\n    keyboardHandlingEnabled,\n    navigationBarColor,\n    navigationBarHidden,\n    orientation,\n    sheetAllowedDetents = 'large',\n    sheetLargestUndimmedDetent = 'all',\n    sheetGrabberVisible = false,\n    sheetCornerRadius = -1.0,\n    sheetExpandsWhenScrolledToEdge = true,\n    statusBarAnimation,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    statusBarColor,\n    freezeOnBlur,\n  } = options;\n\n  let {\n    animation,\n    customAnimationOnGesture,\n    fullScreenGestureEnabled,\n    presentation = 'card',\n    gestureDirection = presentation === 'card' ? 'horizontal' : 'vertical',\n  } = options;\n\n  if (gestureDirection === 'vertical' && Platform.OS === 'ios') {\n    // for `vertical` direction to work, we need to set `fullScreenGestureEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnGesture` needs to be set to `true` so the `animation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenGestureEnabled === undefined) {\n      fullScreenGestureEnabled = true;\n    }\n    if (customAnimationOnGesture === undefined) {\n      customAnimationOnGesture = true;\n    }\n    if (animation === undefined) {\n      animation = 'slide_from_bottom';\n    }\n  }\n\n  // workaround for rn-screens where gestureDirection has to be set on both\n  // current and previous screen - software-mansion/react-native-screens/pull/1509\n  const nextGestureDirection = nextDescriptor?.options.gestureDirection;\n  const gestureDirectionOverride =\n    nextGestureDirection != null ? nextGestureDirection : gestureDirection;\n\n  if (index === 0) {\n    // first screen should always be treated as `card`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `card`\n    presentation = 'card';\n  }\n\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  // `modal` and `formSheet` presentations do not take whole screen, so should not take the inset.\n  const isModal = presentation === 'modal' || presentation === 'formSheet';\n\n  // Modals are fullscreen in landscape only on iPhone\n  const isIPhone = Platform.OS === 'ios' && !(Platform.isPad || Platform.isTV);\n  const isLandscape = frame.width > frame.height;\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  const topInset =\n    isParentHeaderShown ||\n    (Platform.OS === 'ios' && isModal) ||\n    (isIPhone && isLandscape)\n      ? 0\n      : insets.top;\n\n  // On models with Dynamic Island the status bar height is smaller than the safe area top inset.\n  const hasDynamicIsland = Platform.OS === 'ios' && topInset > 50;\n  const statusBarHeight = hasDynamicIsland ? topInset - 5 : topInset;\n\n  const { preventedRoutes } = usePreventRemoveContext();\n\n  const defaultHeaderHeight = getDefaultHeaderHeight(\n    frame,\n    isModal,\n    statusBarHeight\n  );\n\n  const [customHeaderHeight, setCustomHeaderHeight] =\n    React.useState(defaultHeaderHeight);\n\n  // During the very first render topInset is > 0 when running\n  // in non edge-to-edge mode on Android, while on every consecutive render\n  // topInset === 0, causing header content to jump, as we add padding on the first frame,\n  // just to remove it in next one. To prevent this, when statusBarTranslucent is set,\n  // we apply additional padding in header only if its true.\n  // For more details see: https://github.com/react-navigation/react-navigation/pull/12014\n  const headerTopInsetEnabled =\n    typeof statusBarTranslucent === 'boolean'\n      ? statusBarTranslucent\n      : topInset !== 0;\n\n  const headerHeight = header ? customHeaderHeight : defaultHeaderHeight;\n  const headerBack = previousDescriptor\n    ? {\n        title: getHeaderTitle(\n          previousDescriptor.options,\n          previousDescriptor.route.name\n        ),\n      }\n    : parentHeaderBack;\n\n  const isRemovePrevented = preventedRoutes[route.key]?.preventRemove;\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      isNativeStack\n      style={StyleSheet.absoluteFill}\n      hasLargeHeader={options.headerLargeTitle ?? false}\n      customAnimationOnSwipe={customAnimationOnGesture}\n      fullScreenSwipeEnabled={fullScreenGestureEnabled}\n      // @ts-expect-error prop supported from react-native-screens 3.33.0 onwards\n      fullScreenSwipeShadowEnabled={fullScreenGestureShadowEnabled}\n      gestureEnabled={\n        isAndroid\n          ? // This prop enables handling of system back gestures on Android\n            // Since we handle them in JS side, we disable this\n            false\n          : gestureEnabled\n      }\n      homeIndicatorHidden={autoHideHomeIndicator}\n      hideKeyboardOnSwipe={keyboardHandlingEnabled}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={animationTypeForReplace}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n      stackAnimation={animation}\n      screenOrientation={orientation}\n      sheetAllowedDetents={sheetAllowedDetents}\n      sheetLargestUndimmedDetent={sheetLargestUndimmedDetent}\n      sheetGrabberVisible={sheetGrabberVisible}\n      sheetCornerRadius={sheetCornerRadius}\n      sheetExpandsWhenScrolledToEdge={sheetExpandsWhenScrolledToEdge}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      statusBarColor={statusBarColor}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={gestureDirectionOverride}\n      transitionDuration={animationDuration}\n      onWillDisappear={onWillDisappear}\n      onWillAppear={onWillAppear}\n      onAppear={onAppear}\n      onDisappear={onDisappear}\n      onDismissed={onDismissed}\n      onGestureCancel={onGestureCancel}\n      gestureResponseDistance={gestureResponseDistance}\n      nativeBackButtonDismissalEnabled={false} // on Android\n      onHeaderBackButtonClicked={onHeaderBackButtonClicked}\n      // @ts-ignore props not exported from rn-screens\n      preventNativeDismiss={isRemovePrevented} // on iOS\n      onNativeDismissCancelled={onNativeDismissCancelled}\n      // this prop is available since rn-screens 3.16\n      freezeOnBlur={freezeOnBlur}\n    >\n      <NavigationContext.Provider value={navigation}>\n        <NavigationRouteContext.Provider value={route}>\n          <HeaderShownContext.Provider\n            value={isParentHeaderShown || headerShown !== false}\n          >\n            <HeaderHeightContext.Provider\n              value={\n                headerShown !== false ? headerHeight : parentHeaderHeight ?? 0\n              }\n            >\n              {headerBackground != null ? (\n                /**\n                 * To show a custom header background, we render it at the top of the screen below the header\n                 * The header also needs to be positioned absolutely (with `translucent` style)\n                 */\n                <View\n                  style={[\n                    styles.background,\n                    headerTransparent ? styles.translucent : null,\n                    { height: headerHeight },\n                  ]}\n                >\n                  {headerBackground()}\n                </View>\n              ) : null}\n              <View\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={styles.scene}\n              >\n                <MaybeNestedStack\n                  options={options}\n                  route={route}\n                  presentation={presentation}\n                  headerHeight={headerHeight}\n                  headerTopInsetEnabled={headerTopInsetEnabled}\n                >\n                  <HeaderBackContext.Provider value={headerBack}>\n                    {render()}\n                  </HeaderBackContext.Provider>\n                </MaybeNestedStack>\n                {header !== undefined && headerShown !== false ? (\n                  <View\n                    onLayout={(e) => {\n                      setCustomHeaderHeight(e.nativeEvent.layout.height);\n                    }}\n                    style={headerTransparent ? styles.absolute : null}\n                  >\n                    {header({\n                      back: headerBack,\n                      options,\n                      route,\n                      navigation,\n                    })}\n                  </View>\n                ) : null}\n              </View>\n              {/**\n               * `HeaderConfig` needs to be the direct child of `Screen` without any intermediate `View`\n               * We don't render it conditionally to make it possible to dynamically render a custom `header`\n               * Otherwise dynamically rendering a custom `header` leaves the native header visible\n               *\n               * https://github.com/software-mansion/react-native-screens/blob/main/guides/GUIDE_FOR_LIBRARY_AUTHORS.md#screenstackheaderconfig\n               *\n               * HeaderConfig must not be first child of a Screen.\n               * See https://github.com/software-mansion/react-native-screens/pull/1825\n               * for detailed explanation\n               */}\n              <HeaderConfig\n                {...options}\n                route={route}\n                headerBackButtonMenuEnabled={\n                  isRemovePrevented !== undefined\n                    ? !isRemovePrevented\n                    : headerBackButtonMenuEnabled\n                }\n                headerShown={header !== undefined ? false : headerShown}\n                headerHeight={headerHeight}\n                headerBackTitle={\n                  options.headerBackTitle !== undefined\n                    ? options.headerBackTitle\n                    : undefined\n                }\n                headerTopInsetEnabled={headerTopInsetEnabled}\n                canGoBack={headerBack !== undefined}\n              />\n            </HeaderHeightContext.Provider>\n          </HeaderShownContext.Provider>\n        </NavigationRouteContext.Provider>\n      </NavigationContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({ state, navigation, descriptors }: Props) {\n  const { setNextDismissedKey } = useDismissedRouteError(state);\n\n  useInvalidPreventRemoveError(descriptors);\n\n  return (\n    <ScreenStack style={styles.container}>\n      {state.routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const isFocused = state.index === index;\n        const previousKey = state.routes[index - 1]?.key;\n        const nextKey = state.routes[index + 1]?.key;\n        const previousDescriptor = previousKey\n          ? descriptors[previousKey]\n          : undefined;\n        const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n\n        return (\n          <SceneView\n            key={route.key}\n            index={index}\n            focused={isFocused}\n            descriptor={descriptor}\n            previousDescriptor={previousDescriptor}\n            nextDescriptor={nextDescriptor}\n            onWillDisappear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onWillAppear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onAppear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onDisappear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onDismissed={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n\n              setNextDismissedKey(route.key);\n            }}\n            onHeaderBackButtonClicked={() => {\n              navigation.dispatch({\n                ...StackActions.pop(),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n            onNativeDismissCancelled={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n            onGestureCancel={() => {\n              navigation.emit({\n                type: 'gestureCancel',\n                target: route.key,\n              });\n            }}\n          />\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scene: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n  translucent: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1,\n    elevation: 1,\n  },\n  background: {\n    overflow: 'hidden',\n  },\n});\n","var AssetSourceResolver = require('react-native/Libraries/Image/AssetSourceResolver');\nif ('default' in AssetSourceResolver) AssetSourceResolver = AssetSourceResolver.default;\nvar resolver = new AssetSourceResolver(undefined, undefined, {\"name\":\"back-icon-mask-2c95e8c2\",\"type\":\"png\",\"httpServerLocation\":\"https://raw.githubusercontent.com/nguyenhoangtu0394/host/refs/heads/main/pos/android/remote-assets/assets\",\"scales\":[1],\"height\":85,\"width\":50});\n\nmodule.exports = resolver.scaledAssetPath();","var AssetSourceResolver = require('react-native/Libraries/Image/AssetSourceResolver');\nif ('default' in AssetSourceResolver) AssetSourceResolver = AssetSourceResolver.default;\nvar resolver = new AssetSourceResolver(undefined, undefined, {\"name\":\"back-icon-84cf5eb3\",\"type\":\"png\",\"httpServerLocation\":\"https://raw.githubusercontent.com/nguyenhoangtu0394/host/refs/heads/main/pos/android/remote-assets/assets\",\"scales\":[1,1.5,2,3,4],\"height\":24,\"width\":24});\n\nmodule.exports = resolver.scaledAssetPath();"],"names":["DEV","process","warnings","Set","warnOnce","condition","rest","_console","key","module","Background","_param","style","colors","_native","_reactnative","Header","warnIfHeaderStylesDefined","styles","Object","styleProp","value","console","undefined","props","insets","_reactnativesafeareacontext","frame","isParentHeaderShown","_react","_HeaderShownContext","hasDynamicIsland","statusBarHeight","layout","modal","title","customTitle","headerTitleAlign","headerLeft","headerLeftLabelVisible","headerTransparent","headerTintColor","headerBackground","headerRight","titleAllowFontScaling","titleStyle","leftContainerStyle","rightContainerStyle","titleContainerStyle","backgroundContainerStyle","customHeaderStyle","headerShadowVisible","headerPressColor","headerPressOpacity","headerStatusBarHeight","defaultHeight","_getDefaultHeaderHeight","_StyleSheet_flatten","height","minHeight","maxHeight","backgroundColor","borderBottomColor","borderBottomEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderBottomWidth","borderColor","borderEndColor","borderEndWidth","borderLeftColor","borderLeftWidth","borderRadius","borderRightColor","borderRightWidth","borderStartColor","borderStartWidth","borderStyle","borderTopColor","borderTopEndRadius","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","borderTopWidth","borderWidth","boxShadow","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","opacity","transform","unsafeStyles","safeStyles","backgroundStyle","leftButton","rightButton","headerTitle","_HeaderTitle","_HeaderBackground","Math","HeaderBackButton","ref","disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","onLabelLayout","onPress","pressColor","pressOpacity","screenLayout","customTintColor","titleLayout","truncatedLabel","accessibilityLabel","testID","_React_useState","initialLabelWidth","setInitialLabelWidth","tintColor","handleLabelLayout","e","shouldTruncateLabel","renderBackImage","Boolean","require","renderLabel","leftLabelText","labelElement","_MaskedView","handlePress","requestAnimationFrame","_PlatformPressable","androidRipple","_default","HeaderBackContext","_getNamedContext","HeaderBackground","HeaderHeightContext","HeaderShownContext","HeaderTitle","getDefaultHeaderHeight","modalPresentation","headerHeight","isLandscape","getHeaderTitle","options","fallback","useHeaderHeight","_HeaderHeightContext","Error","_MaskedViewNative","MaskedView","RNCMaskedView","isMaskedViewAvailable","children","MissingIcon","color","size","PlatformPressable","AnimatedPressable","ANDROID_VERSION_LOLLIPOP","ANDROID_SUPPORTS_RIPPLE","onPressIn","onPressOut","android_ripple","dark","animateTo","toValue","duration","handlePressIn","handlePressOut","ResourceSavingScene","FAR_FAR_AWAY","visible","SafeAreaProviderCompat","_Dimensions_get","width","initialMetrics","SafeAreaFrameProvider","element","setFrame","rect","timeout","observer","ResizeObserver","entries","entry","_entry_contentRect","x","y","clearTimeout","setTimeout","Screen","dimensions","parentHeaderHeight","focused","header","headerShown","navigation","route","setHeaderHeight","_Background","getNamedContext","contexts","global","Map","name","initialValue","context","Assets","_Header","_HeaderBackButton","_HeaderBackContext","_MissingIcon","_ResourceSavingView","_SafeAreaProviderCompat","_Screen","_getHeaderTitle","_useHeaderHeight","_NativeStackView","_createNativeStackNavigator","NativeStackNavigator","id","initialRouteName","screenListeners","screenOptions","_useNavigationBuilder","state","descriptors","NavigationContent","isFocused","useInvalidPreventRemoveError","_state_routes_find","nextDismissedKey","setNextDismissedKey","dismissedRouteName","message","_preventedDescriptor_options","_preventedDescriptor_route","preventedRoutes","preventedRouteKey","preventedDescriptor","isHeaderBackButtonMenuEnabledOnPreventedScreen","preventedRouteName","DebugContainer","stackPresentation","_AppContainer","processFonts","fontFamilies","_ReactNativeStyleAttributes_fontFamily","fontFamilyProcessor","HeaderConfig","headerBackImageSource","headerBackButtonMenuEnabled","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerBackVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerStyle","headerBlurEffect","headerTitleStyle","headerSearchBarOptions","headerTopInsetEnabled","canGoBack","headerBackTitleStyleFlattened","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","_processFonts","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","titleText","_elements","titleColor","titleFontSize","titleFontWeight","headerTitleStyleSupported","headerLeftElement","headerRightElement","headerTitleElement","supportsHeaderSearchBar","_reactnativescreens","hasHeaderSearchBar","backButtonInCustomView","translucent","NativeStackView","isAndroid","MaybeNestedStack","presentation","contentStyle","isHeaderInModal","headerShownPreviousRef","_warnonce","content","_DebugContainer","_HeaderConfig","SceneView","index","descriptor","previousDescriptor","nextDescriptor","onWillDisappear","onWillAppear","onAppear","onDisappear","onDismissed","onHeaderBackButtonClicked","onNativeDismissCancelled","onGestureCancel","_preventedRoutes_route_key","render","animationDuration","animationTypeForReplace","fullScreenGestureShadowEnabled","gestureEnabled","gestureResponseDistance","autoHideHomeIndicator","keyboardHandlingEnabled","navigationBarColor","navigationBarHidden","orientation","sheetAllowedDetents","sheetLargestUndimmedDetent","sheetGrabberVisible","sheetCornerRadius","sheetExpandsWhenScrolledToEdge","statusBarAnimation","statusBarHidden","statusBarStyle","statusBarTranslucent","statusBarColor","freezeOnBlur","animation","customAnimationOnGesture","fullScreenGestureEnabled","gestureDirection","nextGestureDirection","gestureDirectionOverride","isModal","isIPhone","parentHeaderBack","topInset","defaultHeaderHeight","customHeaderHeight","setCustomHeaderHeight","headerBack","isRemovePrevented","NativeStackViewInner","_useDismissedRouteError","_useInvalidPreventRemoveError","_state_routes_","_state_routes_1","previousKey","nextKey","event"],"mappings":"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uBAcEzB,oBAdFyB,sBACAC,uBAaE1B,oBAbF0B,sBACAC,iBAYE3B,oBAZF2B,gBACAC,cAWE5B,oBAXF4B,aACA,2CAA2C;IAC3CC,YASE7B,oBATF6B,WACAC,YAQE9B,oBARF8B,WACAC,cAOE/B,oBAPF+B,aACAC,eAMEhC,oBANFgC,cACAC,gBAKEjC,oBALFiC,eACAC,eAIElC,oBAJFkC,cACAC,UAGEnC,oBAHFmC,SACAC,YAEEpC,oBAFFoC,WACGC,4CACDrC;QAtCFC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAIF,IAAI5F,KAAqC,EAAE,EAE1C;IAED,IAAM8F,aAAwB;QAC5BlC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACA,8CAA8C;QAC9CC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;IACF;IAEA,yDAAyD;IACzD,gCAAgC;IAChC,+BAA+B;IAC/B,IAAK,IAAMzE,aAAa2E,WAAY;QAClC,mGAAmG;QACnG,IAAIA,UAAU,CAAC3E,UAAU,KAAKG,WAAW;YACvC,mBAAmB;YACnB,gEAAgE;YAChE,OAAOwE,UAAU,CAAC3E,UAAU;QAC9B;IACF;IAEA,IAAM4E,kBAAkB;QACtBD;QACA5C,wBAAwB,SAAS;YAC/B,WAAW;YACX,eAAe;YACf,mBAAmB;QACrB;KACD;IAED,IAAM8C,aAAa3D,aACfA,WAAW;QACT,WAAWG;QACX,YAAYW;QACZ,cAAcC;QACd,cAAcd;IAChB,KACA;IAEJ,IAAM2D,cAAcvD,cAChBA,YAAY;QACV,WAAWF;QACX,YAAYW;QACZ,cAAcC;IAChB,KACA;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"}