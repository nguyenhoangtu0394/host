{"version":3,"file":"node_modules_invariant_browser_js-node_modules_react-native_src_private_featureflags_ReactNat-438b0b.chunk.bundle","sources":["webpack://pos/./node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs","webpack://pos/./node_modules/invariant/browser.js","webpack://pos/./node_modules/react-native/src/private/featureflags/specs/NativeReactNativeFeatureFlags.js","webpack://pos/./node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlags.js","webpack://pos/./node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlagsBase.js"],"sourcesContent":["\"use strict\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = { __proto__: null };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\nexports._ = _interop_require_wildcard;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                  \n                                                             \n                                                     \n                                                             \n                                                \n                                                \n                                                 \n                                    \n                                        \n                                                 \n                                                 \n                                                          \n                                                   \n                                               \n                                     \n                                          \n                                                         \n                                                                    \n                                                          \n                                              \n                                                 \n                                       \n                                     \n                                       \n                                              \n                                              \n                                           \n                                                                      \n                                                                    \n                                                                              \n                                         \n                                                   \n                                          \n                                                         \n                                                                                        \n                                                              \n                                                             \n                                                     \n                                                        \n                                    \n                                                        \n                                                      \n                                       \n                                             \n                                         \n                                   \n \nconst NativeReactNativeFeatureFlags        = TurboModuleRegistry.get      ('NativeReactNativeFeatureFlagsCxx');\nexport default NativeReactNativeFeatureFlags;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<5b1d3ba6712de7a927eeeb8602ee2a8f>>\n *       strict\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags --update\n */\n\nimport {\n              \n                    \n  createJavaScriptFlagGetter,\n  createNativeFlagGetter,\n  setOverrides,\n} from './ReactNativeFeatureFlagsBase';\n\n                                                       \n                                  \n                                                    \n                                             \n                                                       \n                                             \n                                                  \n                                                   \n                                        \n                                                       \n                                            \n                                                      \n                                                       \n                                                                \n                                                   \n                                            \n   \n\n                                                                                                 \n\n                                                 \n                                   \n                                  \n                                                             \n                                                     \n                                                             \n                                                \n                                                \n                                                 \n                                    \n                                        \n                                                 \n                                                 \n                                                          \n                                                   \n                                               \n                                     \n                                          \n                                                         \n                                                                    \n                                                          \n                                              \n                                                 \n                                       \n                                     \n                                       \n                                              \n                                              \n                                           \n                                                                      \n                                                                    \n                                                                              \n                                         \n                                                   \n                                          \n                                                         \n                                                                                        \n                                                              \n                                                             \n                                                     \n                                                        \n                                    \n                                                        \n                                                      \n                                       \n                                             \n                                         \n                                   \n   \n\n/**\n * JS-only flag for testing. Do NOT modify.\n */\nexport const jsOnlyTestFlag                  = createJavaScriptFlagGetter('jsOnlyTestFlag', false);\n\n/**\n * Enables an experimental flush-queue debouncing in Animated.js.\n */\nexport const animatedShouldDebounceQueueFlush                  = createJavaScriptFlagGetter('animatedShouldDebounceQueueFlush', false);\n\n/**\n * Enables an experimental mega-operation for Animated.js that replaces many calls to native with a single call into native, to reduce JSI/JNI traffic.\n */\nexport const animatedShouldUseSingleOp                  = createJavaScriptFlagGetter('animatedShouldUseSingleOp', false);\n\n/**\n * Changes `useAnimatedPropsMemo` to avoid state updates to invalidate the cached `AnimatedProps`.\n */\nexport const avoidStateUpdateInAnimatedPropsMemo                  = createJavaScriptFlagGetter('avoidStateUpdateInAnimatedPropsMemo', false);\n\n/**\n * Disables InteractionManager and replaces its scheduler with `setImmediate`.\n */\nexport const disableInteractionManager                  = createJavaScriptFlagGetter('disableInteractionManager', false);\n\n/**\n * Enables access to the host tree in Fabric using DOM-compatible APIs.\n */\nexport const enableAccessToHostTreeInFabric                  = createJavaScriptFlagGetter('enableAccessToHostTreeInFabric', false);\n\n/**\n * Enables an experimental to use the proper clearIntermediate instead of calling the wrong clearTimeout and canceling another timer.\n */\nexport const enableAnimatedClearImmediateFix                  = createJavaScriptFlagGetter('enableAnimatedClearImmediateFix', true);\n\n/**\n * Enables the DOM Document API, exposing instaces of document through `getRootNode` and `ownerDocument`, and providing access to the `documentElement` representing the root node. This flag will be short-lived, only to test the Document API specifically, and then it will be collapsed into the enableAccessToHostTreeInFabric flag.\n */\nexport const enableDOMDocumentAPI                  = createJavaScriptFlagGetter('enableDOMDocumentAPI', false);\n\n/**\n * Fixing an edge case where the current window size is not properly calculated with fast scrolling. Window size collapsed to 1 element even if windowSize more than the current amount of elements\n */\nexport const fixVirtualizeListCollapseWindowSize                  = createJavaScriptFlagGetter('fixVirtualizeListCollapseWindowSize', false);\n\n/**\n * Function used to enable / disabled Layout Animations in React Native.\n */\nexport const isLayoutAnimationEnabled                  = createJavaScriptFlagGetter('isLayoutAnimationEnabled', true);\n\n/**\n * Changes the cleanup of`AnimatedProps` to occur in a microtask instead of synchronously during effect cleanup (for unmount) or subsequent mounts (for updates).\n */\nexport const scheduleAnimatedCleanupInMicrotask                  = createJavaScriptFlagGetter('scheduleAnimatedCleanupInMicrotask', false);\n\n/**\n * Enables use of AnimatedObject for animating transform values.\n */\nexport const shouldUseAnimatedObjectForTransform                  = createJavaScriptFlagGetter('shouldUseAnimatedObjectForTransform', false);\n\n/**\n * removeClippedSubviews prop will be used as the default in FlatList on iOS to match Android\n */\nexport const shouldUseRemoveClippedSubviewsAsDefaultOnIOS                  = createJavaScriptFlagGetter('shouldUseRemoveClippedSubviewsAsDefaultOnIOS', false);\n\n/**\n * Enables use of setNativeProps in JS driven animations.\n */\nexport const shouldUseSetNativePropsInFabric                  = createJavaScriptFlagGetter('shouldUseSetNativePropsInFabric', true);\n\n/**\n * Enable a variant of TextInput that moves some state to refs to avoid unnecessary re-renders\n */\nexport const useRefsForTextInputState                  = createJavaScriptFlagGetter('useRefsForTextInputState', false);\n\n/**\n * Common flag for testing. Do NOT modify.\n */\nexport const commonTestFlag                  = createNativeFlagGetter('commonTestFlag', false);\n/**\n * Common flag for testing (without native implementation). Do NOT modify.\n */\nexport const commonTestFlagWithoutNativeImplementation                  = createNativeFlagGetter('commonTestFlagWithoutNativeImplementation', false);\n/**\n * Prevent FabricMountingManager from reordering mountitems, which may lead to invalid state on the UI thread\n */\nexport const disableMountItemReorderingAndroid                  = createNativeFlagGetter('disableMountItemReorderingAndroid', false);\n/**\n * When enabled, Andoid will accumulate updates in rawProps to reduce the number of mounting instructions for cascading rerenders.\n */\nexport const enableAccumulatedUpdatesInRawPropsAndroid                  = createNativeFlagGetter('enableAccumulatedUpdatesInRawPropsAndroid', false);\n/**\n * Feature flag to enable the new bridgeless architecture. Note: Enabling this will force enable the following flags: `useTurboModules` & `enableFabricRenderer.\n */\nexport const enableBridgelessArchitecture                  = createNativeFlagGetter('enableBridgelessArchitecture', false);\n/**\n * Enable prop iterator setter-style construction of Props in C++ (this flag is not used in Java).\n */\nexport const enableCppPropsIteratorSetter                  = createNativeFlagGetter('enableCppPropsIteratorSetter', false);\n/**\n * Feature flag to configure eager attachment of the root view/initialisation of the JS code.\n */\nexport const enableEagerRootViewAttachment                  = createNativeFlagGetter('enableEagerRootViewAttachment', false);\n/**\n * This feature flag enables logs for Fabric.\n */\nexport const enableFabricLogs                  = createNativeFlagGetter('enableFabricLogs', false);\n/**\n * Enables the use of the Fabric renderer in the whole app.\n */\nexport const enableFabricRenderer                  = createNativeFlagGetter('enableFabricRenderer', false);\n/**\n * iOS Views will clip to their padding box vs border box\n */\nexport const enableIOSViewClipToPaddingBox                  = createNativeFlagGetter('enableIOSViewClipToPaddingBox', false);\n/**\n * When enabled, Andoid will build and initiate image prefetch requests on ImageShadowNode::layout\n */\nexport const enableImagePrefetchingAndroid                  = createNativeFlagGetter('enableImagePrefetchingAndroid', false);\n/**\n * Trigger JS runtime GC on memory pressure event on iOS\n */\nexport const enableJSRuntimeGCOnMemoryPressureOnIOS                  = createNativeFlagGetter('enableJSRuntimeGCOnMemoryPressureOnIOS', false);\n/**\n * When enabled, LayoutAnimations API will animate state changes on Android.\n */\nexport const enableLayoutAnimationsOnAndroid                  = createNativeFlagGetter('enableLayoutAnimationsOnAndroid', false);\n/**\n * When enabled, LayoutAnimations API will animate state changes on iOS.\n */\nexport const enableLayoutAnimationsOnIOS                  = createNativeFlagGetter('enableLayoutAnimationsOnIOS', true);\n/**\n * Enables the reporting of long tasks through `PerformanceObserver`. Only works if the event loop is enabled.\n */\nexport const enableLongTaskAPI                  = createNativeFlagGetter('enableLongTaskAPI', false);\n/**\n * Parse CSS strings using the Fabric CSS parser instead of ViewConfig processing\n */\nexport const enableNativeCSSParsing                  = createNativeFlagGetter('enableNativeCSSParsing', false);\n/**\n * Use BackgroundDrawable and BorderDrawable instead of CSSBackgroundDrawable\n */\nexport const enableNewBackgroundAndBorderDrawables                  = createNativeFlagGetter('enableNewBackgroundAndBorderDrawables', false);\n/**\n * Moves execution of pre-mount items to outside the choregrapher in the main thread, so we can estimate idle time more precisely (Android only).\n */\nexport const enablePreciseSchedulingForPremountItemsOnAndroid                  = createNativeFlagGetter('enablePreciseSchedulingForPremountItemsOnAndroid', false);\n/**\n * When enabled, Android will receive prop updates based on the differences between the last rendered shadow node and the last committed shadow node.\n */\nexport const enablePropsUpdateReconciliationAndroid                  = createNativeFlagGetter('enablePropsUpdateReconciliationAndroid', false);\n/**\n * Report paint time inside the Event Timing API implementation (PerformanceObserver).\n */\nexport const enableReportEventPaintTime                  = createNativeFlagGetter('enableReportEventPaintTime', false);\n/**\n * Dispatches state updates synchronously in Fabric (e.g.: updates the scroll position in the shadow tree synchronously from the main thread).\n */\nexport const enableSynchronousStateUpdates                  = createNativeFlagGetter('enableSynchronousStateUpdates', false);\n/**\n * Ensures that JavaScript always has a consistent view of the state of the UI (e.g.: commits done in other threads are not immediately propagated to JS during its execution).\n */\nexport const enableUIConsistency                  = createNativeFlagGetter('enableUIConsistency', false);\n/**\n * Enables View Culling: as soon as a view goes off screen, it can be reused anywhere in the UI and pieced together with other items to create new UI elements.\n */\nexport const enableViewCulling                  = createNativeFlagGetter('enableViewCulling', false);\n/**\n * Enables View Recycling. When enabled, individual ViewManagers must still opt-in.\n */\nexport const enableViewRecycling                  = createNativeFlagGetter('enableViewRecycling', false);\n/**\n * Enables View Recycling for <Text> via ReactTextView/ReactTextViewManager.\n */\nexport const enableViewRecyclingForText                  = createNativeFlagGetter('enableViewRecyclingForText', true);\n/**\n * Enables View Recycling for <View> via ReactViewGroup/ReactViewManager.\n */\nexport const enableViewRecyclingForView                  = createNativeFlagGetter('enableViewRecyclingForView', true);\n/**\n * When enabled, rawProps in Props will not include Yoga specific props.\n */\nexport const excludeYogaFromRawProps                  = createNativeFlagGetter('excludeYogaFromRawProps', false);\n/**\n * Fixes a bug in Differentiator where parent views may be referenced before they're created\n */\nexport const fixDifferentiatorEmittingUpdatesWithWrongParentTag                  = createNativeFlagGetter('fixDifferentiatorEmittingUpdatesWithWrongParentTag', true);\n/**\n * Uses the default event priority instead of the discreet event priority by default when dispatching events from Fabric to React.\n */\nexport const fixMappingOfEventPrioritiesBetweenFabricAndReact                  = createNativeFlagGetter('fixMappingOfEventPrioritiesBetweenFabricAndReact', false);\n/**\n * Fixes a limitation on Android where the mounting coordinator would report there are no pending transactions but some of them were actually not processed due to the use of the push model.\n */\nexport const fixMountingCoordinatorReportedPendingTransactionsOnAndroid                  = createNativeFlagGetter('fixMountingCoordinatorReportedPendingTransactionsOnAndroid', false);\n/**\n * Flag determining if the React Native DevTools (Fusebox) CDP backend should be enabled in release builds. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const fuseboxEnabledRelease                  = createNativeFlagGetter('fuseboxEnabledRelease', false);\n/**\n * Enable network inspection support in the React Native DevTools CDP backend. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const fuseboxNetworkInspectionEnabled                  = createNativeFlagGetter('fuseboxNetworkInspectionEnabled', false);\n/**\n * Only enqueue Choreographer calls if there is an ongoing animation, instead of enqueueing every frame.\n */\nexport const lazyAnimationCallbacks                  = createNativeFlagGetter('lazyAnimationCallbacks', false);\n/**\n * When enabled, mutex _turboModuleManagerDelegateMutex in RCTTurboModuleManager will not be used\n */\nexport const removeTurboModuleManagerDelegateMutex                  = createNativeFlagGetter('removeTurboModuleManagerDelegateMutex', false);\n/**\n * Throw an exception instead of deadlocking when a TurboModule that requires main queue setup is initialized during a synchronous render on iOS.\n */\nexport const throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS                  = createNativeFlagGetter('throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS', false);\n/**\n * Enables storing js caller stack when creating promise in native module. This is useful in case of Promise rejection and tracing the cause.\n */\nexport const traceTurboModulePromiseRejectionsOnAndroid                  = createNativeFlagGetter('traceTurboModulePromiseRejectionsOnAndroid', false);\n/**\n * When enabled, runtime shadow node references will be updated during the commit. This allows running RSNRU from any thread without corrupting the renderer state.\n */\nexport const updateRuntimeShadowNodeReferencesOnCommit                  = createNativeFlagGetter('updateRuntimeShadowNodeReferencesOnCommit', false);\n/**\n * In Bridgeless mode, use the always available javascript error reporting pipeline.\n */\nexport const useAlwaysAvailableJSErrorHandling                  = createNativeFlagGetter('useAlwaysAvailableJSErrorHandling', false);\n/**\n * If true, focusing in ReactEditText will mainly use stock Android requestFocus() behavior. If false it will use legacy custom focus behavior.\n */\nexport const useEditTextStockAndroidFocusBehavior                  = createNativeFlagGetter('useEditTextStockAndroidFocusBehavior', true);\n/**\n * Should this application enable the Fabric Interop Layer for Android? If yes, the application will behave so that it can accept non-Fabric components and render them on Fabric. This toggle is controlling extra logic such as custom event dispatching that are needed for the Fabric Interop Layer to work correctly.\n */\nexport const useFabricInterop                  = createNativeFlagGetter('useFabricInterop', false);\n/**\n * When enabled, the native view configs are used in bridgeless mode.\n */\nexport const useNativeViewConfigsInBridgelessMode                  = createNativeFlagGetter('useNativeViewConfigsInBridgelessMode', false);\n/**\n * Uses an optimized mechanism for event batching on Android that does not need to wait for a Choreographer frame callback.\n */\nexport const useOptimizedEventBatchingOnAndroid                  = createNativeFlagGetter('useOptimizedEventBatchingOnAndroid', false);\n/**\n * Instead of using folly::dynamic as internal representation in RawProps and RawValue, use jsi::Value\n */\nexport const useRawPropsJsiValue                  = createNativeFlagGetter('useRawPropsJsiValue', false);\n/**\n * Use the state stored on the source shadow node when cloning it instead of reading in the most recent state on the shadow node family.\n */\nexport const useShadowNodeStateOnClone                  = createNativeFlagGetter('useShadowNodeStateOnClone', false);\n/**\n * In Bridgeless mode, should legacy NativeModules use the TurboModule system?\n */\nexport const useTurboModuleInterop                  = createNativeFlagGetter('useTurboModuleInterop', false);\n/**\n * When enabled, NativeModules will be executed by using the TurboModule system\n */\nexport const useTurboModules                  = createNativeFlagGetter('useTurboModules', false);\n\n/**\n * Overrides the feature flags with the provided methods.\n * NOTE: Only JS-only flags can be overridden from JavaScript using this API.\n */\nexport const override = setOverrides;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n             \n                                \n                                         \n                                   \n\nimport NativeReactNativeFeatureFlags from './specs/NativeReactNativeFeatureFlags';\n\nconst accessedFeatureFlags              = new Set();\nlet overrides                                         ;\n\n                                \n\n// This defines the types for the overrides object, whose methods also receive\n// the default value as a parameter.\n                                       \n                                                               \n   \n\nfunction createGetter                              (\n  configName        ,\n  customValueGetter            ,\n  defaultValue   ,\n)            {\n  let cachedValue    ;\n\n  return () => {\n    if (cachedValue == null) {\n      cachedValue = customValueGetter() ?? defaultValue;\n    }\n    return cachedValue;\n  };\n}\n\nexport function createJavaScriptFlagGetter \n                                          \n (\n  configName   ,\n  defaultValue                                              ,\n)                                                       {\n  return createGetter(\n    configName,\n    () => {\n      accessedFeatureFlags.add(configName);\n      return overrides?.[configName]?.(defaultValue);\n    },\n    defaultValue,\n  );\n}\n\n                                                                              \n\nexport function createNativeFlagGetter                              (\n  configName   ,\n  defaultValue                                                  ,\n  skipUnavailableNativeModuleError          = false,\n)                                                           {\n  return createGetter(\n    configName,\n    () => {\n      maybeLogUnavailableNativeModuleError(configName);\n      return NativeReactNativeFeatureFlags?.[configName]?.();\n    },\n    defaultValue,\n  );\n}\n\nexport function getOverrides()                                          {\n  return overrides;\n}\n\nexport function setOverrides(\n  newOverrides                                        ,\n)       {\n  if (overrides != null) {\n    throw new Error('Feature flags cannot be overridden more than once');\n  }\n\n  if (accessedFeatureFlags.size > 0) {\n    const accessedFeatureFlagsStr = Array.from(accessedFeatureFlags).join(', ');\n    throw new Error(\n      `Feature flags were accessed before being overridden: ${accessedFeatureFlagsStr}`,\n    );\n  }\n\n  overrides = newOverrides;\n}\n\nconst reportedConfigNames              = new Set();\n\nfunction maybeLogUnavailableNativeModuleError(configName        )       {\n  if (!NativeReactNativeFeatureFlags && !reportedConfigNames.has(configName)) {\n    reportedConfigNames.add(configName);\n    console.error(\n      `Could not access feature flag '${configName}' because native module method was not available`,\n    );\n  }\n}\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interop_require_wildcard","obj","cache","newObj","hasPropertyDescriptor","Object","key","desc","exports","invariant","condition","format","a","b","c","d","e","f","process","undefined","Error","error","args","argIndex","module","_default","NativeReactNativeFeatureFlags","_TurboModuleRegistry","animatedShouldDebounceQueueFlush","animatedShouldUseSingleOp","avoidStateUpdateInAnimatedPropsMemo","commonTestFlag","commonTestFlagWithoutNativeImplementation","disableInteractionManager","disableMountItemReorderingAndroid","enableAccessToHostTreeInFabric","enableAccumulatedUpdatesInRawPropsAndroid","enableAnimatedClearImmediateFix","enableBridgelessArchitecture","enableCppPropsIteratorSetter","enableDOMDocumentAPI","enableEagerRootViewAttachment","enableFabricLogs","enableFabricRenderer","enableIOSViewClipToPaddingBox","enableImagePrefetchingAndroid","enableJSRuntimeGCOnMemoryPressureOnIOS","enableLayoutAnimationsOnAndroid","enableLayoutAnimationsOnIOS","enableLongTaskAPI","enableNativeCSSParsing","enableNewBackgroundAndBorderDrawables","enablePreciseSchedulingForPremountItemsOnAndroid","enablePropsUpdateReconciliationAndroid","enableReportEventPaintTime","enableSynchronousStateUpdates","enableUIConsistency","enableViewCulling","enableViewRecycling","enableViewRecyclingForText","enableViewRecyclingForView","excludeYogaFromRawProps","fixDifferentiatorEmittingUpdatesWithWrongParentTag","fixMappingOfEventPrioritiesBetweenFabricAndReact","fixMountingCoordinatorReportedPendingTransactionsOnAndroid","fixVirtualizeListCollapseWindowSize","fuseboxEnabledRelease","fuseboxNetworkInspectionEnabled","isLayoutAnimationEnabled","jsOnlyTestFlag","lazyAnimationCallbacks","override","removeTurboModuleManagerDelegateMutex","scheduleAnimatedCleanupInMicrotask","shouldUseAnimatedObjectForTransform","shouldUseRemoveClippedSubviewsAsDefaultOnIOS","shouldUseSetNativePropsInFabric","throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS","traceTurboModulePromiseRejectionsOnAndroid","updateRuntimeShadowNodeReferencesOnCommit","useAlwaysAvailableJSErrorHandling","useEditTextStockAndroidFocusBehavior","useFabricInterop","useNativeViewConfigsInBridgelessMode","useOptimizedEventBatchingOnAndroid","useRawPropsJsiValue","useRefsForTextInputState","useShadowNodeStateOnClone","useTurboModuleInterop","useTurboModules","_ReactNativeFeatureFlagsBase","createJavaScriptFlagGetter","createNativeFlagGetter","getOverrides","setOverrides","accessedFeatureFlags","Set","overrides","createGetter","configName","customValueGetter","defaultValue","cachedValue","ref","_NativeReactNativeFeatureFlags","maybeLogUnavailableNativeModuleError","newOverrides","accessedFeatureFlagsStr","Array","reportedConfigNames","console"],"mappings":"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"}