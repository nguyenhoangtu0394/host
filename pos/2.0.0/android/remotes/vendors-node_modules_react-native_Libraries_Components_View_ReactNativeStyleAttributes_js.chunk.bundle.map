{"version":3,"file":"vendors-node_modules_react-native_Libraries_Components_View_ReactNativeStyleAttributes_js.chunk.bundle","sources":["webpack://pos/./node_modules/react-native/src/private/featureflags/specs/NativeReactNativeFeatureFlags.js","webpack://pos/./node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js","webpack://pos/./node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypes.android.js","webpack://pos/./node_modules/react-native/Libraries/StyleSheet/normalizeColor.js","webpack://pos/./node_modules/react-native/Libraries/StyleSheet/processAspectRatio.js","webpack://pos/./node_modules/react-native/Libraries/StyleSheet/processBackgroundImage.js","webpack://pos/./node_modules/react-native/Libraries/StyleSheet/processBoxShadow.js","webpack://pos/./node_modules/react-native/Libraries/StyleSheet/processColor.js","webpack://pos/./node_modules/react-native/Libraries/StyleSheet/processFilter.js","webpack://pos/./node_modules/react-native/Libraries/StyleSheet/processFontVariant.js","webpack://pos/./node_modules/react-native/Libraries/StyleSheet/processTransform.js","webpack://pos/./node_modules/react-native/Libraries/StyleSheet/processTransformOrigin.js","webpack://pos/./node_modules/react-native/Libraries/Utilities/differ/sizesDiffer.js","webpack://pos/./node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlags.js","webpack://pos/./node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlagsBase.js"],"sourcesContent":["                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                  \n                                                             \n                                                     \n                                                             \n                                                \n                                                \n                                                 \n                                    \n                                        \n                                                 \n                                                 \n                                                          \n                                                   \n                                               \n                                     \n                                          \n                                                         \n                                                                    \n                                                          \n                                              \n                                                 \n                                       \n                                     \n                                       \n                                              \n                                              \n                                           \n                                                                      \n                                                                    \n                                                                              \n                                         \n                                                   \n                                          \n                                                         \n                                                                                        \n                                                              \n                                                             \n                                                     \n                                                        \n                                    \n                                                        \n                                                      \n                                       \n                                             \n                                         \n                                   \n \nconst NativeReactNativeFeatureFlags        = TurboModuleRegistry.get      ('NativeReactNativeFeatureFlagsCxx');\nexport default NativeReactNativeFeatureFlags;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format strict-local\n *       strict-local\n */\n\n                                                                            \n\nimport * as ReactNativeFeatureFlags from '../../../src/private/featureflags/ReactNativeFeatureFlags';\nimport NativeReactNativeFeatureFlags from '../../../src/private/featureflags/specs/NativeReactNativeFeatureFlags';\nimport processAspectRatio from '../../StyleSheet/processAspectRatio';\nimport processBackgroundImage from '../../StyleSheet/processBackgroundImage';\nimport processBoxShadow from '../../StyleSheet/processBoxShadow';\nimport processColor from '../../StyleSheet/processColor';\nimport processFilter from '../../StyleSheet/processFilter';\nimport processFontVariant from '../../StyleSheet/processFontVariant';\nimport processTransform from '../../StyleSheet/processTransform';\nimport processTransformOrigin from '../../StyleSheet/processTransformOrigin';\nimport sizesDiffer from '../../Utilities/differ/sizesDiffer';\n\nconst colorAttributes = {process: processColor};\n\nconst ReactNativeStyleAttributes                                    = {\n  /**\n   * Layout\n   */\n  alignContent: true,\n  alignItems: true,\n  alignSelf: true,\n  aspectRatio: {process: processAspectRatio},\n  borderBottomWidth: true,\n  borderEndWidth: true,\n  borderLeftWidth: true,\n  borderRightWidth: true,\n  borderStartWidth: true,\n  borderTopWidth: true,\n  boxSizing: true,\n  columnGap: true,\n  borderWidth: true,\n  bottom: true,\n  direction: true,\n  display: true,\n  end: true,\n  flex: true,\n  flexBasis: true,\n  flexDirection: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexWrap: true,\n  gap: true,\n  height: true,\n  inset: true,\n  insetBlock: true,\n  insetBlockEnd: true,\n  insetBlockStart: true,\n  insetInline: true,\n  insetInlineEnd: true,\n  insetInlineStart: true,\n  justifyContent: true,\n  left: true,\n  margin: true,\n  marginBlock: true,\n  marginBlockEnd: true,\n  marginBlockStart: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginInline: true,\n  marginInlineEnd: true,\n  marginInlineStart: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n  maxHeight: true,\n  maxWidth: true,\n  minHeight: true,\n  minWidth: true,\n  overflow: true,\n  padding: true,\n  paddingBlock: true,\n  paddingBlockEnd: true,\n  paddingBlockStart: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingInline: true,\n  paddingInlineEnd: true,\n  paddingInlineStart: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n  position: true,\n  right: true,\n  rowGap: true,\n  start: true,\n  top: true,\n  width: true,\n  zIndex: true,\n\n  /**\n   * Shadow\n   */\n  elevation: true,\n  shadowColor: colorAttributes,\n  shadowOffset: {diff: sizesDiffer},\n  shadowOpacity: true,\n  shadowRadius: true,\n\n  /**\n   * Transform\n   */\n  transform: {process: processTransform},\n  transformOrigin: {process: processTransformOrigin},\n\n  /**\n   * Filter\n   */\n  filter:\n    NativeReactNativeFeatureFlags != null &&\n    ReactNativeFeatureFlags.enableNativeCSSParsing()\n      ? true\n      : {\n          process: processFilter,\n        },\n\n  /**\n   * MixBlendMode\n   */\n  mixBlendMode: true,\n\n  /**\n   * Isolation\n   */\n  isolation: true,\n\n  /*\n   * BoxShadow\n   */\n  boxShadow:\n    NativeReactNativeFeatureFlags != null &&\n    ReactNativeFeatureFlags.enableNativeCSSParsing()\n      ? true\n      : {\n          process: processBoxShadow,\n        },\n\n  /**\n   * Linear Gradient\n   */\n  experimental_backgroundImage: {process: processBackgroundImage},\n\n  /**\n   * View\n   */\n  backfaceVisibility: true,\n  backgroundColor: colorAttributes,\n  borderBlockColor: colorAttributes,\n  borderBlockEndColor: colorAttributes,\n  borderBlockStartColor: colorAttributes,\n  borderBottomColor: colorAttributes,\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderColor: colorAttributes,\n  borderCurve: true,\n  borderEndColor: colorAttributes,\n  borderEndEndRadius: true,\n  borderEndStartRadius: true,\n  borderLeftColor: colorAttributes,\n  borderRadius: true,\n  borderRightColor: colorAttributes,\n  borderStartColor: colorAttributes,\n  borderStartEndRadius: true,\n  borderStartStartRadius: true,\n  borderStyle: true,\n  borderTopColor: colorAttributes,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  cursor: true,\n  opacity: true,\n  outlineColor: colorAttributes,\n  outlineOffset: true,\n  outlineStyle: true,\n  outlineWidth: true,\n  pointerEvents: true,\n\n  /**\n   * Text\n   */\n  color: colorAttributes,\n  fontFamily: true,\n  fontSize: true,\n  fontStyle: true,\n  fontVariant: {process: processFontVariant},\n  fontWeight: true,\n  includeFontPadding: true,\n  letterSpacing: true,\n  lineHeight: true,\n  textAlign: true,\n  textAlignVertical: true,\n  textDecorationColor: colorAttributes,\n  textDecorationLine: true,\n  textDecorationStyle: true,\n  textShadowColor: colorAttributes,\n  textShadowOffset: true,\n  textShadowRadius: true,\n  textTransform: true,\n  userSelect: true,\n  verticalAlign: true,\n  writingDirection: true,\n\n  /**\n   * Image\n   */\n  overlayColor: colorAttributes,\n  resizeMode: true,\n  tintColor: colorAttributes,\n  objectFit: true,\n};\n\nexport default ReactNativeStyleAttributes;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                                        \n                                                               \n\n/** The actual type of the opaque NativeColorValue on Android platform */\n                              \n                                 \n  \n\nexport const PlatformColor = (...names               )             => {\n  /* $FlowExpectedError[incompatible-return]\n   * LocalNativeColorValue is the actual type of the opaque NativeColorValue on Android platform */\n  return ({resource_paths: names}                       );\n};\n\nexport const normalizeColorObject = (\n  color                  ,\n)                       => {\n  /* $FlowExpectedError[incompatible-cast]\n   * LocalNativeColorValue is the actual type of the opaque NativeColorValue on Android platform */\n  if ('resource_paths' in (color                       )) {\n    return color;\n  }\n  return null;\n};\n\nexport const processColorObject = (\n  color                  ,\n)                    => {\n  return color;\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n/* eslint no-bitwise: 0 */\n\n                                                        \n                                             \n\nimport _normalizeColor from '@react-native/normalize-colors';\n\nfunction normalizeColor(\n  color                                     ,\n)                       {\n  if (typeof color === 'object' && color != null) {\n    const {normalizeColorObject} = require('./PlatformColorValueTypes');\n    const normalizedColor = normalizeColorObject(color);\n    if (normalizedColor != null) {\n      return normalizedColor;\n    }\n  }\n\n  if (typeof color === 'string' || typeof color === 'number') {\n    return _normalizeColor(color);\n  }\n}\n\nexport default normalizeColor;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nfunction processAspectRatio(aspectRatio                  )          {\n  if (typeof aspectRatio === 'number') {\n    return aspectRatio;\n  }\n  if (typeof aspectRatio !== 'string') {\n    if (__DEV__) {\n      invariant(\n        !aspectRatio,\n        'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s',\n        aspectRatio,\n      );\n    }\n    return;\n  }\n\n  const matches = aspectRatio.split('/').map(s => s.trim());\n\n  if (matches.includes('auto')) {\n    if (__DEV__) {\n      invariant(\n        matches.length,\n        'aspectRatio does not support `auto <ratio>`. You passed: %s',\n        aspectRatio,\n      );\n    }\n    return;\n  }\n\n  const hasNonNumericValues = matches.some(n => Number.isNaN(Number(n)));\n  if (__DEV__) {\n    invariant(\n      !hasNonNumericValues && (matches.length === 1 || matches.length === 2),\n      'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s',\n      aspectRatio,\n    );\n  }\n\n  if (hasNonNumericValues) {\n    return;\n  }\n\n  if (matches.length === 2) {\n    return Number(matches[0]) / Number(matches[1]);\n  }\n\n  return Number(matches[0]);\n}\n\nexport default processAspectRatio;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n'use strict';\n\n                                                        \n                                                     \n\nconst processColor = require('./processColor').default;\nconst DIRECTION_KEYWORD_REGEX =\n  /^to\\s+(?:top|bottom|left|right)(?:\\s+(?:top|bottom|left|right))?/i;\nconst ANGLE_UNIT_REGEX = /^([+-]?\\d*\\.?\\d+)(deg|grad|rad|turn)$/i;\n\n                              \n                                  \n                                     \n\n// null color indicate that the transition hint syntax is used. e.g. red, 20%, blue\n                                                 \n// percentage or pixel value\n                                                \n\n                            \n                         \n                                     \n                              \n                          \n                                \n     \n  \n\nconst DEFAULT_DIRECTION                          = {\n  type: 'angle',\n  value: 180,\n};\n\nexport default function processBackgroundImage(\n  backgroundImage                                           ,\n)                                      {\n  let result                                      = [];\n  if (backgroundImage == null) {\n    return result;\n  }\n\n  if (typeof backgroundImage === 'string') {\n    result = parseCSSLinearGradient(backgroundImage.replace(/\\n/g, ' '));\n  } else if (Array.isArray(backgroundImage)) {\n    for (const bgImage of backgroundImage) {\n      const processedColorStops         \n                              \n                                    \n         = [];\n      for (let index = 0; index < bgImage.colorStops.length; index++) {\n        const colorStop = bgImage.colorStops[index];\n        const positions = colorStop.positions;\n        // Color transition hint syntax (red, 20%, blue)\n        if (\n          colorStop.color == null &&\n          Array.isArray(positions) &&\n          positions.length === 1\n        ) {\n          const position = positions[0];\n          if (\n            typeof position === 'number' ||\n            (typeof position === 'string' && position.endsWith('%'))\n          ) {\n            processedColorStops.push({\n              color: null,\n              position,\n            });\n          } else {\n            // If a position is invalid, return an empty array and do not apply gradient. Same as web.\n            return [];\n          }\n        } else {\n          const processedColor = processColor(colorStop.color);\n          if (processedColor == null) {\n            // If a color is invalid, return an empty array and do not apply gradient. Same as web.\n            return [];\n          }\n          if (positions != null && positions.length > 0) {\n            for (const position of positions) {\n              if (\n                typeof position === 'number' ||\n                (typeof position === 'string' && position.endsWith('%'))\n              ) {\n                processedColorStops.push({\n                  color: processedColor,\n                  position,\n                });\n              } else {\n                // If a position is invalid, return an empty array and do not apply gradient. Same as web.\n                return [];\n              }\n            }\n          } else {\n            processedColorStops.push({\n              color: processedColor,\n              position: null,\n            });\n          }\n        }\n      }\n\n      let direction                          = DEFAULT_DIRECTION;\n      const bgDirection =\n        bgImage.direction != null ? bgImage.direction.toLowerCase() : null;\n\n      if (bgDirection != null) {\n        if (ANGLE_UNIT_REGEX.test(bgDirection)) {\n          const parsedAngle = getAngleInDegrees(bgDirection);\n          if (parsedAngle != null) {\n            direction = {\n              type: 'angle',\n              value: parsedAngle,\n            };\n          } else {\n            // If an angle is invalid, return an empty array and do not apply any gradient. Same as web.\n            return [];\n          }\n        } else if (DIRECTION_KEYWORD_REGEX.test(bgDirection)) {\n          const parsedDirection = getDirectionForKeyword(bgDirection);\n          if (parsedDirection != null) {\n            direction = parsedDirection;\n          } else {\n            // If a direction is invalid, return an empty array and do not apply any gradient. Same as web.\n            return [];\n          }\n        } else {\n          // If a direction is invalid, return an empty array and do not apply any gradient. Same as web.\n          return [];\n        }\n      }\n\n      result = result.concat({\n        type: 'linearGradient',\n        direction,\n        colorStops: processedColorStops,\n      });\n    }\n  }\n\n  return result;\n}\n\nfunction parseCSSLinearGradient(\n  cssString        ,\n)                                      {\n  const gradients = [];\n  let match;\n\n  // matches one or more linear-gradient functions in CSS\n  const linearGradientRegex = /linear-gradient\\s*\\(((?:\\([^)]*\\)|[^())])*)\\)/gi;\n\n  while ((match = linearGradientRegex.exec(cssString))) {\n    const gradientContent = match[1];\n    const parts = gradientContent.split(',');\n    let direction                          = DEFAULT_DIRECTION;\n    const trimmedDirection = parts[0].trim().toLowerCase();\n\n    if (ANGLE_UNIT_REGEX.test(trimmedDirection)) {\n      const parsedAngle = getAngleInDegrees(trimmedDirection);\n      if (parsedAngle != null) {\n        direction = {\n          type: 'angle',\n          value: parsedAngle,\n        };\n        parts.shift();\n      } else {\n        // If an angle is invalid, return an empty array and do not apply any gradient. Same as web.\n        return [];\n      }\n    } else if (DIRECTION_KEYWORD_REGEX.test(trimmedDirection)) {\n      const parsedDirection = getDirectionForKeyword(trimmedDirection);\n      if (parsedDirection != null) {\n        direction = parsedDirection;\n        parts.shift();\n      } else {\n        // If a direction is invalid, return an empty array and do not apply any gradient. Same as web.\n        return [];\n      }\n    }\n\n    const colorStopsString = parts.join(',');\n    const colorStops = [];\n    // split by comma, but not if it's inside a parentheses. e.g. red, rgba(0, 0, 0, 0.5), green => [\"red\", \"rgba(0, 0, 0, 0.5)\", \"green\"]\n    const stops = colorStopsString.split(/,(?![^(]*\\))/);\n    let prevStop = null;\n    for (let i = 0; i < stops.length; i++) {\n      const stop = stops[i];\n      const trimmedStop = stop.trim().toLowerCase();\n      // Match function like pattern or single words\n      const colorStopParts = trimmedStop.match(/\\S+\\([^)]*\\)|\\S+/g);\n      if (colorStopParts == null) {\n        // If a color stop is invalid, return an empty array and do not apply any gradient. Same as web.\n        return [];\n      }\n      // Case 1: [color, position, position]\n      if (colorStopParts.length === 3) {\n        const color = colorStopParts[0];\n        const position1 = getPositionFromCSSValue(colorStopParts[1]);\n        const position2 = getPositionFromCSSValue(colorStopParts[2]);\n        const processedColor = processColor(color);\n        if (processedColor == null) {\n          // If a color is invalid, return an empty array and do not apply any gradient. Same as web.\n          return [];\n        }\n\n        if (position1 == null || position2 == null) {\n          // If a position is invalid, return an empty array and do not apply any gradient. Same as web.\n          return [];\n        }\n\n        colorStops.push({\n          color: processedColor,\n          position: position1,\n        });\n        colorStops.push({\n          color: processedColor,\n          position: position2,\n        });\n      }\n      // Case 2: [color, position]\n      else if (colorStopParts.length === 2) {\n        const color = colorStopParts[0];\n        const position = getPositionFromCSSValue(colorStopParts[1]);\n        const processedColor = processColor(color);\n        if (processedColor == null) {\n          // If a color is invalid, return an empty array and do not apply any gradient. Same as web.\n          return [];\n        }\n        if (position == null) {\n          // If a position is invalid, return an empty array and do not apply any gradient. Same as web.\n          return [];\n        }\n        colorStops.push({\n          color: processedColor,\n          position,\n        });\n      }\n      // Case 3: [color]\n      // Case 4: [position] => transition hint syntax\n      else if (colorStopParts.length === 1) {\n        const position = getPositionFromCSSValue(colorStopParts[0]);\n        if (position != null) {\n          // handle invalid transition hint syntax. transition hint syntax must have color before and after the position. e.g. red, 20%, blue\n          if (\n            (prevStop != null &&\n              prevStop.length === 1 &&\n              getPositionFromCSSValue(prevStop[0]) != null) ||\n            i === stops.length - 1 ||\n            i === 0\n          ) {\n            // If the last stop is a transition hint syntax, return an empty array and do not apply any gradient. Same as web.\n            return [];\n          }\n          colorStops.push({\n            color: null,\n            position,\n          });\n        } else {\n          const processedColor = processColor(colorStopParts[0]);\n          if (processedColor == null) {\n            // If a color is invalid, return an empty array and do not apply any gradient. Same as web.\n            return [];\n          }\n          colorStops.push({\n            color: processedColor,\n            position: null,\n          });\n        }\n      } else {\n        // If a color stop is invalid, return an empty array and do not apply any gradient. Same as web.\n        return [];\n      }\n      prevStop = colorStopParts;\n    }\n\n    gradients.push({\n      type: 'linearGradient',\n      direction,\n      colorStops,\n    });\n  }\n\n  return gradients;\n}\n\nfunction getDirectionForKeyword(direction         )                           {\n  if (direction == null) {\n    return null;\n  }\n  // Remove extra whitespace\n  const normalized = direction.replace(/\\s+/g, ' ').toLowerCase();\n\n  switch (normalized) {\n    case 'to top':\n      return {type: 'angle', value: 0};\n    case 'to right':\n      return {type: 'angle', value: 90};\n    case 'to bottom':\n      return {type: 'angle', value: 180};\n    case 'to left':\n      return {type: 'angle', value: 270};\n    case 'to top right':\n    case 'to right top':\n      return {type: 'keyword', value: 'to top right'};\n    case 'to bottom right':\n    case 'to right bottom':\n      return {type: 'keyword', value: 'to bottom right'};\n    case 'to top left':\n    case 'to left top':\n      return {type: 'keyword', value: 'to top left'};\n    case 'to bottom left':\n    case 'to left bottom':\n      return {type: 'keyword', value: 'to bottom left'};\n    default:\n      return null;\n  }\n}\n\nfunction getAngleInDegrees(angle         )          {\n  if (angle == null) {\n    return null;\n  }\n  const match = angle.match(ANGLE_UNIT_REGEX);\n  if (!match) {\n    return null;\n  }\n\n  const [, value, unit] = match;\n\n  const numericValue = parseFloat(value);\n  switch (unit) {\n    case 'deg':\n      return numericValue;\n    case 'grad':\n      return numericValue * 0.9; // 1 grad = 0.9 degrees\n    case 'rad':\n      return (numericValue * 180) / Math.PI;\n    case 'turn':\n      return numericValue * 360; // 1 turn = 360 degrees\n    default:\n      return null;\n  }\n}\n\nfunction getPositionFromCSSValue(position        ) {\n  if (position.endsWith('px')) {\n    return parseFloat(position);\n  }\n\n  if (position.endsWith('%')) {\n    return position;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n * @oncall react-native\n */\n\n                                                        \n                                                      \n\nimport processColor from './processColor';\n\n                               \n                  \n                  \n                              \n                      \n                          \n                  \n  \n\nexport default function processBoxShadow(\n  rawBoxShadows                                            ,\n)                         {\n  const result                         = [];\n  if (rawBoxShadows == null) {\n    return result;\n  }\n\n  const boxShadowList =\n    typeof rawBoxShadows === 'string'\n      ? parseBoxShadowString(rawBoxShadows.replace(/\\n/g, ' '))\n      : rawBoxShadows;\n\n  for (const rawBoxShadow of boxShadowList) {\n    const parsedBoxShadow                  = {\n      offsetX: 0,\n      offsetY: 0,\n    };\n\n    let value;\n    for (const arg in rawBoxShadow) {\n      switch (arg) {\n        case 'offsetX':\n          value =\n            typeof rawBoxShadow.offsetX === 'string'\n              ? parseLength(rawBoxShadow.offsetX)\n              : rawBoxShadow.offsetX;\n          if (value == null) {\n            return [];\n          }\n\n          parsedBoxShadow.offsetX = value;\n          break;\n        case 'offsetY':\n          value =\n            typeof rawBoxShadow.offsetY === 'string'\n              ? parseLength(rawBoxShadow.offsetY)\n              : rawBoxShadow.offsetY;\n          if (value == null) {\n            return [];\n          }\n\n          parsedBoxShadow.offsetY = value;\n          break;\n        case 'spreadDistance':\n          value =\n            typeof rawBoxShadow.spreadDistance === 'string'\n              ? parseLength(rawBoxShadow.spreadDistance)\n              : rawBoxShadow.spreadDistance;\n          if (value == null) {\n            return [];\n          }\n\n          parsedBoxShadow.spreadDistance = value;\n          break;\n        case 'blurRadius':\n          value =\n            typeof rawBoxShadow.blurRadius === 'string'\n              ? parseLength(rawBoxShadow.blurRadius)\n              : rawBoxShadow.blurRadius;\n          if (value == null || value < 0) {\n            return [];\n          }\n\n          parsedBoxShadow.blurRadius = value;\n          break;\n        case 'color':\n          const color = processColor(rawBoxShadow.color);\n          if (color == null) {\n            return [];\n          }\n\n          parsedBoxShadow.color = color;\n          break;\n        case 'inset':\n          parsedBoxShadow.inset = rawBoxShadow.inset;\n      }\n    }\n    result.push(parsedBoxShadow);\n  }\n  return result;\n}\n\nfunction parseBoxShadowString(rawBoxShadows        )                        {\n  let result                        = [];\n\n  for (const rawBoxShadow of rawBoxShadows\n    .split(/,(?![^()]*\\))/) // split by comma that is not in parenthesis\n    .map(bS => bS.trim())\n    .filter(bS => bS !== '')) {\n    const boxShadow                 = {\n      offsetX: 0,\n      offsetY: 0,\n    };\n    let offsetX                 ;\n    let offsetY                 ;\n    let keywordDetectedAfterLength = false;\n\n    let lengthCount = 0;\n\n    // split rawBoxShadow string by all whitespaces that are not in parenthesis\n    const args = rawBoxShadow.split(/\\s+(?![^(]*\\))/);\n    for (const arg of args) {\n      const processedColor = processColor(arg);\n      if (processedColor != null) {\n        if (boxShadow.color != null) {\n          return [];\n        }\n        if (offsetX != null) {\n          keywordDetectedAfterLength = true;\n        }\n        boxShadow.color = arg;\n        continue;\n      }\n\n      if (arg === 'inset') {\n        if (boxShadow.inset != null) {\n          return [];\n        }\n        if (offsetX != null) {\n          keywordDetectedAfterLength = true;\n        }\n        boxShadow.inset = true;\n        continue;\n      }\n\n      switch (lengthCount) {\n        case 0:\n          offsetX = arg;\n          lengthCount++;\n          break;\n        case 1:\n          if (keywordDetectedAfterLength) {\n            return [];\n          }\n          offsetY = arg;\n          lengthCount++;\n          break;\n        case 2:\n          if (keywordDetectedAfterLength) {\n            return [];\n          }\n          boxShadow.blurRadius = arg;\n          lengthCount++;\n          break;\n        case 3:\n          if (keywordDetectedAfterLength) {\n            return [];\n          }\n          boxShadow.spreadDistance = arg;\n          lengthCount++;\n          break;\n        default:\n          return [];\n      }\n    }\n\n    if (offsetX == null || offsetY == null) {\n      return [];\n    }\n\n    boxShadow.offsetX = offsetX;\n    boxShadow.offsetY = offsetY;\n\n    result.push(boxShadow);\n  }\n  return result;\n}\n\nfunction parseLength(length        )          {\n  // matches on args with units like \"1.5 5% -80deg\"\n  const argsWithUnitsRegex = /([+-]?\\d*(\\.\\d+)?)([\\w\\W]+)?/g;\n  const match = argsWithUnitsRegex.exec(length);\n\n  if (!match || Number.isNaN(match[1])) {\n    return null;\n  }\n\n  if (match[3] != null && match[3] !== 'px') {\n    return null;\n  }\n\n  if (match[3] == null && match[1] !== '0') {\n    return null;\n  }\n\n  return Number(match[1]);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n'use strict';\n\n                                                               \n\nconst Platform = require('../Utilities/Platform').default;\nconst normalizeColor = require('./normalizeColor').default;\n\n                                                            \n\n/* eslint no-bitwise: 0 */\nfunction processColor(color                         )                       {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  let normalizedColor = normalizeColor(color);\n  if (normalizedColor === null || normalizedColor === undefined) {\n    return undefined;\n  }\n\n  if (typeof normalizedColor === 'object') {\n    const processColorObject =\n      require('./PlatformColorValueTypes').processColorObject;\n\n    const processedColorObj = processColorObject(normalizedColor);\n\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  }\n\n  if (typeof normalizedColor !== 'number') {\n    return null;\n  }\n\n  // Converts 0xrrggbbaa into 0xaarrggbb\n  normalizedColor = ((normalizedColor << 24) | (normalizedColor >>> 8)) >>> 0;\n\n  if (Platform.OS === 'android') {\n    // Android use 32 bit *signed* integer to represent the color\n    // We utilize the fact that bitwise operations in JS also operates on\n    // signed 32 bit integers, so that we can use those to convert from\n    // *unsigned* to *signed* 32bit int that way.\n    normalizedColor = normalizedColor | 0x0;\n  }\n  return normalizedColor;\n}\n\nexport default processColor;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format strict-local\n *      \n * @oncall react-native\n */\n\n'use strict';\n\n                                             \n                                                                       \n\nimport processColor from './processColor';\n\n                   \n                        \n                  \n                      \n                       \n                       \n                    \n                     \n                      \n                   \n                                   \n\n                         \n                  \n                  \n                             \n                     \n  \n\nexport default function processFilter(\n  filter                                            ,\n)                               {\n  let result                      = [];\n  if (filter == null) {\n    return result;\n  }\n\n  if (typeof filter === 'string') {\n    filter = filter.replace(/\\n/g, ' ');\n\n    // matches on functions with args and nested functions like \"drop-shadow(10 10 10 rgba(0, 0, 0, 1))\"\n    const regex = /([\\w-]+)\\(([^()]*|\\([^()]*\\)|[^()]*\\([^()]*\\)[^()]*)\\)/g;\n    let matches;\n\n    while ((matches = regex.exec(filter))) {\n      let filterName = matches[1].toLowerCase();\n      if (filterName === 'drop-shadow') {\n        const dropShadow = parseDropShadow(matches[2]);\n        if (dropShadow != null) {\n          result.push({dropShadow});\n        } else {\n          return [];\n        }\n      } else {\n        const camelizedName =\n          filterName === 'drop-shadow'\n            ? 'dropShadow'\n            : filterName === 'hue-rotate'\n              ? 'hueRotate'\n              : filterName;\n        const amount = _getFilterAmount(camelizedName, matches[2]);\n\n        if (amount != null) {\n          const filterFunction = {};\n          // $FlowFixMe The key will be the correct one but flow can't see that.\n          filterFunction[camelizedName] = amount;\n          // $FlowFixMe The key will be the correct one but flow can't see that.\n          result.push(filterFunction);\n        } else {\n          // If any primitive is invalid then apply none of the filters. This is how\n          // web works and makes it clear that something is wrong becuase no\n          // graphical effects are happening.\n          return [];\n        }\n      }\n    }\n  } else if (Array.isArray(filter)) {\n    for (const filterFunction of filter) {\n      const [filterName, filterValue] = Object.entries(filterFunction)[0];\n      if (filterName === 'dropShadow') {\n        // $FlowFixMe\n        const dropShadow = parseDropShadow(filterValue);\n        if (dropShadow == null) {\n          return [];\n        }\n        result.push({dropShadow});\n      } else {\n        const amount = _getFilterAmount(filterName, filterValue);\n\n        if (amount != null) {\n          const resultObject = {};\n          // $FlowFixMe\n          resultObject[filterName] = amount;\n          // $FlowFixMe\n          result.push(resultObject);\n        } else {\n          // If any primitive is invalid then apply none of the filters. This is how\n          // web works and makes it clear that something is wrong becuase no\n          // graphical effects are happening.\n          return [];\n        }\n      }\n    }\n  } else {\n    throw new TypeError(`${typeof filter} filter is not a string or array`);\n  }\n\n  return result;\n}\n\nfunction _getFilterAmount(filterName        , filterArgs       )          {\n  let filterArgAsNumber        ;\n  let unit        ;\n  if (typeof filterArgs === 'string') {\n    // matches on args with units like \"1.5 5% -80deg\"\n    const argsWithUnitsRegex = new RegExp(/([+-]?\\d*(\\.\\d+)?)([a-zA-Z%]+)?/g);\n    const match = argsWithUnitsRegex.exec(filterArgs);\n\n    if (!match || isNaN(Number(match[1]))) {\n      return undefined;\n    }\n\n    filterArgAsNumber = Number(match[1]);\n    unit = match[3];\n  } else if (typeof filterArgs === 'number') {\n    filterArgAsNumber = filterArgs;\n  } else {\n    return undefined;\n  }\n\n  switch (filterName) {\n    // Hue rotate takes some angle that can have a unit and can be\n    // negative. Additionally, 0 with no unit is allowed.\n    case 'hueRotate':\n      if (filterArgAsNumber === 0) {\n        return 0;\n      }\n      if (unit !== 'deg' && unit !== 'rad') {\n        return undefined;\n      }\n      return unit === 'rad'\n        ? (180 * filterArgAsNumber) / Math.PI\n        : filterArgAsNumber;\n    // blur takes any positive CSS length that is not a percent. In RN\n    // we currently only have DIPs, so we are not parsing units here.\n    case 'blur':\n      if ((unit && unit !== 'px') || filterArgAsNumber < 0) {\n        return undefined;\n      }\n      return filterArgAsNumber;\n    // All other filters except take a non negative number or percentage. There\n    // are no units associated with this value and percentage numbers map 1-to-1\n    // to a non-percentage number (e.g. 50% == 0.5).\n    case 'brightness':\n    case 'contrast':\n    case 'grayscale':\n    case 'invert':\n    case 'opacity':\n    case 'saturate':\n    case 'sepia':\n      if ((unit && unit !== '%' && unit !== 'px') || filterArgAsNumber < 0) {\n        return undefined;\n      }\n      if (unit === '%') {\n        filterArgAsNumber /= 100;\n      }\n      return filterArgAsNumber;\n    default:\n      return undefined;\n  }\n}\n\nfunction parseDropShadow(\n  rawDropShadow                          ,\n)                    {\n  const dropShadow =\n    typeof rawDropShadow === 'string'\n      ? parseDropShadowString(rawDropShadow)\n      : rawDropShadow;\n\n  const parsedDropShadow                   = {\n    offsetX: 0,\n    offsetY: 0,\n  };\n  let offsetX        ;\n  let offsetY        ;\n\n  for (const arg in dropShadow) {\n    let value;\n    switch (arg) {\n      case 'offsetX':\n        value =\n          typeof dropShadow.offsetX === 'string'\n            ? parseLength(dropShadow.offsetX)\n            : dropShadow.offsetX;\n        if (value == null) {\n          return null;\n        }\n        offsetX = value;\n        break;\n      case 'offsetY':\n        value =\n          typeof dropShadow.offsetY === 'string'\n            ? parseLength(dropShadow.offsetY)\n            : dropShadow.offsetY;\n        if (value == null) {\n          return null;\n        }\n        offsetY = value;\n        break;\n      case 'standardDeviation':\n        value =\n          typeof dropShadow.standardDeviation === 'string'\n            ? parseLength(dropShadow.standardDeviation)\n            : dropShadow.standardDeviation;\n        if (value == null || value < 0) {\n          return null;\n        }\n        parsedDropShadow.standardDeviation = value;\n        break;\n      case 'color':\n        const color = processColor(dropShadow.color);\n        if (color == null) {\n          return null;\n        }\n        parsedDropShadow.color = color;\n        break;\n      default:\n        return null;\n    }\n  }\n\n  if (offsetX == null || offsetY == null) {\n    return null;\n  }\n\n  parsedDropShadow.offsetX = offsetX;\n  parsedDropShadow.offsetY = offsetY;\n\n  return parsedDropShadow;\n}\n\nfunction parseDropShadowString(rawDropShadow        )                   {\n  const dropShadow                  = {\n    offsetX: 0,\n    offsetY: 0,\n  };\n  let offsetX        ;\n  let offsetY        ;\n  let lengthCount = 0;\n  let keywordDetectedAfterLength = false;\n\n  // split args by all whitespaces that are not in parenthesis\n  for (const arg of rawDropShadow.split(/\\s+(?![^(]*\\))/)) {\n    const processedColor = processColor(arg);\n    if (processedColor != null) {\n      if (dropShadow.color != null) {\n        return null;\n      }\n      if (offsetX != null) {\n        keywordDetectedAfterLength = true;\n      }\n      dropShadow.color = arg;\n      continue;\n    }\n\n    switch (lengthCount) {\n      case 0:\n        offsetX = arg;\n        lengthCount++;\n        break;\n      case 1:\n        if (keywordDetectedAfterLength) {\n          return null;\n        }\n        offsetY = arg;\n        lengthCount++;\n        break;\n      case 2:\n        if (keywordDetectedAfterLength) {\n          return null;\n        }\n        dropShadow.standardDeviation = arg;\n        lengthCount++;\n        break;\n      default:\n        return null;\n    }\n  }\n  if (offsetX == null || offsetY == null) {\n    return null;\n  }\n\n  dropShadow.offsetX = offsetX;\n  dropShadow.offsetY = offsetY;\n  return dropShadow;\n}\n\nfunction parseLength(length        )          {\n  // matches on args with units like \"1.5 5% -80deg\"\n  const argsWithUnitsRegex = /([+-]?\\d*(\\.\\d+)?)([\\w\\W]+)?/g;\n  const match = argsWithUnitsRegex.exec(length);\n\n  if (!match || Number.isNaN(match[1])) {\n    return null;\n  }\n\n  if (match[3] != null && match[3] !== 'px') {\n    return null;\n  }\n\n  if (match[3] == null && match[1] !== '0') {\n    return null;\n  }\n\n  return Number(match[1]);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n'use strict';\n\n                                                                     \n\nfunction processFontVariant(\n  fontVariant                                        ,\n)                                 {\n  if (Array.isArray(fontVariant)) {\n    return fontVariant;\n  }\n\n  // $FlowFixMe[incompatible-type]\n  const match                                 = fontVariant\n    .split(' ')\n    .filter(Boolean);\n\n  return match;\n}\n\nexport default processFontVariant;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\n'use strict';\n\nconst stringifySafe = require('../Utilities/stringifySafe').default;\nconst invariant = require('invariant');\n\n/**\n * Generate a transform matrix based on the provided transforms, and use that\n * within the style object instead.\n *\n * This allows us to provide an API that is similar to CSS, where transforms may\n * be applied in an arbitrary order, and yet have a universal, singular\n * interface to native code.\n */\nfunction processTransform(\n  transform                        ,\n)                                {\n  if (typeof transform === 'string') {\n    const regex = new RegExp(/(\\w+)\\(([^)]+)\\)/g);\n    const transformArray                = [];\n    let matches;\n\n    while ((matches = regex.exec(transform))) {\n      const {key, value} = _getKeyAndValueFromCSSTransform(\n        matches[1],\n        matches[2],\n      );\n\n      if (value !== undefined) {\n        transformArray.push({[key]: value});\n      }\n    }\n    transform = transformArray;\n  }\n\n  if (__DEV__) {\n    _validateTransforms(transform);\n  }\n\n  return transform;\n}\n\nconst _getKeyAndValueFromCSSTransform   \n              \n               \n                                                                     = (\n  key,\n  args,\n) => {\n  const argsWithUnitsRegex = new RegExp(/([+-]?\\d+(\\.\\d+)?)([a-zA-Z]+|%)?/g);\n\n  switch (key) {\n    case 'matrix':\n      return {key, value: args.match(/[+-]?\\d+(\\.\\d+)?/g)?.map(Number)};\n    case 'translate':\n    case 'translate3d':\n      const parsedArgs = [];\n      let missingUnitOfMeasurement = false;\n\n      let matches;\n      while ((matches = argsWithUnitsRegex.exec(args))) {\n        const value = Number(matches[1]);\n        const unitOfMeasurement = matches[3];\n\n        if (value !== 0 && !unitOfMeasurement) {\n          missingUnitOfMeasurement = true;\n        }\n\n        if (unitOfMeasurement === '%') {\n          parsedArgs.push(`${value}%`);\n        } else {\n          parsedArgs.push(value);\n        }\n      }\n\n      if (__DEV__) {\n        invariant(\n          !missingUnitOfMeasurement,\n          `Transform with key ${key} must have units unless the provided value is 0, found %s`,\n          `${key}(${args})`,\n        );\n\n        if (key === 'translate') {\n          invariant(\n            parsedArgs?.length === 1 || parsedArgs?.length === 2,\n            'Transform with key translate must be an string with 1 or 2 parameters, found %s: %s',\n            parsedArgs?.length,\n            `${key}(${args})`,\n          );\n        } else {\n          invariant(\n            parsedArgs?.length === 3,\n            'Transform with key translate3d must be an string with 3 parameters, found %s: %s',\n            parsedArgs?.length,\n            `${key}(${args})`,\n          );\n        }\n      }\n\n      if (parsedArgs?.length === 1) {\n        parsedArgs.push(0);\n      }\n\n      return {key: 'translate', value: parsedArgs};\n    case 'translateX':\n    case 'translateY':\n    case 'perspective':\n      const argMatches = argsWithUnitsRegex.exec(args);\n\n      if (!argMatches?.length) {\n        return {key, value: undefined};\n      }\n\n      const value = Number(argMatches[1]);\n      const unitOfMeasurement = argMatches[3];\n\n      if (__DEV__) {\n        invariant(\n          value === 0 || unitOfMeasurement,\n          `Transform with key ${key} must have units unless the provided value is 0, found %s`,\n          `${key}(${args})`,\n        );\n      }\n\n      return {key, value};\n\n    default:\n      return {key, value: !isNaN(args) ? Number(args) : args};\n  }\n};\n\nfunction _validateTransforms(transform               )       {\n  transform.forEach(transformation => {\n    const keys = Object.keys(transformation);\n    invariant(\n      keys.length === 1,\n      'You must specify exactly one property per transform object. Passed properties: %s',\n      stringifySafe(transformation),\n    );\n    const key = keys[0];\n    const value = transformation[key];\n    if (key === 'matrix' && transform.length > 1) {\n      console.error(\n        'When using a matrix transform, you must specify exactly one transform object. Passed transform: ' +\n          stringifySafe(transform),\n      );\n    }\n    _validateTransform(key, value, transformation);\n  });\n}\n\nfunction _validateTransform(\n  key        ,\n  value                       ,\n  transformation     ,\n) {\n  invariant(\n    !value.getValue,\n    'You passed an Animated.Value to a normal component. ' +\n      'You need to wrap that component in an Animated. For example, ' +\n      'replace <View /> by <Animated.View />.',\n  );\n\n  const multivalueTransforms = ['matrix', 'translate'];\n  if (multivalueTransforms.indexOf(key) !== -1) {\n    invariant(\n      Array.isArray(value),\n      'Transform with key of %s must have an array as the value: %s',\n      key,\n      stringifySafe(transformation),\n    );\n  }\n  switch (key) {\n    case 'matrix':\n      invariant(\n        value.length === 9 || value.length === 16,\n        'Matrix transform must have a length of 9 (2d) or 16 (3d). ' +\n          'Provided matrix has a length of %s: %s',\n        /* $FlowFixMe[prop-missing] (>=0.84.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.84 was deployed. To\n         * see the error, delete this comment and run Flow. */\n        value.length,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'translate':\n      invariant(\n        value.length === 2 || value.length === 3,\n        'Transform with key translate must be an array of length 2 or 3, found %s: %s',\n        /* $FlowFixMe[prop-missing] (>=0.84.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.84 was deployed. To\n         * see the error, delete this comment and run Flow. */\n        value.length,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'rotateX':\n    case 'rotateY':\n    case 'rotateZ':\n    case 'rotate':\n    case 'skewX':\n    case 'skewY':\n      invariant(\n        typeof value === 'string',\n        'Transform with key of \"%s\" must be a string: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      invariant(\n        value.indexOf('deg') > -1 || value.indexOf('rad') > -1,\n        'Rotate transform must be expressed in degrees (deg) or radians ' +\n          '(rad): %s',\n        stringifySafe(transformation),\n      );\n      break;\n    case 'perspective':\n      invariant(\n        typeof value === 'number',\n        'Transform with key of \"%s\" must be a number: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      invariant(\n        value !== 0,\n        'Transform with key of \"%s\" cannot be zero: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'translateX':\n    case 'translateY':\n      invariant(\n        typeof value === 'number' ||\n          (typeof value === 'string' && value.endsWith('%')),\n        'Transform with key of \"%s\" must be number or a percentage. Passed value: %s.',\n        key,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'scale':\n    case 'scaleX':\n    case 'scaleY':\n      invariant(\n        typeof value === 'number',\n        'Transform with key of \"%s\" must be a number: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      break;\n    default:\n      invariant(\n        false,\n        'Invalid transform %s: %s',\n        key,\n        stringifySafe(transformation),\n      );\n  }\n}\n\nexport default processTransform;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\nimport invariant from 'invariant';\n\nconst INDEX_X = 0;\nconst INDEX_Y = 1;\nconst INDEX_Z = 2;\n\n/* eslint-disable no-labels */\nexport default function processTransformOrigin(\n  transformOrigin                                 ,\n)                         {\n  if (typeof transformOrigin === 'string') {\n    const transformOriginString = transformOrigin;\n    const regex = /(top|bottom|left|right|center|\\d+(?:%|px)|0)/gi;\n    const transformOriginArray                         = ['50%', '50%', 0];\n\n    let index = INDEX_X;\n    let matches;\n    outer: while ((matches = regex.exec(transformOriginString))) {\n      let nextIndex = index + 1;\n\n      const value = matches[0];\n      const valueLower = value.toLowerCase();\n\n      switch (valueLower) {\n        case 'left':\n        case 'right': {\n          invariant(\n            index === INDEX_X,\n            'Transform-origin %s can only be used for x-position',\n            value,\n          );\n          transformOriginArray[INDEX_X] = valueLower === 'left' ? 0 : '100%';\n          break;\n        }\n        case 'top':\n        case 'bottom': {\n          invariant(\n            index !== INDEX_Z,\n            'Transform-origin %s can only be used for y-position',\n            value,\n          );\n          transformOriginArray[INDEX_Y] = valueLower === 'top' ? 0 : '100%';\n\n          // Handle [[ center | left | right ] && [ center | top | bottom ]] <length>?\n          if (index === INDEX_X) {\n            const horizontal = regex.exec(transformOriginString);\n            if (horizontal == null) {\n              break outer;\n            }\n\n            switch (horizontal[0].toLowerCase()) {\n              case 'left':\n                transformOriginArray[INDEX_X] = 0;\n                break;\n              case 'right':\n                transformOriginArray[INDEX_X] = '100%';\n                break;\n              case 'center':\n                transformOriginArray[INDEX_X] = '50%';\n                break;\n              default:\n                invariant(\n                  false,\n                  'Could not parse transform-origin: %s',\n                  transformOriginString,\n                );\n            }\n            nextIndex = INDEX_Z;\n          }\n\n          break;\n        }\n        case 'center': {\n          invariant(\n            index !== INDEX_Z,\n            'Transform-origin value %s cannot be used for z-position',\n            value,\n          );\n          transformOriginArray[index] = '50%';\n          break;\n        }\n        default: {\n          if (value.endsWith('%')) {\n            transformOriginArray[index] = value;\n          } else {\n            transformOriginArray[index] = parseFloat(value); // Remove `px`\n          }\n          break;\n        }\n      }\n\n      index = nextIndex;\n    }\n\n    transformOrigin = transformOriginArray;\n  }\n\n  if (__DEV__) {\n    _validateTransformOrigin(transformOrigin);\n  }\n\n  return transformOrigin;\n}\n\nfunction _validateTransformOrigin(transformOrigin                        ) {\n  invariant(\n    transformOrigin.length === 3,\n    'Transform origin must have exactly 3 values.',\n  );\n  const [x, y, z] = transformOrigin;\n  invariant(\n    typeof x === 'number' || (typeof x === 'string' && x.endsWith('%')),\n    'Transform origin x-position must be a number. Passed value: %s.',\n    x,\n  );\n  invariant(\n    typeof y === 'number' || (typeof y === 'string' && y.endsWith('%')),\n    'Transform origin y-position must be a number. Passed value: %s.',\n    y,\n  );\n  invariant(\n    typeof z === 'number',\n    'Transform origin z-position must be a number. Passed value: %s.',\n    z,\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n'use strict';\n\nconst dummySize = {width: undefined, height: undefined};\n                                              \n\nfunction sizesDiffer(one      , two      )          {\n  const defaultedOne = one || dummySize;\n  const defaultedTwo = two || dummySize;\n  return (\n    defaultedOne !== defaultedTwo &&\n    (defaultedOne.width !== defaultedTwo.width ||\n      defaultedOne.height !== defaultedTwo.height)\n  );\n}\n\nexport default sizesDiffer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<5b1d3ba6712de7a927eeeb8602ee2a8f>>\n *       strict\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags --update\n */\n\nimport {\n              \n                    \n  createJavaScriptFlagGetter,\n  createNativeFlagGetter,\n  setOverrides,\n} from './ReactNativeFeatureFlagsBase';\n\n                                                       \n                                  \n                                                    \n                                             \n                                                       \n                                             \n                                                  \n                                                   \n                                        \n                                                       \n                                            \n                                                      \n                                                       \n                                                                \n                                                   \n                                            \n   \n\n                                                                                                 \n\n                                                 \n                                   \n                                  \n                                                             \n                                                     \n                                                             \n                                                \n                                                \n                                                 \n                                    \n                                        \n                                                 \n                                                 \n                                                          \n                                                   \n                                               \n                                     \n                                          \n                                                         \n                                                                    \n                                                          \n                                              \n                                                 \n                                       \n                                     \n                                       \n                                              \n                                              \n                                           \n                                                                      \n                                                                    \n                                                                              \n                                         \n                                                   \n                                          \n                                                         \n                                                                                        \n                                                              \n                                                             \n                                                     \n                                                        \n                                    \n                                                        \n                                                      \n                                       \n                                             \n                                         \n                                   \n   \n\n/**\n * JS-only flag for testing. Do NOT modify.\n */\nexport const jsOnlyTestFlag                  = createJavaScriptFlagGetter('jsOnlyTestFlag', false);\n\n/**\n * Enables an experimental flush-queue debouncing in Animated.js.\n */\nexport const animatedShouldDebounceQueueFlush                  = createJavaScriptFlagGetter('animatedShouldDebounceQueueFlush', false);\n\n/**\n * Enables an experimental mega-operation for Animated.js that replaces many calls to native with a single call into native, to reduce JSI/JNI traffic.\n */\nexport const animatedShouldUseSingleOp                  = createJavaScriptFlagGetter('animatedShouldUseSingleOp', false);\n\n/**\n * Changes `useAnimatedPropsMemo` to avoid state updates to invalidate the cached `AnimatedProps`.\n */\nexport const avoidStateUpdateInAnimatedPropsMemo                  = createJavaScriptFlagGetter('avoidStateUpdateInAnimatedPropsMemo', false);\n\n/**\n * Disables InteractionManager and replaces its scheduler with `setImmediate`.\n */\nexport const disableInteractionManager                  = createJavaScriptFlagGetter('disableInteractionManager', false);\n\n/**\n * Enables access to the host tree in Fabric using DOM-compatible APIs.\n */\nexport const enableAccessToHostTreeInFabric                  = createJavaScriptFlagGetter('enableAccessToHostTreeInFabric', false);\n\n/**\n * Enables an experimental to use the proper clearIntermediate instead of calling the wrong clearTimeout and canceling another timer.\n */\nexport const enableAnimatedClearImmediateFix                  = createJavaScriptFlagGetter('enableAnimatedClearImmediateFix', true);\n\n/**\n * Enables the DOM Document API, exposing instaces of document through `getRootNode` and `ownerDocument`, and providing access to the `documentElement` representing the root node. This flag will be short-lived, only to test the Document API specifically, and then it will be collapsed into the enableAccessToHostTreeInFabric flag.\n */\nexport const enableDOMDocumentAPI                  = createJavaScriptFlagGetter('enableDOMDocumentAPI', false);\n\n/**\n * Fixing an edge case where the current window size is not properly calculated with fast scrolling. Window size collapsed to 1 element even if windowSize more than the current amount of elements\n */\nexport const fixVirtualizeListCollapseWindowSize                  = createJavaScriptFlagGetter('fixVirtualizeListCollapseWindowSize', false);\n\n/**\n * Function used to enable / disabled Layout Animations in React Native.\n */\nexport const isLayoutAnimationEnabled                  = createJavaScriptFlagGetter('isLayoutAnimationEnabled', true);\n\n/**\n * Changes the cleanup of`AnimatedProps` to occur in a microtask instead of synchronously during effect cleanup (for unmount) or subsequent mounts (for updates).\n */\nexport const scheduleAnimatedCleanupInMicrotask                  = createJavaScriptFlagGetter('scheduleAnimatedCleanupInMicrotask', false);\n\n/**\n * Enables use of AnimatedObject for animating transform values.\n */\nexport const shouldUseAnimatedObjectForTransform                  = createJavaScriptFlagGetter('shouldUseAnimatedObjectForTransform', false);\n\n/**\n * removeClippedSubviews prop will be used as the default in FlatList on iOS to match Android\n */\nexport const shouldUseRemoveClippedSubviewsAsDefaultOnIOS                  = createJavaScriptFlagGetter('shouldUseRemoveClippedSubviewsAsDefaultOnIOS', false);\n\n/**\n * Enables use of setNativeProps in JS driven animations.\n */\nexport const shouldUseSetNativePropsInFabric                  = createJavaScriptFlagGetter('shouldUseSetNativePropsInFabric', true);\n\n/**\n * Enable a variant of TextInput that moves some state to refs to avoid unnecessary re-renders\n */\nexport const useRefsForTextInputState                  = createJavaScriptFlagGetter('useRefsForTextInputState', false);\n\n/**\n * Common flag for testing. Do NOT modify.\n */\nexport const commonTestFlag                  = createNativeFlagGetter('commonTestFlag', false);\n/**\n * Common flag for testing (without native implementation). Do NOT modify.\n */\nexport const commonTestFlagWithoutNativeImplementation                  = createNativeFlagGetter('commonTestFlagWithoutNativeImplementation', false);\n/**\n * Prevent FabricMountingManager from reordering mountitems, which may lead to invalid state on the UI thread\n */\nexport const disableMountItemReorderingAndroid                  = createNativeFlagGetter('disableMountItemReorderingAndroid', false);\n/**\n * When enabled, Andoid will accumulate updates in rawProps to reduce the number of mounting instructions for cascading rerenders.\n */\nexport const enableAccumulatedUpdatesInRawPropsAndroid                  = createNativeFlagGetter('enableAccumulatedUpdatesInRawPropsAndroid', false);\n/**\n * Feature flag to enable the new bridgeless architecture. Note: Enabling this will force enable the following flags: `useTurboModules` & `enableFabricRenderer.\n */\nexport const enableBridgelessArchitecture                  = createNativeFlagGetter('enableBridgelessArchitecture', false);\n/**\n * Enable prop iterator setter-style construction of Props in C++ (this flag is not used in Java).\n */\nexport const enableCppPropsIteratorSetter                  = createNativeFlagGetter('enableCppPropsIteratorSetter', false);\n/**\n * Feature flag to configure eager attachment of the root view/initialisation of the JS code.\n */\nexport const enableEagerRootViewAttachment                  = createNativeFlagGetter('enableEagerRootViewAttachment', false);\n/**\n * This feature flag enables logs for Fabric.\n */\nexport const enableFabricLogs                  = createNativeFlagGetter('enableFabricLogs', false);\n/**\n * Enables the use of the Fabric renderer in the whole app.\n */\nexport const enableFabricRenderer                  = createNativeFlagGetter('enableFabricRenderer', false);\n/**\n * iOS Views will clip to their padding box vs border box\n */\nexport const enableIOSViewClipToPaddingBox                  = createNativeFlagGetter('enableIOSViewClipToPaddingBox', false);\n/**\n * When enabled, Andoid will build and initiate image prefetch requests on ImageShadowNode::layout\n */\nexport const enableImagePrefetchingAndroid                  = createNativeFlagGetter('enableImagePrefetchingAndroid', false);\n/**\n * Trigger JS runtime GC on memory pressure event on iOS\n */\nexport const enableJSRuntimeGCOnMemoryPressureOnIOS                  = createNativeFlagGetter('enableJSRuntimeGCOnMemoryPressureOnIOS', false);\n/**\n * When enabled, LayoutAnimations API will animate state changes on Android.\n */\nexport const enableLayoutAnimationsOnAndroid                  = createNativeFlagGetter('enableLayoutAnimationsOnAndroid', false);\n/**\n * When enabled, LayoutAnimations API will animate state changes on iOS.\n */\nexport const enableLayoutAnimationsOnIOS                  = createNativeFlagGetter('enableLayoutAnimationsOnIOS', true);\n/**\n * Enables the reporting of long tasks through `PerformanceObserver`. Only works if the event loop is enabled.\n */\nexport const enableLongTaskAPI                  = createNativeFlagGetter('enableLongTaskAPI', false);\n/**\n * Parse CSS strings using the Fabric CSS parser instead of ViewConfig processing\n */\nexport const enableNativeCSSParsing                  = createNativeFlagGetter('enableNativeCSSParsing', false);\n/**\n * Use BackgroundDrawable and BorderDrawable instead of CSSBackgroundDrawable\n */\nexport const enableNewBackgroundAndBorderDrawables                  = createNativeFlagGetter('enableNewBackgroundAndBorderDrawables', false);\n/**\n * Moves execution of pre-mount items to outside the choregrapher in the main thread, so we can estimate idle time more precisely (Android only).\n */\nexport const enablePreciseSchedulingForPremountItemsOnAndroid                  = createNativeFlagGetter('enablePreciseSchedulingForPremountItemsOnAndroid', false);\n/**\n * When enabled, Android will receive prop updates based on the differences between the last rendered shadow node and the last committed shadow node.\n */\nexport const enablePropsUpdateReconciliationAndroid                  = createNativeFlagGetter('enablePropsUpdateReconciliationAndroid', false);\n/**\n * Report paint time inside the Event Timing API implementation (PerformanceObserver).\n */\nexport const enableReportEventPaintTime                  = createNativeFlagGetter('enableReportEventPaintTime', false);\n/**\n * Dispatches state updates synchronously in Fabric (e.g.: updates the scroll position in the shadow tree synchronously from the main thread).\n */\nexport const enableSynchronousStateUpdates                  = createNativeFlagGetter('enableSynchronousStateUpdates', false);\n/**\n * Ensures that JavaScript always has a consistent view of the state of the UI (e.g.: commits done in other threads are not immediately propagated to JS during its execution).\n */\nexport const enableUIConsistency                  = createNativeFlagGetter('enableUIConsistency', false);\n/**\n * Enables View Culling: as soon as a view goes off screen, it can be reused anywhere in the UI and pieced together with other items to create new UI elements.\n */\nexport const enableViewCulling                  = createNativeFlagGetter('enableViewCulling', false);\n/**\n * Enables View Recycling. When enabled, individual ViewManagers must still opt-in.\n */\nexport const enableViewRecycling                  = createNativeFlagGetter('enableViewRecycling', false);\n/**\n * Enables View Recycling for <Text> via ReactTextView/ReactTextViewManager.\n */\nexport const enableViewRecyclingForText                  = createNativeFlagGetter('enableViewRecyclingForText', true);\n/**\n * Enables View Recycling for <View> via ReactViewGroup/ReactViewManager.\n */\nexport const enableViewRecyclingForView                  = createNativeFlagGetter('enableViewRecyclingForView', true);\n/**\n * When enabled, rawProps in Props will not include Yoga specific props.\n */\nexport const excludeYogaFromRawProps                  = createNativeFlagGetter('excludeYogaFromRawProps', false);\n/**\n * Fixes a bug in Differentiator where parent views may be referenced before they're created\n */\nexport const fixDifferentiatorEmittingUpdatesWithWrongParentTag                  = createNativeFlagGetter('fixDifferentiatorEmittingUpdatesWithWrongParentTag', true);\n/**\n * Uses the default event priority instead of the discreet event priority by default when dispatching events from Fabric to React.\n */\nexport const fixMappingOfEventPrioritiesBetweenFabricAndReact                  = createNativeFlagGetter('fixMappingOfEventPrioritiesBetweenFabricAndReact', false);\n/**\n * Fixes a limitation on Android where the mounting coordinator would report there are no pending transactions but some of them were actually not processed due to the use of the push model.\n */\nexport const fixMountingCoordinatorReportedPendingTransactionsOnAndroid                  = createNativeFlagGetter('fixMountingCoordinatorReportedPendingTransactionsOnAndroid', false);\n/**\n * Flag determining if the React Native DevTools (Fusebox) CDP backend should be enabled in release builds. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const fuseboxEnabledRelease                  = createNativeFlagGetter('fuseboxEnabledRelease', false);\n/**\n * Enable network inspection support in the React Native DevTools CDP backend. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const fuseboxNetworkInspectionEnabled                  = createNativeFlagGetter('fuseboxNetworkInspectionEnabled', false);\n/**\n * Only enqueue Choreographer calls if there is an ongoing animation, instead of enqueueing every frame.\n */\nexport const lazyAnimationCallbacks                  = createNativeFlagGetter('lazyAnimationCallbacks', false);\n/**\n * When enabled, mutex _turboModuleManagerDelegateMutex in RCTTurboModuleManager will not be used\n */\nexport const removeTurboModuleManagerDelegateMutex                  = createNativeFlagGetter('removeTurboModuleManagerDelegateMutex', false);\n/**\n * Throw an exception instead of deadlocking when a TurboModule that requires main queue setup is initialized during a synchronous render on iOS.\n */\nexport const throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS                  = createNativeFlagGetter('throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS', false);\n/**\n * Enables storing js caller stack when creating promise in native module. This is useful in case of Promise rejection and tracing the cause.\n */\nexport const traceTurboModulePromiseRejectionsOnAndroid                  = createNativeFlagGetter('traceTurboModulePromiseRejectionsOnAndroid', false);\n/**\n * When enabled, runtime shadow node references will be updated during the commit. This allows running RSNRU from any thread without corrupting the renderer state.\n */\nexport const updateRuntimeShadowNodeReferencesOnCommit                  = createNativeFlagGetter('updateRuntimeShadowNodeReferencesOnCommit', false);\n/**\n * In Bridgeless mode, use the always available javascript error reporting pipeline.\n */\nexport const useAlwaysAvailableJSErrorHandling                  = createNativeFlagGetter('useAlwaysAvailableJSErrorHandling', false);\n/**\n * If true, focusing in ReactEditText will mainly use stock Android requestFocus() behavior. If false it will use legacy custom focus behavior.\n */\nexport const useEditTextStockAndroidFocusBehavior                  = createNativeFlagGetter('useEditTextStockAndroidFocusBehavior', true);\n/**\n * Should this application enable the Fabric Interop Layer for Android? If yes, the application will behave so that it can accept non-Fabric components and render them on Fabric. This toggle is controlling extra logic such as custom event dispatching that are needed for the Fabric Interop Layer to work correctly.\n */\nexport const useFabricInterop                  = createNativeFlagGetter('useFabricInterop', false);\n/**\n * When enabled, the native view configs are used in bridgeless mode.\n */\nexport const useNativeViewConfigsInBridgelessMode                  = createNativeFlagGetter('useNativeViewConfigsInBridgelessMode', false);\n/**\n * Uses an optimized mechanism for event batching on Android that does not need to wait for a Choreographer frame callback.\n */\nexport const useOptimizedEventBatchingOnAndroid                  = createNativeFlagGetter('useOptimizedEventBatchingOnAndroid', false);\n/**\n * Instead of using folly::dynamic as internal representation in RawProps and RawValue, use jsi::Value\n */\nexport const useRawPropsJsiValue                  = createNativeFlagGetter('useRawPropsJsiValue', false);\n/**\n * Use the state stored on the source shadow node when cloning it instead of reading in the most recent state on the shadow node family.\n */\nexport const useShadowNodeStateOnClone                  = createNativeFlagGetter('useShadowNodeStateOnClone', false);\n/**\n * In Bridgeless mode, should legacy NativeModules use the TurboModule system?\n */\nexport const useTurboModuleInterop                  = createNativeFlagGetter('useTurboModuleInterop', false);\n/**\n * When enabled, NativeModules will be executed by using the TurboModule system\n */\nexport const useTurboModules                  = createNativeFlagGetter('useTurboModules', false);\n\n/**\n * Overrides the feature flags with the provided methods.\n * NOTE: Only JS-only flags can be overridden from JavaScript using this API.\n */\nexport const override = setOverrides;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n             \n                                \n                                         \n                                   \n\nimport NativeReactNativeFeatureFlags from './specs/NativeReactNativeFeatureFlags';\n\nconst accessedFeatureFlags              = new Set();\nlet overrides                                         ;\n\n                                \n\n// This defines the types for the overrides object, whose methods also receive\n// the default value as a parameter.\n                                       \n                                                               \n   \n\nfunction createGetter                              (\n  configName        ,\n  customValueGetter            ,\n  defaultValue   ,\n)            {\n  let cachedValue    ;\n\n  return () => {\n    if (cachedValue == null) {\n      cachedValue = customValueGetter() ?? defaultValue;\n    }\n    return cachedValue;\n  };\n}\n\nexport function createJavaScriptFlagGetter \n                                          \n (\n  configName   ,\n  defaultValue                                              ,\n)                                                       {\n  return createGetter(\n    configName,\n    () => {\n      accessedFeatureFlags.add(configName);\n      return overrides?.[configName]?.(defaultValue);\n    },\n    defaultValue,\n  );\n}\n\n                                                                              \n\nexport function createNativeFlagGetter                              (\n  configName   ,\n  defaultValue                                                  ,\n  skipUnavailableNativeModuleError          = false,\n)                                                           {\n  return createGetter(\n    configName,\n    () => {\n      maybeLogUnavailableNativeModuleError(configName);\n      return NativeReactNativeFeatureFlags?.[configName]?.();\n    },\n    defaultValue,\n  );\n}\n\nexport function getOverrides()                                          {\n  return overrides;\n}\n\nexport function setOverrides(\n  newOverrides                                        ,\n)       {\n  if (overrides != null) {\n    throw new Error('Feature flags cannot be overridden more than once');\n  }\n\n  if (accessedFeatureFlags.size > 0) {\n    const accessedFeatureFlagsStr = Array.from(accessedFeatureFlags).join(', ');\n    throw new Error(\n      `Feature flags were accessed before being overridden: ${accessedFeatureFlagsStr}`,\n    );\n  }\n\n  overrides = newOverrides;\n}\n\nconst reportedConfigNames              = new Set();\n\nfunction maybeLogUnavailableNativeModuleError(configName        )       {\n  if (!NativeReactNativeFeatureFlags && !reportedConfigNames.has(configName)) {\n    reportedConfigNames.add(configName);\n    console.error(\n      `Could not access feature flag '${configName}' because native module method was not available`,\n    );\n  }\n}\n"],"names":["_default","NativeReactNativeFeatureFlags","_TurboModuleRegistry","colorAttributes","_processColor","ReactNativeStyleAttributes","_processAspectRatio","_sizesDiffer","_processTransform","_processTransformOrigin","_NativeReactNativeFeatureFlags","_ReactNativeFeatureFlags","_processFilter","_processBoxShadow","_processBackgroundImage","_processFontVariant","PlatformColor","normalizeColorObject","processColorObject","names","color","normalizeColor","require","normalizedColor","_normalizecolors","invariant","processAspectRatio","aspectRatio","__DEV__","matches","s","hasNonNumericValues","n","Number","processBackgroundImage","processColor","DIRECTION_KEYWORD_REGEX","ANGLE_UNIT_REGEX","DEFAULT_DIRECTION","backgroundImage","result","parseCSSLinearGradient","Array","bgImage","processedColorStops","index","colorStop","positions","position","processedColor","position1","direction","bgDirection","parsedAngle","getAngleInDegrees","parsedDirection","getDirectionForKeyword","cssString","gradients","match","linearGradientRegex","gradientContent","parts","trimmedDirection","colorStopsString","colorStops","stops","prevStop","i","stop","trimmedStop","colorStopParts","getPositionFromCSSValue","position2","color1","processedColor1","position3","processedColor2","normalized","angle","_match","value","unit","numericValue","parseFloat","Math","processBoxShadow","rawBoxShadows","boxShadowList","parseBoxShadowString","rawBoxShadow","parsedBoxShadow","arg","parseLength","bS","boxShadow","offsetX","offsetY","keywordDetectedAfterLength","lengthCount","args","length","argsWithUnitsRegex","Platform","undefined","processedColorObj","processFilter","filter","regex","filterName","dropShadow","parseDropShadow","camelizedName","amount","_getFilterAmount","filterFunction","filterFunction1","_Object_entries_","filterName1","filterValue","dropShadow1","amount1","resultObject","TypeError","filterArgs","filterArgAsNumber","RegExp","isNaN","rawDropShadow","parseDropShadowString","parsedDropShadow","processFontVariant","fontVariant","Boolean","stringifySafe","processTransform","transform","transformArray","_getKeyAndValueFromCSSTransform1","key","_validateTransforms","_getKeyAndValueFromCSSTransform","_args_match","parsedArgs","missingUnitOfMeasurement","unitOfMeasurement","argMatches","value1","unitOfMeasurement1","transformation","keys","Object","console","_validateTransform","multivalueTransforms","processTransformOrigin","INDEX_X","INDEX_Y","INDEX_Z","transformOrigin","transformOriginString","transformOriginArray","outer","nextIndex","valueLower","_invariant","horizontal","_validateTransformOrigin","_transformOrigin","x","y","z","dummySize","sizesDiffer","one","two","defaultedOne","defaultedTwo","animatedShouldDebounceQueueFlush","animatedShouldUseSingleOp","avoidStateUpdateInAnimatedPropsMemo","commonTestFlag","commonTestFlagWithoutNativeImplementation","disableInteractionManager","disableMountItemReorderingAndroid","enableAccessToHostTreeInFabric","enableAccumulatedUpdatesInRawPropsAndroid","enableAnimatedClearImmediateFix","enableBridgelessArchitecture","enableCppPropsIteratorSetter","enableDOMDocumentAPI","enableEagerRootViewAttachment","enableFabricLogs","enableFabricRenderer","enableIOSViewClipToPaddingBox","enableImagePrefetchingAndroid","enableJSRuntimeGCOnMemoryPressureOnIOS","enableLayoutAnimationsOnAndroid","enableLayoutAnimationsOnIOS","enableLongTaskAPI","enableNativeCSSParsing","enableNewBackgroundAndBorderDrawables","enablePreciseSchedulingForPremountItemsOnAndroid","enablePropsUpdateReconciliationAndroid","enableReportEventPaintTime","enableSynchronousStateUpdates","enableUIConsistency","enableViewCulling","enableViewRecycling","enableViewRecyclingForText","enableViewRecyclingForView","excludeYogaFromRawProps","fixDifferentiatorEmittingUpdatesWithWrongParentTag","fixMappingOfEventPrioritiesBetweenFabricAndReact","fixMountingCoordinatorReportedPendingTransactionsOnAndroid","fixVirtualizeListCollapseWindowSize","fuseboxEnabledRelease","fuseboxNetworkInspectionEnabled","isLayoutAnimationEnabled","jsOnlyTestFlag","lazyAnimationCallbacks","override","removeTurboModuleManagerDelegateMutex","scheduleAnimatedCleanupInMicrotask","shouldUseAnimatedObjectForTransform","shouldUseRemoveClippedSubviewsAsDefaultOnIOS","shouldUseSetNativePropsInFabric","throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS","traceTurboModulePromiseRejectionsOnAndroid","updateRuntimeShadowNodeReferencesOnCommit","useAlwaysAvailableJSErrorHandling","useEditTextStockAndroidFocusBehavior","useFabricInterop","useNativeViewConfigsInBridgelessMode","useOptimizedEventBatchingOnAndroid","useRawPropsJsiValue","useRefsForTextInputState","useShadowNodeStateOnClone","useTurboModuleInterop","useTurboModules","_ReactNativeFeatureFlagsBase","createJavaScriptFlagGetter","createNativeFlagGetter","getOverrides","setOverrides","accessedFeatureFlags","Set","overrides","createGetter","configName","customValueGetter","defaultValue","cachedValue","ref","maybeLogUnavailableNativeModuleError","newOverrides","Error","accessedFeatureFlagsStr","reportedConfigNames"],"mappings":"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"}