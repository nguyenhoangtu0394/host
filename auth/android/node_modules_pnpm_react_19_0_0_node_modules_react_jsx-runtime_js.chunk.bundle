"use strict";
(self["webpackChunksas_auth"] = self["webpackChunksas_auth"] || []).push([["node_modules_pnpm_react_19_0_0_node_modules_react_jsx-runtime_js"], {
78190: (function (__unused_webpack_module, exports) {
/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 
var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
function jsxProd(type, config, maybeKey) {
    var key = null;
    void 0 !== maybeKey && (key = "" + maybeKey);
    void 0 !== config.key && (key = "" + config.key);
    if ("key" in config) {
        maybeKey = {};
        for(var propName in config)"key" !== propName && (maybeKey[propName] = config[propName]);
    } else maybeKey = config;
    config = maybeKey.ref;
    return {
        $$typeof: REACT_ELEMENT_TYPE,
        type: type,
        key: key,
        ref: void 0 !== config ? config : null,
        props: maybeKey
    };
}
exports.Fragment = REACT_FRAGMENT_TYPE;
exports.jsx = jsxProd;
exports.jsxs = jsxProd;


}),
7100: (function (module, __unused_webpack_exports, __webpack_require__) {

if (true) {
    module.exports = __webpack_require__(78190);
} else {}


}),

}]);//# sourceMappingURL=node_modules_pnpm_react_19_0_0_node_modules_react_jsx-runtime_js.chunk.bundle.map?platform=android