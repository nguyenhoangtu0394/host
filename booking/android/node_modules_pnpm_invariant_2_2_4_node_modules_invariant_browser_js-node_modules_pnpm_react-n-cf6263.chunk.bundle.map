{"version":3,"file":"node_modules_pnpm_invariant_2_2_4_node_modules_invariant_browser_js-node_modules_pnpm_react-n-cf6263.chunk.bundle","sources":["webpack://sas-booking/../../node_modules/.pnpm/invariant@2.2.4/node_modules/invariant/browser.js","webpack://sas-booking/../../node_modules/.pnpm/react-native@0.78.2_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_lxx7t222qmfpalxrb3o3afwpwm/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.js","webpack://sas-booking/../../node_modules/.pnpm/react-native@0.78.2_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_lxx7t222qmfpalxrb3o3afwpwm/node_modules/react-native/Libraries/Utilities/NativePlatformConstantsAndroid.js","webpack://sas-booking/../../node_modules/.pnpm/react-native@0.78.2_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_lxx7t222qmfpalxrb3o3afwpwm/node_modules/react-native/Libraries/Utilities/codegenNativeComponent.js","webpack://sas-booking/../../node_modules/.pnpm/react-native@0.78.2_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_lxx7t222qmfpalxrb3o3afwpwm/node_modules/react-native/src/private/specs/modules/NativePlatformConstantsAndroid.js","webpack://sas-booking/../../node_modules/.pnpm/react-native@0.78.2_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_lxx7t222qmfpalxrb3o3afwpwm/node_modules/react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js","webpack://sas-booking/../../node_modules/.pnpm/react-native@0.78.2_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_lxx7t222qmfpalxrb3o3afwpwm/node_modules/react-native/Libraries/Utilities/Platform.android.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","'use strict';\n\n                                                                        \nconst createReactNativeComponentClass = require('../Renderer/shims/createReactNativeComponentClass').default;\nconst getNativeComponentAttributes = require('./getNativeComponentAttributes');\nconst requireNativeComponent =           (uiViewClassName        )                   => ((createReactNativeComponentClass(uiViewClassName, () => getNativeComponentAttributes(uiViewClassName))     )                  );\nexport default requireNativeComponent;","export * from '../../src/private/specs/modules/NativePlatformConstantsAndroid';\nimport NativePlatformConstantsAndroid from '../../src/private/specs/modules/NativePlatformConstantsAndroid';\nexport default NativePlatformConstantsAndroid;","                                                                                     \nimport requireNativeComponent from '../../Libraries/ReactNative/requireNativeComponent';\nimport UIManager from '../ReactNative/UIManager';\n                           \n                          \n                              \n                                        \n                                                        \n    \n                                                      \nfunction codegenNativeComponent              (componentName        , options          )                             {\n  if (global.RN$Bridgeless === true && __DEV__) {\n    console.warn(`Codegen didn't run for ${componentName}. This will be an error in the future. Make sure you are using @react-native/babel-preset when building your JavaScript code.`);\n  }\n  let componentNameInUse = options && options.paperComponentName != null ? options.paperComponentName : componentName;\n  if (options != null && options.paperComponentNameDeprecated != null) {\n    if (UIManager.hasViewManagerConfig(componentName)) {\n      componentNameInUse = componentName;\n    } else if (options.paperComponentNameDeprecated != null && UIManager.hasViewManagerConfig(options.paperComponentNameDeprecated)) {\n      componentNameInUse = options.paperComponentNameDeprecated;\n    } else {\n      throw new Error(`Failed to find native component for either ${componentName} or ${options.paperComponentNameDeprecated ?? '(unknown)'}`);\n    }\n  }\n  return (requireNativeComponent       (componentNameInUse)                      );\n}\nexport default codegenNativeComponent;","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                          \n                \n                \n                \n                      \n   \n                                         \n                     \n                                \n                                                \n                  \n                  \n                 \n                      \n                \n                      \n                 \n                \n                       \n   \n                                           \n                                                \n                              \n \nexport default (TurboModuleRegistry.getEnforcing      ('PlatformConstants')      );","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noformat\n * @nolint\n *       strict-local\n * @generated SignedSource<<52163887de05f1cff05388145cf85b3b>>\n */\n\n'use strict';\n\nimport {ReactNativeViewConfigRegistry} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\nimport {               } from './ReactNativeTypes';\n\nconst {register} = ReactNativeViewConfigRegistry;\n\n/**\n * Creates a renderable ReactNative host component.\n * Use this method for view configs that are loaded from UIManager.\n * Use createReactNativeComponentClass() for view configs defined within JavaScript.\n *\n * @param {string} config iOS View configuration.\n * @private\n */\nconst createReactNativeComponentClass = function (\n  name        ,\n  callback                  ,\n)         {\n  return register(name, callback);\n};\n\nexport default createReactNativeComponentClass;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n             \n                           \n                     \n                         \n\nimport NativePlatformConstantsAndroid from './NativePlatformConstantsAndroid';\n\nconst Platform               = {\n  __constants: null,\n  OS: 'android',\n  // $FlowFixMe[unsafe-getters-setters]\n  get Version()         {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.Version;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get constants()    \n                       \n                                  \n                          \n                    \n                    \n                    \n                          \n       \n                    \n                    \n                   \n                        \n                  \n                        \n                   \n                  \n                         \n     {\n    // $FlowFixMe[object-this-reference]\n    if (this.__constants == null) {\n      // $FlowFixMe[object-this-reference]\n      this.__constants = NativePlatformConstantsAndroid.getConstants();\n    }\n    // $FlowFixMe[object-this-reference]\n    return this.__constants;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTesting()          {\n    if (__DEV__) {\n      // $FlowFixMe[object-this-reference]\n      return this.constants.isTesting;\n    }\n    return false;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isDisableAnimations()          {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.isDisableAnimations ?? this.isTesting;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTV()          {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.uiMode === 'tv';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isVision()          {\n    return false;\n  },\n  select:    (spec                       )    =>\n    'android' in spec\n      ? // $FlowFixMe[incompatible-return]\n        spec.android\n      : 'native' in spec\n        ? // $FlowFixMe[incompatible-return]\n          spec.native\n        : // $FlowFixMe[incompatible-return]\n          spec.default,\n};\n\nmodule.exports = Platform;\n"],"names":["invariant","condition","format","a","b","c","d","e","f","process","undefined","Error","error","args","argIndex","module","_default","createReactNativeComponentClass","require","getNativeComponentAttributes","requireNativeComponent","uiViewClassName","_NativePlatformConstantsAndroid","codegenNativeComponent","componentName","options","global","__DEV__","console","componentNameInUse","_UIManager","_requireNativeComponent","_TurboModuleRegistry","register","_ReactNativePrivateInterface","name","callback","Platform","spec"],"mappings":"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"}