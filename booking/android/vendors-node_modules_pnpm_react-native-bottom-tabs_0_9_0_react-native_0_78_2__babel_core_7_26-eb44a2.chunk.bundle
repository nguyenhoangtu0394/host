(self["webpackChunksas_booking"] = self["webpackChunksas_booking"] || []).push([["vendors-node_modules_pnpm_react-native-bottom-tabs_0_9_0_react-native_0_78_2__babel_core_7_26-eb44a2"], {
66568: (function (__unused_webpack_module, exports) {
"use strict";

function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
            else newObj[key] = obj[key];
        }
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
exports._ = _interop_require_wildcard;


}),
64240: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _object_spread = __webpack_require__(41112);
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports["default"] = exports.__INTERNAL_VIEW_CONFIG = void 0;
var _codegenNativeComponent = _interopRequireDefault(__webpack_require__(38906));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var NativeComponentRegistry = __webpack_require__(33368);
var ConditionallyIgnoredEventHandlers = (__webpack_require__(74947)/* .ConditionallyIgnoredEventHandlers */.ConditionallyIgnoredEventHandlers);
var nativeComponentName = 'RNCTabView';
var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {
    uiViewClassName: 'RNCTabView',
    directEventTypes: {
        topPageSelected: {
            registrationName: 'onPageSelected'
        },
        topTabLongPress: {
            registrationName: 'onTabLongPress'
        },
        topTabBarMeasured: {
            registrationName: 'onTabBarMeasured'
        },
        topNativeLayout: {
            registrationName: 'onNativeLayout'
        }
    },
    validAttributes: _object_spread._({
        items: true,
        selectedPage: true,
        icons: true,
        tabBarHidden: true,
        labeled: true,
        sidebarAdaptable: true,
        scrollEdgeAppearance: true,
        barTintColor: {
            process: (__webpack_require__(31189)/* ["default"] */["default"])
        },
        translucent: true,
        rippleColor: {
            process: (__webpack_require__(31189)/* ["default"] */["default"])
        },
        activeTintColor: {
            process: (__webpack_require__(31189)/* ["default"] */["default"])
        },
        inactiveTintColor: {
            process: (__webpack_require__(31189)/* ["default"] */["default"])
        },
        disablePageAnimations: true,
        activeIndicatorColor: {
            process: (__webpack_require__(31189)/* ["default"] */["default"])
        },
        hapticFeedbackEnabled: true,
        fontFamily: true,
        fontWeight: true,
        fontSize: true
    }, ConditionallyIgnoredEventHandlers({
        onPageSelected: true,
        onTabLongPress: true,
        onTabBarMeasured: true,
        onNativeLayout: true
    }))
};
var _default = exports["default"] = NativeComponentRegistry.get(nativeComponentName, ()=>__INTERNAL_VIEW_CONFIG);


}),
86468: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _sliced_to_array = __webpack_require__(17738);
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports["default"] = void 0;
var _react = _interopRequireDefault(__webpack_require__(92888));
var _reactFreeze = __webpack_require__(73464);
var _jsxRuntime = __webpack_require__(7100);
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
// Animation delay for freeze effect.
var ANIMATION_DELAY = 200;
// This component delays the freeze effect by animation delay.
// So that the screen is not frozen immediately causing background flash.
function DelayedFreeze(ref) {
    var freeze = ref.freeze, children = ref.children;
    // flag used for determining whether freeze should be enabled
    var _react_default_useState = _sliced_to_array._(_react.default.useState(false), 2), freezeState = _react_default_useState[0], setFreezeState = _react_default_useState[1];
    _react.default.useEffect(()=>{
        var id = setTimeout(()=>{
            setFreezeState(freeze);
        }, ANIMATION_DELAY);
        return ()=>{
            clearTimeout(id);
        };
    }, [
        freeze
    ]);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactFreeze.Freeze, {
        freeze: freeze ? freezeState : false,
        children: children
    });
}
var _default = exports["default"] = DelayedFreeze; //# sourceMappingURL=DelayedFreeze.js.map


}),
39060: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _object_without_properties = __webpack_require__(45922);
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.SceneMap = SceneMap;
var React = _interopRequireWildcard(__webpack_require__(92888));
var _jsxRuntime = __webpack_require__(7100);
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != typeof e && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
var SceneComponent = /*#__PURE__*/ React.memo((_param)=>{
    var component = _param.component, rest = _object_without_properties._(_param, [
        "component"
    ]);
    return /*#__PURE__*/ React.createElement(component, rest);
});
SceneComponent.displayName = 'SceneComponent';
function SceneMap(scenes) {
    return (ref)=>{
        var route = ref.route, jumpTo = ref.jumpTo;
        var component = scenes[route.key];
        if (!component) {
            return null;
        }
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(SceneComponent, {
            jumpTo: jumpTo,
            component: component,
            route: route
        }, route.key);
    };
} //# sourceMappingURL=SceneMap.js.map


}),
3885: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _object_spread = __webpack_require__(41112);
var _object_spread_props = __webpack_require__(2898);
var _object_without_properties = __webpack_require__(45922);
var _sliced_to_array = __webpack_require__(17738);
var _to_consumable_array = __webpack_require__(58678);
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports["default"] = void 0;
var _react = _interopRequireDefault(__webpack_require__(92888));
var _reactNative = __webpack_require__(38160);
var _BottomTabBarHeightContext = __webpack_require__(73718);
var _TabViewNativeComponent = _interopRequireDefault(__webpack_require__(64240));
var _useLatestCallback = _interopRequireDefault(__webpack_require__(34467));
var _DelayedFreeze = _interopRequireDefault(__webpack_require__(86468));
var _jsxRuntime = __webpack_require__(7100);
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
//@ts-ignore
var isAppleSymbol = (icon)=>icon === null || icon === void 0 ? void 0 : icon.sfSymbol;
var ANDROID_MAX_TABS = 6;
var TabView = (_param)=>{
    var navigationState = _param.navigationState, renderScene = _param.renderScene, onIndexChange = _param.onIndexChange, onTabLongPress = _param.onTabLongPress, getBadge = _param.getBadge, rippleColor = _param.rippleColor, activeTintColor = _param.tabBarActiveTintColor, inactiveTintColor = _param.tabBarInactiveTintColor, _param_getLazy = _param.getLazy, getLazy = _param_getLazy === void 0 ? (ref)=>{
        var route = ref.route;
        return route.lazy;
    } : _param_getLazy, _param_getLabelText = _param.getLabelText, getLabelText = _param_getLabelText === void 0 ? (ref)=>{
        var route = ref.route;
        return route.title;
    } : _param_getLabelText, _param_getIcon = _param.getIcon, getIcon = _param_getIcon === void 0 ? (ref)=>{
        var route = ref.route, focused = ref.focused;
        return route.unfocusedIcon ? focused ? route.focusedIcon : route.unfocusedIcon : route.focusedIcon;
    } : _param_getIcon, _param_getHidden = _param.getHidden, getHidden = _param_getHidden === void 0 ? (ref)=>{
        var route = ref.route;
        return route.hidden;
    } : _param_getHidden, _param_getActiveTintColor = _param.getActiveTintColor, getActiveTintColor = _param_getActiveTintColor === void 0 ? (ref)=>{
        var route = ref.route;
        return route.activeTintColor;
    } : _param_getActiveTintColor, _param_getTestID = _param.getTestID, getTestID = _param_getTestID === void 0 ? (ref)=>{
        var route = ref.route;
        return route.testID;
    } : _param_getTestID, _param_hapticFeedbackEnabled = _param.hapticFeedbackEnabled, hapticFeedbackEnabled = _param_hapticFeedbackEnabled === void 0 ? false : _param_hapticFeedbackEnabled, _param_labeled = _param.// Android's native behavior is to show labels when there are less than 4 tabs. We leave it as undefined to use the platform default behavior.
    labeled, labeled = _param_labeled === void 0 ? _reactNative.Platform.OS !== 'android' ? true : undefined : _param_labeled, _param_getFreezeOnBlur = _param.getFreezeOnBlur, getFreezeOnBlur = _param_getFreezeOnBlur === void 0 ? (ref)=>{
        var route = ref.route;
        return route.freezeOnBlur;
    } : _param_getFreezeOnBlur, renderCustomTabBar = _param.tabBar, tabBarStyle = _param.tabBarStyle, tabLabelStyle = _param.tabLabelStyle, props = _object_without_properties._(_param, [
        "navigationState",
        "renderScene",
        "onIndexChange",
        "onTabLongPress",
        "getBadge",
        "rippleColor",
        "tabBarActiveTintColor",
        "tabBarInactiveTintColor",
        "getLazy",
        "getLabelText",
        "getIcon",
        "getHidden",
        "getActiveTintColor",
        "getTestID",
        "hapticFeedbackEnabled",
        "labeled",
        "getFreezeOnBlur",
        "tabBar",
        "tabBarStyle",
        "tabLabelStyle"
    ]);
    // @ts-ignore
    var focusedKey = navigationState.routes[navigationState.index].key;
    var _react_default_useState = _sliced_to_array._(_react.default.useState(0), 2), tabBarHeight = _react_default_useState[0], setTabBarHeight = _react_default_useState[1];
    var _react_default_useState1 = _sliced_to_array._(_react.default.useState(), 2), measuredDimensions = _react_default_useState1[0], setMeasuredDimensions = _react_default_useState1[1];
    var trimmedRoutes = _react.default.useMemo(()=>{
        if (_reactNative.Platform.OS === 'android' && navigationState.routes.length > ANDROID_MAX_TABS) {
            console.warn(`TabView only supports up to ${ANDROID_MAX_TABS} tabs on Android`);
            return navigationState.routes.slice(0, ANDROID_MAX_TABS);
        }
        return navigationState.routes;
    }, [
        navigationState.routes
    ]);
    /**
   * List of loaded tabs, tabs will be loaded when navigated to.
   */ var _react_default_useState2 = _sliced_to_array._(_react.default.useState([
        focusedKey
    ]), 2), loaded = _react_default_useState2[0], setLoaded = _react_default_useState2[1];
    if (!loaded.includes(focusedKey)) {
        // Set the current tab to be loaded if it was not loaded before
        setLoaded((loaded)=>_to_consumable_array._(loaded).concat([
                focusedKey
            ]));
    }
    var icons = _react.default.useMemo(()=>trimmedRoutes.map((route)=>getIcon({
                route,
                focused: route.key === focusedKey
            })), [
        focusedKey,
        getIcon,
        trimmedRoutes
    ]);
    var items = _react.default.useMemo(()=>trimmedRoutes.map((route, index)=>{
            var icon = icons[index];
            var isSfSymbol = isAppleSymbol(icon);
            if (_reactNative.Platform.OS === 'android' && isSfSymbol) {
                console.warn('SF Symbols are not supported on Android. Use require() or pass uri to load an image instead.');
            }
            return {
                key: route.key,
                title: getLabelText({
                    route
                }) ?? route.key,
                sfSymbol: isSfSymbol ? icon.sfSymbol : undefined,
                badge: getBadge === null || getBadge === void 0 ? void 0 : getBadge({
                    route
                }),
                activeTintColor: (0, _reactNative.processColor)(getActiveTintColor({
                    route
                })),
                hidden: getHidden === null || getHidden === void 0 ? void 0 : getHidden({
                    route
                }),
                testID: getTestID === null || getTestID === void 0 ? void 0 : getTestID({
                    route
                })
            };
        }), [
        trimmedRoutes,
        icons,
        getLabelText,
        getBadge,
        getActiveTintColor,
        getHidden,
        getTestID
    ]);
    var resolvedIconAssets = _react.default.useMemo(()=>// Pass empty object for icons that are not provided to avoid index mismatch on native side.
        icons.map((icon)=>icon && !isAppleSymbol(icon) ? _reactNative.Image.resolveAssetSource(icon) : {
                uri: ''
            }), [
        icons
    ]);
    var jumpTo = (0, _useLatestCallback.default)((key)=>{
        var index = trimmedRoutes.findIndex((route)=>route.key === key);
        onIndexChange(index);
    });
    var handleTabLongPress = _react.default.useCallback((ref)=>{
        var key = ref.nativeEvent.key;
        var index = trimmedRoutes.findIndex((route)=>route.key === key);
        onTabLongPress === null || onTabLongPress === void 0 ? void 0 : onTabLongPress(index);
    }, [
        trimmedRoutes,
        onTabLongPress
    ]);
    var handlePageSelected = _react.default.useCallback((ref)=>{
        var key = ref.nativeEvent.key;
        jumpTo(key);
    }, [
        jumpTo
    ]);
    var handleTabBarMeasured = _react.default.useCallback((ref)=>{
        var height = ref.nativeEvent.height;
        setTabBarHeight(height);
    }, [
        setTabBarHeight
    ]);
    var handleNativeLayout = _react.default.useCallback((ref)=>{
        var _ref_nativeEvent = ref.nativeEvent, width = _ref_nativeEvent.width, height = _ref_nativeEvent.height;
        setMeasuredDimensions({
            width,
            height
        });
    }, [
        setMeasuredDimensions
    ]);
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_BottomTabBarHeightContext.BottomTabBarHeightContext.Provider, {
        value: tabBarHeight,
        children: [
            /*#__PURE__*/ (0, _jsxRuntime.jsx)(_TabViewNativeComponent.default, _object_spread_props._(_object_spread._({}, props, tabLabelStyle), {
                style: styles.fullWidth,
                items: items,
                icons: renderCustomTabBar ? undefined : resolvedIconAssets,
                selectedPage: focusedKey,
                tabBarHidden: !!renderCustomTabBar,
                onTabLongPress: handleTabLongPress,
                onPageSelected: handlePageSelected,
                onTabBarMeasured: handleTabBarMeasured,
                onNativeLayout: handleNativeLayout,
                hapticFeedbackEnabled: hapticFeedbackEnabled,
                activeTintColor: activeTintColor,
                inactiveTintColor: inactiveTintColor,
                barTintColor: tabBarStyle === null || tabBarStyle === void 0 ? void 0 : tabBarStyle.backgroundColor,
                rippleColor: rippleColor,
                labeled: labeled,
                children: trimmedRoutes.map((route)=>{
                    if (getLazy({
                        route
                    }) !== false && !loaded.includes(route.key)) {
                        // Don't render a screen if we've never navigated to it
                        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.View, {
                            collapsable: false,
                            style: styles.fullWidth
                        }, route.key);
                    }
                    var focused = route.key === focusedKey;
                    var freeze = !focused ? getFreezeOnBlur({
                        route
                    }) : false;
                    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.View, {
                        style: [
                            styles.screen,
                            renderCustomTabBar ? styles.fullWidth : measuredDimensions
                        ],
                        collapsable: false,
                        pointerEvents: focused ? 'auto' : 'none',
                        accessibilityElementsHidden: !focused,
                        importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',
                        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_DelayedFreeze.default, {
                            freeze: !!freeze,
                            children: renderScene({
                                route,
                                jumpTo
                            })
                        })
                    }, route.key);
                })
            })),
            (renderCustomTabBar === null || renderCustomTabBar === void 0 ? void 0 : renderCustomTabBar()) ?? null
        ]
    });
};
var styles = _reactNative.StyleSheet.create({
    fullWidth: {
        width: '100%',
        height: '100%',
        flex: 1
    },
    screen: {
        position: 'absolute'
    }
});
var _default = exports["default"] = TabView; //# sourceMappingURL=TabView.js.map


}),
93889: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "BottomTabBarHeightContext", ({
    enumerable: true,
    get: function() {
        return _BottomTabBarHeightContext.BottomTabBarHeightContext;
    }
}));
Object.defineProperty(exports, "SceneMap", ({
    enumerable: true,
    get: function() {
        return _SceneMap.SceneMap;
    }
}));
exports["default"] = void 0;
Object.defineProperty(exports, "useBottomTabBarHeight", ({
    enumerable: true,
    get: function() {
        return _useBottomTabBarHeight.useBottomTabBarHeight;
    }
}));
var _TabView = _interopRequireDefault(__webpack_require__(3885));
var _SceneMap = __webpack_require__(39060);
var _useBottomTabBarHeight = __webpack_require__(44108);
var _BottomTabBarHeightContext = __webpack_require__(73718);
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Views
 */ var _default = exports["default"] = _TabView.default; /**
 * Utilities
 */  /**
 * Types
 */  //# sourceMappingURL=index.js.map


}),
73718: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.BottomTabBarHeightContext = void 0;
var React = _interopRequireWildcard(__webpack_require__(92888));
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != typeof e && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
var BottomTabBarHeightContext = exports.BottomTabBarHeightContext = /*#__PURE__*/ React.createContext(undefined); //# sourceMappingURL=BottomTabBarHeightContext.js.map


}),
44108: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.useBottomTabBarHeight = useBottomTabBarHeight;
var React = _interopRequireWildcard(__webpack_require__(92888));
var _BottomTabBarHeightContext = __webpack_require__(73718);
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != typeof e && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
function useBottomTabBarHeight() {
    var height = React.useContext(_BottomTabBarHeightContext.BottomTabBarHeightContext);
    if (height === undefined) {
        throw new Error("Couldn't find the bottom tab bar height. Are you inside a screen in Native Bottom Tab Navigator?");
    }
    return height;
} //# sourceMappingURL=useBottomTabBarHeight.js.map


}),
34467: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";

var React = __webpack_require__(92888);
var useIsomorphicLayoutEffect_1 = __webpack_require__(38299);
/**
 * React hook which returns the latest callback without changing the reference.
 */ // eslint-disable-next-line @typescript-eslint/ban-types
function useLatestCallback(callback) {
    var ref = React.useRef(callback);
    var latestCallback = React.useRef(function latestCallback() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++){
            args[_i] = arguments[_i];
        }
        return ref.current.apply(this, args);
    }).current;
    (0, useIsomorphicLayoutEffect_1.default)(function() {
        ref.current = callback;
    });
    return latestCallback;
}
module.exports = useLatestCallback;


}),
38299: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var react_1 = __webpack_require__(92888);
exports["default"] = react_1.useLayoutEffect;


}),
73464: (function (__unused_webpack_module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "Freeze", ({
    enumerable: true,
    get: function() {
        return Freeze;
    }
}));
var _interop_require_wildcard = __webpack_require__(66568);
var _jsxruntime = __webpack_require__(7100);
var _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(92888));
function Suspender(ref) {
    var freeze = ref.freeze, children = ref.children;
    var promiseCache = (0, _react.useRef)({}).current;
    if (freeze && !promiseCache.promise) {
        promiseCache.promise = new Promise((resolve)=>{
            promiseCache.resolve = resolve;
        });
        throw promiseCache.promise;
    } else if (freeze) {
        throw promiseCache.promise;
    } else if (promiseCache.promise) {
        promiseCache.resolve();
        promiseCache.promise = undefined;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Fragment, {
        children: children
    });
}
function Freeze(ref) {
    var freeze = ref.freeze, children = ref.children, _ref_placeholder = ref.placeholder, placeholder = _ref_placeholder === void 0 ? null : _ref_placeholder;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Suspense, {
        fallback: placeholder,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(Suspender, {
            freeze: freeze,
            children: children
        })
    });
}


}),

}]);//# sourceMappingURL=vendors-node_modules_pnpm_react-native-bottom-tabs_0_9_0_react-native_0_78_2__babel_core_7_26-eb44a2.chunk.bundle.map?platform=android